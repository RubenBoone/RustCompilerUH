Terminals unused in grammar

   ANDAND
   OROR
   AMPERSAND
   WHILE


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | program function

    3 function: FN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    4         | FN IDENTIFIER LPAREN parameter_list RPAREN ARROW type LBRACE statement_list RBRACE

    5 parameter_list: /* empty */
    6               | parameter_list COMMA parameter
    7               | parameter

    8 parameter: IDENTIFIER COLON type
    9          | expression

   10 type: INT
   11     | BOOL

   12 statement_list: /* empty */
   13               | statement_list statement
   14               | statement_list expression

   15 statement: let_statement
   16          | assign_statement
   17          | expression SEMICOLON
   18          | if_statement
   19          | print_statement SEMICOLON
   20          | declaration_statement SEMICOLON

   21 declaration_statement: LET mutability IDENTIFIER COLON type

   22 print_statement: PRINTSTRING
   23                | PRINTVAR

   24 let_statement: LET mutability IDENTIFIER COLON type EQ expression SEMICOLON
   25              | LET mutability IDENTIFIER EQ expression SEMICOLON
   26              | LET mutability IDENTIFIER EQ expression

   27 assign_statement: IDENTIFIER assignment_operator expression SEMICOLON
   28                 | IDENTIFIER assignment_operator if_expression SEMICOLON

   29 assignment_operator: EQ
   30                    | PLUSEQ
   31                    | MINUSEQ

   32 expression: value
   33           | function_call
   34           | IDENTIFIER
   35           | block_expression
   36           | expression PLUS expression
   37           | expression MINUS expression
   38           | expression STAR expression
   39           | expression SLASH expression

   40 if_expression: IF conditional LBRACE statement_list RBRACE
   41              | IF conditional LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE

   42 block_expression: LBRACE statement_list expression RBRACE

   43 function_call: IDENTIFIER LPAREN parameter_list RPAREN

   44 if_statement: IF conditional block_statement
   45             | IF conditional block_statement ELSE block_statement

   46 conditional: expression LT expression
   47            | expression LE expression
   48            | expression GT expression
   49            | expression GE expression
   50            | expression NE expression
   51            | expression EQEQ expression
   52            | NOT expression
   53            | TRUE
   54            | FALSE

   55 block_statement: LBRACE statement_list RBRACE

   56 value: DEC_LITERAL
   57      | TRUE
   58      | FALSE

   59 mutability: /* empty */
   60           | MUT


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENTIFIER (258) 3 4 8 21 24 25 26 27 28 34 43
PRINTVAR (259) 23
PRINTSTRING (260) 22
DEC_LITERAL (261) 56
TRUE (262) 53 57
FALSE (263) 54 58
FN (264) 3 4
LPAREN (265) 3 4 43
RPAREN (266) 3 4 43
ARROW (267) 4
LBRACE (268) 3 4 40 41 42 55
RBRACE (269) 3 4 40 41 42 55
SEMICOLON (270) 17 19 20 24 25 27 28
COLON (271) 8 21 24
LET (272) 21 24 25 26
EQ (273) 24 25 26 29
PLUS (274) 36
MINUS (275) 37
STAR (276) 38
SLASH (277) 39
PLUSEQ (278) 30
MINUSEQ (279) 31
ANDAND (280)
OROR (281)
NOT (282) 52
GT (283) 48
GE (284) 49
LT (285) 46
LE (286) 47
EQEQ (287) 51
NE (288) 50
AMPERSAND (289)
IF (290) 40 41 44 45
ELSE (291) 41 45
WHILE (292)
MUT (293) 60
COMMA (294) 6
INT (295) 10
BOOL (296) 11


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
program (43)
    on left: 1 2, on right: 0 2
function (44)
    on left: 3 4, on right: 2
parameter_list (45)
    on left: 5 6 7, on right: 3 4 6 43
parameter (46)
    on left: 8 9, on right: 6 7
type (47)
    on left: 10 11, on right: 4 8 21 24
statement_list (48)
    on left: 12 13 14, on right: 3 4 13 14 40 41 42 55
statement (49)
    on left: 15 16 17 18 19 20, on right: 13
declaration_statement (50)
    on left: 21, on right: 20
print_statement (51)
    on left: 22 23, on right: 19
let_statement (52)
    on left: 24 25 26, on right: 15
assign_statement (53)
    on left: 27 28, on right: 16
assignment_operator (54)
    on left: 29 30 31, on right: 27 28
expression (55)
    on left: 32 33 34 35 36 37 38 39, on right: 9 14 17 24 25 26 27
    36 37 38 39 42 46 47 48 49 50 51 52
if_expression (56)
    on left: 40 41, on right: 28
block_expression (57)
    on left: 42, on right: 35
function_call (58)
    on left: 43, on right: 33
if_statement (59)
    on left: 44 45, on right: 18
conditional (60)
    on left: 46 47 48 49 50 51 52 53 54, on right: 40 41 44 45
block_statement (61)
    on left: 55, on right: 44 45
value (62)
    on left: 56 57 58, on right: 32
mutability (63)
    on left: 59 60, on right: 21 24 25 26


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . function

    $end  shift, and go to state 2
    FN    shift, and go to state 3

    function  go to state 4


State 2

    0 $accept: program $end .

    $default  accept


State 3

    3 function: FN . IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    4         | FN . IDENTIFIER LPAREN parameter_list RPAREN ARROW type LBRACE statement_list RBRACE

    IDENTIFIER  shift, and go to state 5


State 4

    2 program: program function .

    $default  reduce using rule 2 (program)


State 5

    3 function: FN IDENTIFIER . LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    4         | FN IDENTIFIER . LPAREN parameter_list RPAREN ARROW type LBRACE statement_list RBRACE

    LPAREN  shift, and go to state 6


State 6

    3 function: FN IDENTIFIER LPAREN . parameter_list RPAREN LBRACE statement_list RBRACE
    4         | FN IDENTIFIER LPAREN . parameter_list RPAREN ARROW type LBRACE statement_list RBRACE

    IDENTIFIER   shift, and go to state 7
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11

    $default  reduce using rule 5 (parameter_list)

    parameter_list    go to state 12
    parameter         go to state 13
    expression        go to state 14
    block_expression  go to state 15
    function_call     go to state 16
    value             go to state 17


State 7

    8 parameter: IDENTIFIER . COLON type
   34 expression: IDENTIFIER .
   43 function_call: IDENTIFIER . LPAREN parameter_list RPAREN

    LPAREN  shift, and go to state 18
    COLON   shift, and go to state 19

    $default  reduce using rule 34 (expression)


State 8

   56 value: DEC_LITERAL .

    $default  reduce using rule 56 (value)


State 9

   57 value: TRUE .

    $default  reduce using rule 57 (value)


State 10

   58 value: FALSE .

    $default  reduce using rule 58 (value)


State 11

   42 block_expression: LBRACE . statement_list expression RBRACE

    $default  reduce using rule 12 (statement_list)

    statement_list  go to state 20


State 12

    3 function: FN IDENTIFIER LPAREN parameter_list . RPAREN LBRACE statement_list RBRACE
    4         | FN IDENTIFIER LPAREN parameter_list . RPAREN ARROW type LBRACE statement_list RBRACE
    6 parameter_list: parameter_list . COMMA parameter

    RPAREN  shift, and go to state 21
    COMMA   shift, and go to state 22


State 13

    7 parameter_list: parameter .

    $default  reduce using rule 7 (parameter_list)


State 14

    9 parameter: expression .
   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression

    PLUS   shift, and go to state 23
    MINUS  shift, and go to state 24
    STAR   shift, and go to state 25
    SLASH  shift, and go to state 26

    $default  reduce using rule 9 (parameter)


State 15

   35 expression: block_expression .

    $default  reduce using rule 35 (expression)


State 16

   33 expression: function_call .

    $default  reduce using rule 33 (expression)


State 17

   32 expression: value .

    $default  reduce using rule 32 (expression)


State 18

   43 function_call: IDENTIFIER LPAREN . parameter_list RPAREN

    IDENTIFIER   shift, and go to state 7
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11

    $default  reduce using rule 5 (parameter_list)

    parameter_list    go to state 27
    parameter         go to state 13
    expression        go to state 14
    block_expression  go to state 15
    function_call     go to state 16
    value             go to state 17


State 19

    8 parameter: IDENTIFIER COLON . type

    INT   shift, and go to state 28
    BOOL  shift, and go to state 29

    type  go to state 30


State 20

   13 statement_list: statement_list . statement
   14               | statement_list . expression
   42 block_expression: LBRACE statement_list . expression RBRACE

    IDENTIFIER   shift, and go to state 31
    PRINTVAR     shift, and go to state 32
    PRINTSTRING  shift, and go to state 33
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11
    LET          shift, and go to state 34
    IF           shift, and go to state 35

    statement              go to state 36
    declaration_statement  go to state 37
    print_statement        go to state 38
    let_statement          go to state 39
    assign_statement       go to state 40
    expression             go to state 41
    block_expression       go to state 15
    function_call          go to state 16
    if_statement           go to state 42
    value                  go to state 17


State 21

    3 function: FN IDENTIFIER LPAREN parameter_list RPAREN . LBRACE statement_list RBRACE
    4         | FN IDENTIFIER LPAREN parameter_list RPAREN . ARROW type LBRACE statement_list RBRACE

    ARROW   shift, and go to state 43
    LBRACE  shift, and go to state 44


State 22

    6 parameter_list: parameter_list COMMA . parameter

    IDENTIFIER   shift, and go to state 7
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11

    parameter         go to state 45
    expression        go to state 14
    block_expression  go to state 15
    function_call     go to state 16
    value             go to state 17


State 23

   36 expression: expression PLUS . expression

    IDENTIFIER   shift, and go to state 46
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11

    expression        go to state 47
    block_expression  go to state 15
    function_call     go to state 16
    value             go to state 17


State 24

   37 expression: expression MINUS . expression

    IDENTIFIER   shift, and go to state 46
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11

    expression        go to state 48
    block_expression  go to state 15
    function_call     go to state 16
    value             go to state 17


State 25

   38 expression: expression STAR . expression

    IDENTIFIER   shift, and go to state 46
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11

    expression        go to state 49
    block_expression  go to state 15
    function_call     go to state 16
    value             go to state 17


State 26

   39 expression: expression SLASH . expression

    IDENTIFIER   shift, and go to state 46
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11

    expression        go to state 50
    block_expression  go to state 15
    function_call     go to state 16
    value             go to state 17


State 27

    6 parameter_list: parameter_list . COMMA parameter
   43 function_call: IDENTIFIER LPAREN parameter_list . RPAREN

    RPAREN  shift, and go to state 51
    COMMA   shift, and go to state 22


State 28

   10 type: INT .

    $default  reduce using rule 10 (type)


State 29

   11 type: BOOL .

    $default  reduce using rule 11 (type)


State 30

    8 parameter: IDENTIFIER COLON type .

    $default  reduce using rule 8 (parameter)


State 31

   27 assign_statement: IDENTIFIER . assignment_operator expression SEMICOLON
   28                 | IDENTIFIER . assignment_operator if_expression SEMICOLON
   34 expression: IDENTIFIER .
   43 function_call: IDENTIFIER . LPAREN parameter_list RPAREN

    LPAREN   shift, and go to state 18
    EQ       shift, and go to state 52
    PLUSEQ   shift, and go to state 53
    MINUSEQ  shift, and go to state 54

    $default  reduce using rule 34 (expression)

    assignment_operator  go to state 55


State 32

   23 print_statement: PRINTVAR .

    $default  reduce using rule 23 (print_statement)


State 33

   22 print_statement: PRINTSTRING .

    $default  reduce using rule 22 (print_statement)


State 34

   21 declaration_statement: LET . mutability IDENTIFIER COLON type
   24 let_statement: LET . mutability IDENTIFIER COLON type EQ expression SEMICOLON
   25              | LET . mutability IDENTIFIER EQ expression SEMICOLON
   26              | LET . mutability IDENTIFIER EQ expression

    MUT  shift, and go to state 56

    $default  reduce using rule 59 (mutability)

    mutability  go to state 57


State 35

   44 if_statement: IF . conditional block_statement
   45             | IF . conditional block_statement ELSE block_statement

    IDENTIFIER   shift, and go to state 46
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 58
    FALSE        shift, and go to state 59
    LBRACE       shift, and go to state 11
    NOT          shift, and go to state 60

    expression        go to state 61
    block_expression  go to state 15
    function_call     go to state 16
    conditional       go to state 62
    value             go to state 17


State 36

   13 statement_list: statement_list statement .

    $default  reduce using rule 13 (statement_list)


State 37

   20 statement: declaration_statement . SEMICOLON

    SEMICOLON  shift, and go to state 63


State 38

   19 statement: print_statement . SEMICOLON

    SEMICOLON  shift, and go to state 64


State 39

   15 statement: let_statement .

    $default  reduce using rule 15 (statement)


State 40

   16 statement: assign_statement .

    $default  reduce using rule 16 (statement)


State 41

   14 statement_list: statement_list expression .
   17 statement: expression . SEMICOLON
   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   42 block_expression: LBRACE statement_list expression . RBRACE

    RBRACE     shift, and go to state 65
    SEMICOLON  shift, and go to state 66
    PLUS       shift, and go to state 23
    MINUS      shift, and go to state 24
    STAR       shift, and go to state 25
    SLASH      shift, and go to state 26

    $default  reduce using rule 14 (statement_list)


State 42

   18 statement: if_statement .

    $default  reduce using rule 18 (statement)


State 43

    4 function: FN IDENTIFIER LPAREN parameter_list RPAREN ARROW . type LBRACE statement_list RBRACE

    INT   shift, and go to state 28
    BOOL  shift, and go to state 29

    type  go to state 67


State 44

    3 function: FN IDENTIFIER LPAREN parameter_list RPAREN LBRACE . statement_list RBRACE

    $default  reduce using rule 12 (statement_list)

    statement_list  go to state 68


State 45

    6 parameter_list: parameter_list COMMA parameter .

    $default  reduce using rule 6 (parameter_list)


State 46

   34 expression: IDENTIFIER .
   43 function_call: IDENTIFIER . LPAREN parameter_list RPAREN

    LPAREN  shift, and go to state 18

    $default  reduce using rule 34 (expression)


State 47

   36 expression: expression . PLUS expression
   36           | expression PLUS expression .
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression

    STAR   shift, and go to state 25
    SLASH  shift, and go to state 26

    $default  reduce using rule 36 (expression)


State 48

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   37           | expression MINUS expression .
   38           | expression . STAR expression
   39           | expression . SLASH expression

    STAR   shift, and go to state 25
    SLASH  shift, and go to state 26

    $default  reduce using rule 37 (expression)


State 49

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   38           | expression STAR expression .
   39           | expression . SLASH expression

    $default  reduce using rule 38 (expression)


State 50

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   39           | expression SLASH expression .

    $default  reduce using rule 39 (expression)


State 51

   43 function_call: IDENTIFIER LPAREN parameter_list RPAREN .

    $default  reduce using rule 43 (function_call)


State 52

   29 assignment_operator: EQ .

    $default  reduce using rule 29 (assignment_operator)


State 53

   30 assignment_operator: PLUSEQ .

    $default  reduce using rule 30 (assignment_operator)


State 54

   31 assignment_operator: MINUSEQ .

    $default  reduce using rule 31 (assignment_operator)


State 55

   27 assign_statement: IDENTIFIER assignment_operator . expression SEMICOLON
   28                 | IDENTIFIER assignment_operator . if_expression SEMICOLON

    IDENTIFIER   shift, and go to state 46
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11
    IF           shift, and go to state 69

    expression        go to state 70
    if_expression     go to state 71
    block_expression  go to state 15
    function_call     go to state 16
    value             go to state 17


State 56

   60 mutability: MUT .

    $default  reduce using rule 60 (mutability)


State 57

   21 declaration_statement: LET mutability . IDENTIFIER COLON type
   24 let_statement: LET mutability . IDENTIFIER COLON type EQ expression SEMICOLON
   25              | LET mutability . IDENTIFIER EQ expression SEMICOLON
   26              | LET mutability . IDENTIFIER EQ expression

    IDENTIFIER  shift, and go to state 72


State 58

   53 conditional: TRUE .
   57 value: TRUE .

    LBRACE    reduce using rule 53 (conditional)
    $default  reduce using rule 57 (value)


State 59

   54 conditional: FALSE .
   58 value: FALSE .

    LBRACE    reduce using rule 54 (conditional)
    $default  reduce using rule 58 (value)


State 60

   52 conditional: NOT . expression

    IDENTIFIER   shift, and go to state 46
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11

    expression        go to state 73
    block_expression  go to state 15
    function_call     go to state 16
    value             go to state 17


State 61

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   46 conditional: expression . LT expression
   47            | expression . LE expression
   48            | expression . GT expression
   49            | expression . GE expression
   50            | expression . NE expression
   51            | expression . EQEQ expression

    PLUS   shift, and go to state 23
    MINUS  shift, and go to state 24
    STAR   shift, and go to state 25
    SLASH  shift, and go to state 26
    GT     shift, and go to state 74
    GE     shift, and go to state 75
    LT     shift, and go to state 76
    LE     shift, and go to state 77
    EQEQ   shift, and go to state 78
    NE     shift, and go to state 79


State 62

   44 if_statement: IF conditional . block_statement
   45             | IF conditional . block_statement ELSE block_statement

    LBRACE  shift, and go to state 80

    block_statement  go to state 81


State 63

   20 statement: declaration_statement SEMICOLON .

    $default  reduce using rule 20 (statement)


State 64

   19 statement: print_statement SEMICOLON .

    $default  reduce using rule 19 (statement)


State 65

   42 block_expression: LBRACE statement_list expression RBRACE .

    $default  reduce using rule 42 (block_expression)


State 66

   17 statement: expression SEMICOLON .

    $default  reduce using rule 17 (statement)


State 67

    4 function: FN IDENTIFIER LPAREN parameter_list RPAREN ARROW type . LBRACE statement_list RBRACE

    LBRACE  shift, and go to state 82


State 68

    3 function: FN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list . RBRACE
   13 statement_list: statement_list . statement
   14               | statement_list . expression

    IDENTIFIER   shift, and go to state 31
    PRINTVAR     shift, and go to state 32
    PRINTSTRING  shift, and go to state 33
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11
    RBRACE       shift, and go to state 83
    LET          shift, and go to state 34
    IF           shift, and go to state 35

    statement              go to state 36
    declaration_statement  go to state 37
    print_statement        go to state 38
    let_statement          go to state 39
    assign_statement       go to state 40
    expression             go to state 84
    block_expression       go to state 15
    function_call          go to state 16
    if_statement           go to state 42
    value                  go to state 17


State 69

   40 if_expression: IF . conditional LBRACE statement_list RBRACE
   41              | IF . conditional LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE

    IDENTIFIER   shift, and go to state 46
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 58
    FALSE        shift, and go to state 59
    LBRACE       shift, and go to state 11
    NOT          shift, and go to state 60

    expression        go to state 61
    block_expression  go to state 15
    function_call     go to state 16
    conditional       go to state 85
    value             go to state 17


State 70

   27 assign_statement: IDENTIFIER assignment_operator expression . SEMICOLON
   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression

    SEMICOLON  shift, and go to state 86
    PLUS       shift, and go to state 23
    MINUS      shift, and go to state 24
    STAR       shift, and go to state 25
    SLASH      shift, and go to state 26


State 71

   28 assign_statement: IDENTIFIER assignment_operator if_expression . SEMICOLON

    SEMICOLON  shift, and go to state 87


State 72

   21 declaration_statement: LET mutability IDENTIFIER . COLON type
   24 let_statement: LET mutability IDENTIFIER . COLON type EQ expression SEMICOLON
   25              | LET mutability IDENTIFIER . EQ expression SEMICOLON
   26              | LET mutability IDENTIFIER . EQ expression

    COLON  shift, and go to state 88
    EQ     shift, and go to state 89


State 73

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   52 conditional: NOT expression .

    PLUS   shift, and go to state 23
    MINUS  shift, and go to state 24
    STAR   shift, and go to state 25
    SLASH  shift, and go to state 26

    $default  reduce using rule 52 (conditional)


State 74

   48 conditional: expression GT . expression

    IDENTIFIER   shift, and go to state 46
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11

    expression        go to state 90
    block_expression  go to state 15
    function_call     go to state 16
    value             go to state 17


State 75

   49 conditional: expression GE . expression

    IDENTIFIER   shift, and go to state 46
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11

    expression        go to state 91
    block_expression  go to state 15
    function_call     go to state 16
    value             go to state 17


State 76

   46 conditional: expression LT . expression

    IDENTIFIER   shift, and go to state 46
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11

    expression        go to state 92
    block_expression  go to state 15
    function_call     go to state 16
    value             go to state 17


State 77

   47 conditional: expression LE . expression

    IDENTIFIER   shift, and go to state 46
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11

    expression        go to state 93
    block_expression  go to state 15
    function_call     go to state 16
    value             go to state 17


State 78

   51 conditional: expression EQEQ . expression

    IDENTIFIER   shift, and go to state 46
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11

    expression        go to state 94
    block_expression  go to state 15
    function_call     go to state 16
    value             go to state 17


State 79

   50 conditional: expression NE . expression

    IDENTIFIER   shift, and go to state 46
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11

    expression        go to state 95
    block_expression  go to state 15
    function_call     go to state 16
    value             go to state 17


State 80

   55 block_statement: LBRACE . statement_list RBRACE

    $default  reduce using rule 12 (statement_list)

    statement_list  go to state 96


State 81

   44 if_statement: IF conditional block_statement .
   45             | IF conditional block_statement . ELSE block_statement

    ELSE  shift, and go to state 97

    $default  reduce using rule 44 (if_statement)


State 82

    4 function: FN IDENTIFIER LPAREN parameter_list RPAREN ARROW type LBRACE . statement_list RBRACE

    $default  reduce using rule 12 (statement_list)

    statement_list  go to state 98


State 83

    3 function: FN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .

    $default  reduce using rule 3 (function)


State 84

   14 statement_list: statement_list expression .
   17 statement: expression . SEMICOLON
   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression

    SEMICOLON  shift, and go to state 66
    PLUS       shift, and go to state 23
    MINUS      shift, and go to state 24
    STAR       shift, and go to state 25
    SLASH      shift, and go to state 26

    $default  reduce using rule 14 (statement_list)


State 85

   40 if_expression: IF conditional . LBRACE statement_list RBRACE
   41              | IF conditional . LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE

    LBRACE  shift, and go to state 99


State 86

   27 assign_statement: IDENTIFIER assignment_operator expression SEMICOLON .

    $default  reduce using rule 27 (assign_statement)


State 87

   28 assign_statement: IDENTIFIER assignment_operator if_expression SEMICOLON .

    $default  reduce using rule 28 (assign_statement)


State 88

   21 declaration_statement: LET mutability IDENTIFIER COLON . type
   24 let_statement: LET mutability IDENTIFIER COLON . type EQ expression SEMICOLON

    INT   shift, and go to state 28
    BOOL  shift, and go to state 29

    type  go to state 100


State 89

   25 let_statement: LET mutability IDENTIFIER EQ . expression SEMICOLON
   26              | LET mutability IDENTIFIER EQ . expression

    IDENTIFIER   shift, and go to state 46
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11

    expression        go to state 101
    block_expression  go to state 15
    function_call     go to state 16
    value             go to state 17


State 90

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   48 conditional: expression GT expression .

    PLUS   shift, and go to state 23
    MINUS  shift, and go to state 24
    STAR   shift, and go to state 25
    SLASH  shift, and go to state 26

    $default  reduce using rule 48 (conditional)


State 91

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   49 conditional: expression GE expression .

    PLUS   shift, and go to state 23
    MINUS  shift, and go to state 24
    STAR   shift, and go to state 25
    SLASH  shift, and go to state 26

    $default  reduce using rule 49 (conditional)


State 92

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   46 conditional: expression LT expression .

    PLUS   shift, and go to state 23
    MINUS  shift, and go to state 24
    STAR   shift, and go to state 25
    SLASH  shift, and go to state 26

    $default  reduce using rule 46 (conditional)


State 93

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   47 conditional: expression LE expression .

    PLUS   shift, and go to state 23
    MINUS  shift, and go to state 24
    STAR   shift, and go to state 25
    SLASH  shift, and go to state 26

    $default  reduce using rule 47 (conditional)


State 94

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   51 conditional: expression EQEQ expression .

    PLUS   shift, and go to state 23
    MINUS  shift, and go to state 24
    STAR   shift, and go to state 25
    SLASH  shift, and go to state 26

    $default  reduce using rule 51 (conditional)


State 95

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   50 conditional: expression NE expression .

    PLUS   shift, and go to state 23
    MINUS  shift, and go to state 24
    STAR   shift, and go to state 25
    SLASH  shift, and go to state 26

    $default  reduce using rule 50 (conditional)


State 96

   13 statement_list: statement_list . statement
   14               | statement_list . expression
   55 block_statement: LBRACE statement_list . RBRACE

    IDENTIFIER   shift, and go to state 31
    PRINTVAR     shift, and go to state 32
    PRINTSTRING  shift, and go to state 33
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11
    RBRACE       shift, and go to state 102
    LET          shift, and go to state 34
    IF           shift, and go to state 35

    statement              go to state 36
    declaration_statement  go to state 37
    print_statement        go to state 38
    let_statement          go to state 39
    assign_statement       go to state 40
    expression             go to state 84
    block_expression       go to state 15
    function_call          go to state 16
    if_statement           go to state 42
    value                  go to state 17


State 97

   45 if_statement: IF conditional block_statement ELSE . block_statement

    LBRACE  shift, and go to state 80

    block_statement  go to state 103


State 98

    4 function: FN IDENTIFIER LPAREN parameter_list RPAREN ARROW type LBRACE statement_list . RBRACE
   13 statement_list: statement_list . statement
   14               | statement_list . expression

    IDENTIFIER   shift, and go to state 31
    PRINTVAR     shift, and go to state 32
    PRINTSTRING  shift, and go to state 33
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11
    RBRACE       shift, and go to state 104
    LET          shift, and go to state 34
    IF           shift, and go to state 35

    statement              go to state 36
    declaration_statement  go to state 37
    print_statement        go to state 38
    let_statement          go to state 39
    assign_statement       go to state 40
    expression             go to state 84
    block_expression       go to state 15
    function_call          go to state 16
    if_statement           go to state 42
    value                  go to state 17


State 99

   40 if_expression: IF conditional LBRACE . statement_list RBRACE
   41              | IF conditional LBRACE . statement_list RBRACE ELSE LBRACE statement_list RBRACE

    $default  reduce using rule 12 (statement_list)

    statement_list  go to state 105


State 100

   21 declaration_statement: LET mutability IDENTIFIER COLON type .
   24 let_statement: LET mutability IDENTIFIER COLON type . EQ expression SEMICOLON

    EQ  shift, and go to state 106

    $default  reduce using rule 21 (declaration_statement)


State 101

   25 let_statement: LET mutability IDENTIFIER EQ expression . SEMICOLON
   26              | LET mutability IDENTIFIER EQ expression .
   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression

    SEMICOLON  shift, and go to state 107
    PLUS       shift, and go to state 23
    MINUS      shift, and go to state 24
    STAR       shift, and go to state 25
    SLASH      shift, and go to state 26

    $default  reduce using rule 26 (let_statement)


State 102

   55 block_statement: LBRACE statement_list RBRACE .

    $default  reduce using rule 55 (block_statement)


State 103

   45 if_statement: IF conditional block_statement ELSE block_statement .

    $default  reduce using rule 45 (if_statement)


State 104

    4 function: FN IDENTIFIER LPAREN parameter_list RPAREN ARROW type LBRACE statement_list RBRACE .

    $default  reduce using rule 4 (function)


State 105

   13 statement_list: statement_list . statement
   14               | statement_list . expression
   40 if_expression: IF conditional LBRACE statement_list . RBRACE
   41              | IF conditional LBRACE statement_list . RBRACE ELSE LBRACE statement_list RBRACE

    IDENTIFIER   shift, and go to state 31
    PRINTVAR     shift, and go to state 32
    PRINTSTRING  shift, and go to state 33
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11
    RBRACE       shift, and go to state 108
    LET          shift, and go to state 34
    IF           shift, and go to state 35

    statement              go to state 36
    declaration_statement  go to state 37
    print_statement        go to state 38
    let_statement          go to state 39
    assign_statement       go to state 40
    expression             go to state 84
    block_expression       go to state 15
    function_call          go to state 16
    if_statement           go to state 42
    value                  go to state 17


State 106

   24 let_statement: LET mutability IDENTIFIER COLON type EQ . expression SEMICOLON

    IDENTIFIER   shift, and go to state 46
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11

    expression        go to state 109
    block_expression  go to state 15
    function_call     go to state 16
    value             go to state 17


State 107

   25 let_statement: LET mutability IDENTIFIER EQ expression SEMICOLON .

    $default  reduce using rule 25 (let_statement)


State 108

   40 if_expression: IF conditional LBRACE statement_list RBRACE .
   41              | IF conditional LBRACE statement_list RBRACE . ELSE LBRACE statement_list RBRACE

    ELSE  shift, and go to state 110

    $default  reduce using rule 40 (if_expression)


State 109

   24 let_statement: LET mutability IDENTIFIER COLON type EQ expression . SEMICOLON
   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression

    SEMICOLON  shift, and go to state 111
    PLUS       shift, and go to state 23
    MINUS      shift, and go to state 24
    STAR       shift, and go to state 25
    SLASH      shift, and go to state 26


State 110

   41 if_expression: IF conditional LBRACE statement_list RBRACE ELSE . LBRACE statement_list RBRACE

    LBRACE  shift, and go to state 112


State 111

   24 let_statement: LET mutability IDENTIFIER COLON type EQ expression SEMICOLON .

    $default  reduce using rule 24 (let_statement)


State 112

   41 if_expression: IF conditional LBRACE statement_list RBRACE ELSE LBRACE . statement_list RBRACE

    $default  reduce using rule 12 (statement_list)

    statement_list  go to state 113


State 113

   13 statement_list: statement_list . statement
   14               | statement_list . expression
   41 if_expression: IF conditional LBRACE statement_list RBRACE ELSE LBRACE statement_list . RBRACE

    IDENTIFIER   shift, and go to state 31
    PRINTVAR     shift, and go to state 32
    PRINTSTRING  shift, and go to state 33
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11
    RBRACE       shift, and go to state 114
    LET          shift, and go to state 34
    IF           shift, and go to state 35

    statement              go to state 36
    declaration_statement  go to state 37
    print_statement        go to state 38
    let_statement          go to state 39
    assign_statement       go to state 40
    expression             go to state 84
    block_expression       go to state 15
    function_call          go to state 16
    if_statement           go to state 42
    value                  go to state 17


State 114

   41 if_expression: IF conditional LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .

    $default  reduce using rule 41 (if_expression)
