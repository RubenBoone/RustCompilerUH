Terminals unused in grammar

   WHILE


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | function
    3        | functions function

    4 functions: function function

    5 function: FN IDENTIFIER LPAREN params RPAREN blockStatement
    6         | FN IDENTIFIER LPAREN params RPAREN ARROW type blockStatement

    7 functionCall: IDENTIFIER LPAREN params RPAREN

    8 blockStatement: LBRACE statements RBRACE

    9 statements: /* empty */
   10           | statements statement SEMICOLON
   11           | statements declaration SEMICOLON
   12           | statements assignment SEMICOLON
   13           | statements functionCall SEMICOLON
   14           | statements expression
   15           | statements declaration
   16           | IF conditionals blockStatement
   17           | IF conditionals blockStatement ELSE blockStatement

   18 statement: LET IDENTIFIER EQ expression
   19          | IDENTIFIER PLUSEQ expression
   20          | IDENTIFIER MINUSEQ expression
   21          | PRINTSTRING
   22          | PRINTVAR
   23          | IDENTIFIER LBRACE params RBRACE

   24 expression: DEC_LITERAL
   25           | IDENTIFIER
   26           | functionCall
   27           | expression PLUS expression
   28           | expression MINUS expression
   29           | expression STAR expression
   30           | expression SLASH expression
   31           | TRUE
   32           | FALSE
   33           | AMPERSAND MUT IDENTIFIER

   34 conditionals: conditional
   35             | conditionals ANDAND conditional
   36             | conditionals OROR conditional

   37 conditional: expression LT expression
   38            | expression LE expression
   39            | expression GT expression
   40            | expression GE expression
   41            | expression NE expression
   42            | expression EQEQ expression
   43            | NOT expression
   44            | expression

   45 declaration: LET IDENTIFIER COLON type
   46            | LET IDENTIFIER EQ blockStatement
   47            | LET MUT IDENTIFIER EQ expression

   48 assignment: IDENTIFIER EQ expression
   49           | IDENTIFIER EQ IF conditional blockStatement
   50           | IDENTIFIER EQ IF conditional blockStatement ELSE blockStatement

   51 params: /* empty */
   52       | IDENTIFIER COLON type
   53       | IDENTIFIER COLON AMPERSAND MUT type
   54       | expression
   55       | expression COMMA params

   56 type: INT
   57     | BOOL


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENTIFIER (258) 5 6 7 18 19 20 23 25 33 45 46 47 48 49 50 52 53
PRINTVAR (259) 22
PRINTSTRING (260) 21
DEC_LITERAL (261) 24
TRUE (262) 31
FALSE (263) 32
FN (264) 5 6
LPAREN (265) 5 6 7
RPAREN (266) 5 6 7
ARROW (267) 6
LBRACE (268) 8 23
RBRACE (269) 8 23
SEMICOLON (270) 10 11 12 13
COLON (271) 45 52 53
LET (272) 18 45 46 47
EQ (273) 18 46 47 48 49 50
PLUS (274) 27
MINUS (275) 28
STAR (276) 29
SLASH (277) 30
PLUSEQ (278) 19
MINUSEQ (279) 20
ANDAND (280) 35
OROR (281) 36
NOT (282) 43
GT (283) 39
GE (284) 40
LT (285) 37
LE (286) 38
EQEQ (287) 42
NE (288) 41
AMPERSAND (289) 33 53
IF (290) 16 17 49 50
ELSE (291) 17 50
WHILE (292)
MUT (293) 33 47 53
COMMA (294) 55
INT (295) 56
BOOL (296) 57


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
program (43)
    on left: 1 2 3, on right: 0
functions (44)
    on left: 4, on right: 3
function (45)
    on left: 5 6, on right: 2 3 4
functionCall (46)
    on left: 7, on right: 13 26
blockStatement (47)
    on left: 8, on right: 5 6 16 17 46 49 50
statements (48)
    on left: 9 10 11 12 13 14 15 16 17, on right: 8 10 11 12 13 14
    15
statement (49)
    on left: 18 19 20 21 22 23, on right: 10
expression (50)
    on left: 24 25 26 27 28 29 30 31 32 33, on right: 14 18 19 20 27
    28 29 30 37 38 39 40 41 42 43 44 47 48 54 55
conditionals (51)
    on left: 34 35 36, on right: 16 17 35 36
conditional (52)
    on left: 37 38 39 40 41 42 43 44, on right: 34 35 36 49 50
declaration (53)
    on left: 45 46 47, on right: 11 15
assignment (54)
    on left: 48 49 50, on right: 12
params (55)
    on left: 51 52 53 54 55, on right: 5 6 7 23 55
type (56)
    on left: 56 57, on right: 6 45 52 53


State 0

    0 $accept: . program $end

    FN  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program    go to state 2
    functions  go to state 3
    function   go to state 4


State 1

    5 function: FN . IDENTIFIER LPAREN params RPAREN blockStatement
    6         | FN . IDENTIFIER LPAREN params RPAREN ARROW type blockStatement

    IDENTIFIER  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    3 program: functions . function

    FN  shift, and go to state 1

    function  go to state 7


State 4

    2 program: function .
    4 functions: function . function

    FN  shift, and go to state 1

    $default  reduce using rule 2 (program)

    function  go to state 8


State 5

    5 function: FN IDENTIFIER . LPAREN params RPAREN blockStatement
    6         | FN IDENTIFIER . LPAREN params RPAREN ARROW type blockStatement

    LPAREN  shift, and go to state 9


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 program: functions function .

    $default  reduce using rule 3 (program)


State 8

    4 functions: function function .

    $default  reduce using rule 4 (functions)


State 9

    5 function: FN IDENTIFIER LPAREN . params RPAREN blockStatement
    6         | FN IDENTIFIER LPAREN . params RPAREN ARROW type blockStatement

    IDENTIFIER   shift, and go to state 10
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    AMPERSAND    shift, and go to state 14

    $default  reduce using rule 51 (params)

    functionCall  go to state 15
    expression    go to state 16
    params        go to state 17


State 10

    7 functionCall: IDENTIFIER . LPAREN params RPAREN
   25 expression: IDENTIFIER .
   52 params: IDENTIFIER . COLON type
   53       | IDENTIFIER . COLON AMPERSAND MUT type

    LPAREN  shift, and go to state 18
    COLON   shift, and go to state 19

    $default  reduce using rule 25 (expression)


State 11

   24 expression: DEC_LITERAL .

    $default  reduce using rule 24 (expression)


State 12

   31 expression: TRUE .

    $default  reduce using rule 31 (expression)


State 13

   32 expression: FALSE .

    $default  reduce using rule 32 (expression)


State 14

   33 expression: AMPERSAND . MUT IDENTIFIER

    MUT  shift, and go to state 20


State 15

   26 expression: functionCall .

    $default  reduce using rule 26 (expression)


State 16

   27 expression: expression . PLUS expression
   28           | expression . MINUS expression
   29           | expression . STAR expression
   30           | expression . SLASH expression
   54 params: expression .
   55       | expression . COMMA params

    PLUS   shift, and go to state 21
    MINUS  shift, and go to state 22
    STAR   shift, and go to state 23
    SLASH  shift, and go to state 24
    COMMA  shift, and go to state 25

    $default  reduce using rule 54 (params)


State 17

    5 function: FN IDENTIFIER LPAREN params . RPAREN blockStatement
    6         | FN IDENTIFIER LPAREN params . RPAREN ARROW type blockStatement

    RPAREN  shift, and go to state 26


State 18

    7 functionCall: IDENTIFIER LPAREN . params RPAREN

    IDENTIFIER   shift, and go to state 10
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    AMPERSAND    shift, and go to state 14

    $default  reduce using rule 51 (params)

    functionCall  go to state 15
    expression    go to state 16
    params        go to state 27


State 19

   52 params: IDENTIFIER COLON . type
   53       | IDENTIFIER COLON . AMPERSAND MUT type

    AMPERSAND  shift, and go to state 28
    INT        shift, and go to state 29
    BOOL       shift, and go to state 30

    type  go to state 31


State 20

   33 expression: AMPERSAND MUT . IDENTIFIER

    IDENTIFIER  shift, and go to state 32


State 21

   27 expression: expression PLUS . expression

    IDENTIFIER   shift, and go to state 33
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    AMPERSAND    shift, and go to state 14

    functionCall  go to state 15
    expression    go to state 34


State 22

   28 expression: expression MINUS . expression

    IDENTIFIER   shift, and go to state 33
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    AMPERSAND    shift, and go to state 14

    functionCall  go to state 15
    expression    go to state 35


State 23

   29 expression: expression STAR . expression

    IDENTIFIER   shift, and go to state 33
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    AMPERSAND    shift, and go to state 14

    functionCall  go to state 15
    expression    go to state 36


State 24

   30 expression: expression SLASH . expression

    IDENTIFIER   shift, and go to state 33
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    AMPERSAND    shift, and go to state 14

    functionCall  go to state 15
    expression    go to state 37


State 25

   55 params: expression COMMA . params

    IDENTIFIER   shift, and go to state 10
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    AMPERSAND    shift, and go to state 14

    $default  reduce using rule 51 (params)

    functionCall  go to state 15
    expression    go to state 16
    params        go to state 38


State 26

    5 function: FN IDENTIFIER LPAREN params RPAREN . blockStatement
    6         | FN IDENTIFIER LPAREN params RPAREN . ARROW type blockStatement

    ARROW   shift, and go to state 39
    LBRACE  shift, and go to state 40

    blockStatement  go to state 41


State 27

    7 functionCall: IDENTIFIER LPAREN params . RPAREN

    RPAREN  shift, and go to state 42


State 28

   53 params: IDENTIFIER COLON AMPERSAND . MUT type

    MUT  shift, and go to state 43


State 29

   56 type: INT .

    $default  reduce using rule 56 (type)


State 30

   57 type: BOOL .

    $default  reduce using rule 57 (type)


State 31

   52 params: IDENTIFIER COLON type .

    $default  reduce using rule 52 (params)


State 32

   33 expression: AMPERSAND MUT IDENTIFIER .

    $default  reduce using rule 33 (expression)


State 33

    7 functionCall: IDENTIFIER . LPAREN params RPAREN
   25 expression: IDENTIFIER .

    LPAREN  shift, and go to state 18

    $default  reduce using rule 25 (expression)


State 34

   27 expression: expression . PLUS expression
   27           | expression PLUS expression .
   28           | expression . MINUS expression
   29           | expression . STAR expression
   30           | expression . SLASH expression

    STAR   shift, and go to state 23
    SLASH  shift, and go to state 24

    $default  reduce using rule 27 (expression)


State 35

   27 expression: expression . PLUS expression
   28           | expression . MINUS expression
   28           | expression MINUS expression .
   29           | expression . STAR expression
   30           | expression . SLASH expression

    STAR   shift, and go to state 23
    SLASH  shift, and go to state 24

    $default  reduce using rule 28 (expression)


State 36

   27 expression: expression . PLUS expression
   28           | expression . MINUS expression
   29           | expression . STAR expression
   29           | expression STAR expression .
   30           | expression . SLASH expression

    $default  reduce using rule 29 (expression)


State 37

   27 expression: expression . PLUS expression
   28           | expression . MINUS expression
   29           | expression . STAR expression
   30           | expression . SLASH expression
   30           | expression SLASH expression .

    $default  reduce using rule 30 (expression)


State 38

   55 params: expression COMMA params .

    $default  reduce using rule 55 (params)


State 39

    6 function: FN IDENTIFIER LPAREN params RPAREN ARROW . type blockStatement

    INT   shift, and go to state 29
    BOOL  shift, and go to state 30

    type  go to state 44


State 40

    8 blockStatement: LBRACE . statements RBRACE

    IF  shift, and go to state 45

    $default  reduce using rule 9 (statements)

    statements  go to state 46


State 41

    5 function: FN IDENTIFIER LPAREN params RPAREN blockStatement .

    $default  reduce using rule 5 (function)


State 42

    7 functionCall: IDENTIFIER LPAREN params RPAREN .

    $default  reduce using rule 7 (functionCall)


State 43

   53 params: IDENTIFIER COLON AMPERSAND MUT . type

    INT   shift, and go to state 29
    BOOL  shift, and go to state 30

    type  go to state 47


State 44

    6 function: FN IDENTIFIER LPAREN params RPAREN ARROW type . blockStatement

    LBRACE  shift, and go to state 40

    blockStatement  go to state 48


State 45

   16 statements: IF . conditionals blockStatement
   17           | IF . conditionals blockStatement ELSE blockStatement

    IDENTIFIER   shift, and go to state 33
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    NOT          shift, and go to state 49
    AMPERSAND    shift, and go to state 14

    functionCall  go to state 15
    expression    go to state 50
    conditionals  go to state 51
    conditional   go to state 52


State 46

    8 blockStatement: LBRACE statements . RBRACE
   10 statements: statements . statement SEMICOLON
   11           | statements . declaration SEMICOLON
   12           | statements . assignment SEMICOLON
   13           | statements . functionCall SEMICOLON
   14           | statements . expression
   15           | statements . declaration

    IDENTIFIER   shift, and go to state 53
    PRINTVAR     shift, and go to state 54
    PRINTSTRING  shift, and go to state 55
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    RBRACE       shift, and go to state 56
    LET          shift, and go to state 57
    AMPERSAND    shift, and go to state 14

    functionCall  go to state 58
    statement     go to state 59
    expression    go to state 60
    declaration   go to state 61
    assignment    go to state 62


State 47

   53 params: IDENTIFIER COLON AMPERSAND MUT type .

    $default  reduce using rule 53 (params)


State 48

    6 function: FN IDENTIFIER LPAREN params RPAREN ARROW type blockStatement .

    $default  reduce using rule 6 (function)


State 49

   43 conditional: NOT . expression

    IDENTIFIER   shift, and go to state 33
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    AMPERSAND    shift, and go to state 14

    functionCall  go to state 15
    expression    go to state 63


State 50

   27 expression: expression . PLUS expression
   28           | expression . MINUS expression
   29           | expression . STAR expression
   30           | expression . SLASH expression
   37 conditional: expression . LT expression
   38            | expression . LE expression
   39            | expression . GT expression
   40            | expression . GE expression
   41            | expression . NE expression
   42            | expression . EQEQ expression
   44            | expression .

    PLUS   shift, and go to state 21
    MINUS  shift, and go to state 22
    STAR   shift, and go to state 23
    SLASH  shift, and go to state 24
    GT     shift, and go to state 64
    GE     shift, and go to state 65
    LT     shift, and go to state 66
    LE     shift, and go to state 67
    EQEQ   shift, and go to state 68
    NE     shift, and go to state 69

    $default  reduce using rule 44 (conditional)


State 51

   16 statements: IF conditionals . blockStatement
   17           | IF conditionals . blockStatement ELSE blockStatement
   35 conditionals: conditionals . ANDAND conditional
   36             | conditionals . OROR conditional

    LBRACE  shift, and go to state 40
    ANDAND  shift, and go to state 70
    OROR    shift, and go to state 71

    blockStatement  go to state 72


State 52

   34 conditionals: conditional .

    $default  reduce using rule 34 (conditionals)


State 53

    7 functionCall: IDENTIFIER . LPAREN params RPAREN
   19 statement: IDENTIFIER . PLUSEQ expression
   20          | IDENTIFIER . MINUSEQ expression
   23          | IDENTIFIER . LBRACE params RBRACE
   25 expression: IDENTIFIER .
   48 assignment: IDENTIFIER . EQ expression
   49           | IDENTIFIER . EQ IF conditional blockStatement
   50           | IDENTIFIER . EQ IF conditional blockStatement ELSE blockStatement

    LPAREN   shift, and go to state 18
    LBRACE   shift, and go to state 73
    EQ       shift, and go to state 74
    PLUSEQ   shift, and go to state 75
    MINUSEQ  shift, and go to state 76

    $default  reduce using rule 25 (expression)


State 54

   22 statement: PRINTVAR .

    $default  reduce using rule 22 (statement)


State 55

   21 statement: PRINTSTRING .

    $default  reduce using rule 21 (statement)


State 56

    8 blockStatement: LBRACE statements RBRACE .

    $default  reduce using rule 8 (blockStatement)


State 57

   18 statement: LET . IDENTIFIER EQ expression
   45 declaration: LET . IDENTIFIER COLON type
   46            | LET . IDENTIFIER EQ blockStatement
   47            | LET . MUT IDENTIFIER EQ expression

    IDENTIFIER  shift, and go to state 77
    MUT         shift, and go to state 78


State 58

   13 statements: statements functionCall . SEMICOLON
   26 expression: functionCall .

    SEMICOLON  shift, and go to state 79

    $default  reduce using rule 26 (expression)


State 59

   10 statements: statements statement . SEMICOLON

    SEMICOLON  shift, and go to state 80


State 60

   14 statements: statements expression .
   27 expression: expression . PLUS expression
   28           | expression . MINUS expression
   29           | expression . STAR expression
   30           | expression . SLASH expression

    PLUS   shift, and go to state 21
    MINUS  shift, and go to state 22
    STAR   shift, and go to state 23
    SLASH  shift, and go to state 24

    $default  reduce using rule 14 (statements)


State 61

   11 statements: statements declaration . SEMICOLON
   15           | statements declaration .

    SEMICOLON  shift, and go to state 81

    $default  reduce using rule 15 (statements)


State 62

   12 statements: statements assignment . SEMICOLON

    SEMICOLON  shift, and go to state 82


State 63

   27 expression: expression . PLUS expression
   28           | expression . MINUS expression
   29           | expression . STAR expression
   30           | expression . SLASH expression
   43 conditional: NOT expression .

    PLUS   shift, and go to state 21
    MINUS  shift, and go to state 22
    STAR   shift, and go to state 23
    SLASH  shift, and go to state 24

    $default  reduce using rule 43 (conditional)


State 64

   39 conditional: expression GT . expression

    IDENTIFIER   shift, and go to state 33
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    AMPERSAND    shift, and go to state 14

    functionCall  go to state 15
    expression    go to state 83


State 65

   40 conditional: expression GE . expression

    IDENTIFIER   shift, and go to state 33
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    AMPERSAND    shift, and go to state 14

    functionCall  go to state 15
    expression    go to state 84


State 66

   37 conditional: expression LT . expression

    IDENTIFIER   shift, and go to state 33
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    AMPERSAND    shift, and go to state 14

    functionCall  go to state 15
    expression    go to state 85


State 67

   38 conditional: expression LE . expression

    IDENTIFIER   shift, and go to state 33
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    AMPERSAND    shift, and go to state 14

    functionCall  go to state 15
    expression    go to state 86


State 68

   42 conditional: expression EQEQ . expression

    IDENTIFIER   shift, and go to state 33
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    AMPERSAND    shift, and go to state 14

    functionCall  go to state 15
    expression    go to state 87


State 69

   41 conditional: expression NE . expression

    IDENTIFIER   shift, and go to state 33
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    AMPERSAND    shift, and go to state 14

    functionCall  go to state 15
    expression    go to state 88


State 70

   35 conditionals: conditionals ANDAND . conditional

    IDENTIFIER   shift, and go to state 33
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    NOT          shift, and go to state 49
    AMPERSAND    shift, and go to state 14

    functionCall  go to state 15
    expression    go to state 50
    conditional   go to state 89


State 71

   36 conditionals: conditionals OROR . conditional

    IDENTIFIER   shift, and go to state 33
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    NOT          shift, and go to state 49
    AMPERSAND    shift, and go to state 14

    functionCall  go to state 15
    expression    go to state 50
    conditional   go to state 90


State 72

   16 statements: IF conditionals blockStatement .
   17           | IF conditionals blockStatement . ELSE blockStatement

    ELSE  shift, and go to state 91

    $default  reduce using rule 16 (statements)


State 73

   23 statement: IDENTIFIER LBRACE . params RBRACE

    IDENTIFIER   shift, and go to state 10
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    AMPERSAND    shift, and go to state 14

    $default  reduce using rule 51 (params)

    functionCall  go to state 15
    expression    go to state 16
    params        go to state 92


State 74

   48 assignment: IDENTIFIER EQ . expression
   49           | IDENTIFIER EQ . IF conditional blockStatement
   50           | IDENTIFIER EQ . IF conditional blockStatement ELSE blockStatement

    IDENTIFIER   shift, and go to state 33
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    AMPERSAND    shift, and go to state 14
    IF           shift, and go to state 93

    functionCall  go to state 15
    expression    go to state 94


State 75

   19 statement: IDENTIFIER PLUSEQ . expression

    IDENTIFIER   shift, and go to state 33
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    AMPERSAND    shift, and go to state 14

    functionCall  go to state 15
    expression    go to state 95


State 76

   20 statement: IDENTIFIER MINUSEQ . expression

    IDENTIFIER   shift, and go to state 33
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    AMPERSAND    shift, and go to state 14

    functionCall  go to state 15
    expression    go to state 96


State 77

   18 statement: LET IDENTIFIER . EQ expression
   45 declaration: LET IDENTIFIER . COLON type
   46            | LET IDENTIFIER . EQ blockStatement

    COLON  shift, and go to state 97
    EQ     shift, and go to state 98


State 78

   47 declaration: LET MUT . IDENTIFIER EQ expression

    IDENTIFIER  shift, and go to state 99


State 79

   13 statements: statements functionCall SEMICOLON .

    $default  reduce using rule 13 (statements)


State 80

   10 statements: statements statement SEMICOLON .

    $default  reduce using rule 10 (statements)


State 81

   11 statements: statements declaration SEMICOLON .

    $default  reduce using rule 11 (statements)


State 82

   12 statements: statements assignment SEMICOLON .

    $default  reduce using rule 12 (statements)


State 83

   27 expression: expression . PLUS expression
   28           | expression . MINUS expression
   29           | expression . STAR expression
   30           | expression . SLASH expression
   39 conditional: expression GT expression .

    PLUS   shift, and go to state 21
    MINUS  shift, and go to state 22
    STAR   shift, and go to state 23
    SLASH  shift, and go to state 24

    $default  reduce using rule 39 (conditional)


State 84

   27 expression: expression . PLUS expression
   28           | expression . MINUS expression
   29           | expression . STAR expression
   30           | expression . SLASH expression
   40 conditional: expression GE expression .

    PLUS   shift, and go to state 21
    MINUS  shift, and go to state 22
    STAR   shift, and go to state 23
    SLASH  shift, and go to state 24

    $default  reduce using rule 40 (conditional)


State 85

   27 expression: expression . PLUS expression
   28           | expression . MINUS expression
   29           | expression . STAR expression
   30           | expression . SLASH expression
   37 conditional: expression LT expression .

    PLUS   shift, and go to state 21
    MINUS  shift, and go to state 22
    STAR   shift, and go to state 23
    SLASH  shift, and go to state 24

    $default  reduce using rule 37 (conditional)


State 86

   27 expression: expression . PLUS expression
   28           | expression . MINUS expression
   29           | expression . STAR expression
   30           | expression . SLASH expression
   38 conditional: expression LE expression .

    PLUS   shift, and go to state 21
    MINUS  shift, and go to state 22
    STAR   shift, and go to state 23
    SLASH  shift, and go to state 24

    $default  reduce using rule 38 (conditional)


State 87

   27 expression: expression . PLUS expression
   28           | expression . MINUS expression
   29           | expression . STAR expression
   30           | expression . SLASH expression
   42 conditional: expression EQEQ expression .

    PLUS   shift, and go to state 21
    MINUS  shift, and go to state 22
    STAR   shift, and go to state 23
    SLASH  shift, and go to state 24

    $default  reduce using rule 42 (conditional)


State 88

   27 expression: expression . PLUS expression
   28           | expression . MINUS expression
   29           | expression . STAR expression
   30           | expression . SLASH expression
   41 conditional: expression NE expression .

    PLUS   shift, and go to state 21
    MINUS  shift, and go to state 22
    STAR   shift, and go to state 23
    SLASH  shift, and go to state 24

    $default  reduce using rule 41 (conditional)


State 89

   35 conditionals: conditionals ANDAND conditional .

    $default  reduce using rule 35 (conditionals)


State 90

   36 conditionals: conditionals OROR conditional .

    $default  reduce using rule 36 (conditionals)


State 91

   17 statements: IF conditionals blockStatement ELSE . blockStatement

    LBRACE  shift, and go to state 40

    blockStatement  go to state 100


State 92

   23 statement: IDENTIFIER LBRACE params . RBRACE

    RBRACE  shift, and go to state 101


State 93

   49 assignment: IDENTIFIER EQ IF . conditional blockStatement
   50           | IDENTIFIER EQ IF . conditional blockStatement ELSE blockStatement

    IDENTIFIER   shift, and go to state 33
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    NOT          shift, and go to state 49
    AMPERSAND    shift, and go to state 14

    functionCall  go to state 15
    expression    go to state 50
    conditional   go to state 102


State 94

   27 expression: expression . PLUS expression
   28           | expression . MINUS expression
   29           | expression . STAR expression
   30           | expression . SLASH expression
   48 assignment: IDENTIFIER EQ expression .

    PLUS   shift, and go to state 21
    MINUS  shift, and go to state 22
    STAR   shift, and go to state 23
    SLASH  shift, and go to state 24

    $default  reduce using rule 48 (assignment)


State 95

   19 statement: IDENTIFIER PLUSEQ expression .
   27 expression: expression . PLUS expression
   28           | expression . MINUS expression
   29           | expression . STAR expression
   30           | expression . SLASH expression

    PLUS   shift, and go to state 21
    MINUS  shift, and go to state 22
    STAR   shift, and go to state 23
    SLASH  shift, and go to state 24

    $default  reduce using rule 19 (statement)


State 96

   20 statement: IDENTIFIER MINUSEQ expression .
   27 expression: expression . PLUS expression
   28           | expression . MINUS expression
   29           | expression . STAR expression
   30           | expression . SLASH expression

    PLUS   shift, and go to state 21
    MINUS  shift, and go to state 22
    STAR   shift, and go to state 23
    SLASH  shift, and go to state 24

    $default  reduce using rule 20 (statement)


State 97

   45 declaration: LET IDENTIFIER COLON . type

    INT   shift, and go to state 29
    BOOL  shift, and go to state 30

    type  go to state 103


State 98

   18 statement: LET IDENTIFIER EQ . expression
   46 declaration: LET IDENTIFIER EQ . blockStatement

    IDENTIFIER   shift, and go to state 33
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    LBRACE       shift, and go to state 40
    AMPERSAND    shift, and go to state 14

    functionCall    go to state 15
    blockStatement  go to state 104
    expression      go to state 105


State 99

   47 declaration: LET MUT IDENTIFIER . EQ expression

    EQ  shift, and go to state 106


State 100

   17 statements: IF conditionals blockStatement ELSE blockStatement .

    $default  reduce using rule 17 (statements)


State 101

   23 statement: IDENTIFIER LBRACE params RBRACE .

    $default  reduce using rule 23 (statement)


State 102

   49 assignment: IDENTIFIER EQ IF conditional . blockStatement
   50           | IDENTIFIER EQ IF conditional . blockStatement ELSE blockStatement

    LBRACE  shift, and go to state 40

    blockStatement  go to state 107


State 103

   45 declaration: LET IDENTIFIER COLON type .

    $default  reduce using rule 45 (declaration)


State 104

   46 declaration: LET IDENTIFIER EQ blockStatement .

    $default  reduce using rule 46 (declaration)


State 105

   18 statement: LET IDENTIFIER EQ expression .
   27 expression: expression . PLUS expression
   28           | expression . MINUS expression
   29           | expression . STAR expression
   30           | expression . SLASH expression

    PLUS   shift, and go to state 21
    MINUS  shift, and go to state 22
    STAR   shift, and go to state 23
    SLASH  shift, and go to state 24

    $default  reduce using rule 18 (statement)


State 106

   47 declaration: LET MUT IDENTIFIER EQ . expression

    IDENTIFIER   shift, and go to state 33
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    AMPERSAND    shift, and go to state 14

    functionCall  go to state 15
    expression    go to state 108


State 107

   49 assignment: IDENTIFIER EQ IF conditional blockStatement .
   50           | IDENTIFIER EQ IF conditional blockStatement . ELSE blockStatement

    ELSE  shift, and go to state 109

    $default  reduce using rule 49 (assignment)


State 108

   27 expression: expression . PLUS expression
   28           | expression . MINUS expression
   29           | expression . STAR expression
   30           | expression . SLASH expression
   47 declaration: LET MUT IDENTIFIER EQ expression .

    PLUS   shift, and go to state 21
    MINUS  shift, and go to state 22
    STAR   shift, and go to state 23
    SLASH  shift, and go to state 24

    $default  reduce using rule 47 (declaration)


State 109

   50 assignment: IDENTIFIER EQ IF conditional blockStatement ELSE . blockStatement

    LBRACE  shift, and go to state 40

    blockStatement  go to state 110


State 110

   50 assignment: IDENTIFIER EQ IF conditional blockStatement ELSE blockStatement .

    $default  reduce using rule 50 (assignment)
