Terminals unused in grammar

   AMPERSAND


Grammar

    0 $accept: ProgramType $end

    1 ProgramType: function_list

    2 CompoundStmType: /* empty */
    3                | CompoundStmType StmType

    4 StmType: LetStmType SEMICOLON
    5        | AssignStmType SEMICOLON
    6        | BlockStmType
    7        | DecStmType SEMICOLON
    8        | IfStmType
    9        | PrintStmType SEMICOLON
   10        | VarPrintStmType SEMICOLON
   11        | ExpType SEMICOLON
   12        | WhileStmStype

   13 LetStmType: LET mutability IDENTIFIER COLON type EQ ExpType
   14           | LET mutability IDENTIFIER EQ ExpType

   15 AssignStmType: IDENTIFIER assignment_operator ExpType

   16 BlockStmType: LBRACE CompoundStmType RBRACE

   17 DecStmType: LET mutability IDENTIFIER COLON type

   18 IfStmType: IF ExpType BlockStmType
   19          | IF ExpType BlockStmType ELSE BlockStmType

   20 PrintStmType: PRINTSTRING

   21 VarPrintStmType: PRINTVAR

   22 WhileStmStype: WHILE ExpType BlockStmType

   23 CompareCondExpType: ExpType conditional_operator Term

   24 ExpType: ExpType ANDAND ExpType
   25        | ExpType OROR ExpType
   26        | CompareCondExpType
   27        | NumExpType
   28        | IdExpType
   29        | BinopExpType
   30        | BlockExpType
   31        | GroupExpType
   32        | BoolExpType
   33        | FunctionExpType
   34        | IfExpType
   35        | NotCondType

   36 Term: NumExpType
   37     | IdExpType
   38     | BoolExpType
   39     | BlockExpType
   40     | FunctionExpType
   41     | BinopExpType
   42     | GroupExpType
   43     | IfExpType

   44 IdExpType: IDENTIFIER

   45 BoolExpType: TRUE
   46            | FALSE

   47 NumExpType: DEC_LITERAL

   48 BinopExpType: Term PLUS Term
   49             | Term MINUS Term
   50             | Term STAR Term
   51             | Term SLASH Term

   52 BlockExpType: LBRACE CompoundStmType ExpType RBRACE

   53 GroupExpType: LPAREN ExpType RPAREN

   54 FunctionExpType: IDENTIFIER LPAREN argument_list RPAREN

   55 IfExpType: IF ExpType BlockExpType
   56          | IF ExpType BlockExpType ELSE BlockExpType

   57 FunctionType: FN IDENTIFIER LPAREN parameter_list RPAREN BlockStmType
   58             | FN IDENTIFIER LPAREN parameter_list RPAREN ARROW type BlockStmType
   59             | FN IDENTIFIER LPAREN parameter_list RPAREN BlockExpType
   60             | FN IDENTIFIER LPAREN parameter_list RPAREN ARROW type BlockExpType

   61 function_list: function_list FunctionType
   62              | FunctionType

   63 NotCondType: NOT ExpType

   64 mutability: /* empty */
   65           | MUT

   66 type: INT
   67     | BOOL

   68 argument_list: /* empty */
   69              | argument_list COMMA ExpType
   70              | ExpType

   71 parameter_list: /* empty */
   72               | parameter_list COMMA IDENTIFIER COLON type
   73               | IDENTIFIER COLON type

   74 conditional_operator: LT
   75                     | LE
   76                     | GT
   77                     | GE
   78                     | EQEQ
   79                     | NE

   80 assignment_operator: EQ
   81                    | PLUSEQ
   82                    | MINUSEQ


Terminals, with rules where they appear

$end (0) 0
error (256)
FN (258) 57 58 59 60
LPAREN (259) 53 54 57 58 59 60
RPAREN (260) 53 54 57 58 59 60
ARROW (261) 58 60
LBRACE (262) 16 52
RBRACE (263) 16 52
SEMICOLON (264) 4 5 7 9 10 11
COLON (265) 13 17 72 73
LET (266) 13 14 17
ANDAND (267) 24
OROR (268) 25
NOT (269) 63
GT (270) 76
GE (271) 77
LT (272) 74
LE (273) 75
EQEQ (274) 78
NE (275) 79
AMPERSAND (276)
IF (277) 18 19 55 56
ELSE (278) 19 56
WHILE (279) 22
MUT (280) 65
COMMA (281) 69 72
INT (282) 66
BOOL (283) 67
MINUS (284) 49
PLUS (285) 48
SLASH (286) 51
STAR (287) 50
IDENTIFIER (288) 13 14 15 17 44 54 57 58 59 60 72 73
PRINTSTRING (289) 20
DEC_LITERAL (290) 47
PLUSEQ (291) 81
MINUSEQ (292) 82
EQ (293) 13 14 80
PRINTVAR (294) 21
TRUE (295) 45
FALSE (296) 46


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
ProgramType (43)
    on left: 1, on right: 0
CompoundStmType (44)
    on left: 2 3, on right: 3 16 52
StmType (45)
    on left: 4 5 6 7 8 9 10 11 12, on right: 3
LetStmType (46)
    on left: 13 14, on right: 4
AssignStmType (47)
    on left: 15, on right: 5
BlockStmType (48)
    on left: 16, on right: 6 18 19 22 57 58
DecStmType (49)
    on left: 17, on right: 7
IfStmType (50)
    on left: 18 19, on right: 8
PrintStmType (51)
    on left: 20, on right: 9
VarPrintStmType (52)
    on left: 21, on right: 10
WhileStmStype (53)
    on left: 22, on right: 12
CompareCondExpType (54)
    on left: 23, on right: 26
ExpType (55)
    on left: 24 25 26 27 28 29 30 31 32 33 34 35, on right: 11 13 14
    15 18 19 22 23 24 25 52 53 55 56 63 69 70
Term (56)
    on left: 36 37 38 39 40 41 42 43, on right: 23 48 49 50 51
IdExpType (57)
    on left: 44, on right: 28 37
BoolExpType (58)
    on left: 45 46, on right: 32 38
NumExpType (59)
    on left: 47, on right: 27 36
BinopExpType (60)
    on left: 48 49 50 51, on right: 29 41
BlockExpType (61)
    on left: 52, on right: 30 39 55 56 59 60
GroupExpType (62)
    on left: 53, on right: 31 42
FunctionExpType (63)
    on left: 54, on right: 33 40
IfExpType (64)
    on left: 55 56, on right: 34 43
FunctionType (65)
    on left: 57 58 59 60, on right: 61 62
function_list (66)
    on left: 61 62, on right: 1 61
NotCondType (67)
    on left: 63, on right: 35
mutability (68)
    on left: 64 65, on right: 13 14 17
type (69)
    on left: 66 67, on right: 13 17 58 60 72 73
argument_list (70)
    on left: 68 69 70, on right: 54 69
parameter_list (71)
    on left: 71 72 73, on right: 57 58 59 60 72
conditional_operator (72)
    on left: 74 75 76 77 78 79, on right: 23
assignment_operator (73)
    on left: 80 81 82, on right: 15


State 0

    0 $accept: . ProgramType $end

    FN  shift, and go to state 1

    ProgramType    go to state 2
    FunctionType   go to state 3
    function_list  go to state 4


State 1

   57 FunctionType: FN . IDENTIFIER LPAREN parameter_list RPAREN BlockStmType
   58             | FN . IDENTIFIER LPAREN parameter_list RPAREN ARROW type BlockStmType
   59             | FN . IDENTIFIER LPAREN parameter_list RPAREN BlockExpType
   60             | FN . IDENTIFIER LPAREN parameter_list RPAREN ARROW type BlockExpType

    IDENTIFIER  shift, and go to state 5


State 2

    0 $accept: ProgramType . $end

    $end  shift, and go to state 6


State 3

   62 function_list: FunctionType .

    $default  reduce using rule 62 (function_list)


State 4

    1 ProgramType: function_list .
   61 function_list: function_list . FunctionType

    FN  shift, and go to state 1

    $default  reduce using rule 1 (ProgramType)

    FunctionType  go to state 7


State 5

   57 FunctionType: FN IDENTIFIER . LPAREN parameter_list RPAREN BlockStmType
   58             | FN IDENTIFIER . LPAREN parameter_list RPAREN ARROW type BlockStmType
   59             | FN IDENTIFIER . LPAREN parameter_list RPAREN BlockExpType
   60             | FN IDENTIFIER . LPAREN parameter_list RPAREN ARROW type BlockExpType

    LPAREN  shift, and go to state 8


State 6

    0 $accept: ProgramType $end .

    $default  accept


State 7

   61 function_list: function_list FunctionType .

    $default  reduce using rule 61 (function_list)


State 8

   57 FunctionType: FN IDENTIFIER LPAREN . parameter_list RPAREN BlockStmType
   58             | FN IDENTIFIER LPAREN . parameter_list RPAREN ARROW type BlockStmType
   59             | FN IDENTIFIER LPAREN . parameter_list RPAREN BlockExpType
   60             | FN IDENTIFIER LPAREN . parameter_list RPAREN ARROW type BlockExpType

    IDENTIFIER  shift, and go to state 9

    $default  reduce using rule 71 (parameter_list)

    parameter_list  go to state 10


State 9

   73 parameter_list: IDENTIFIER . COLON type

    COLON  shift, and go to state 11


State 10

   57 FunctionType: FN IDENTIFIER LPAREN parameter_list . RPAREN BlockStmType
   58             | FN IDENTIFIER LPAREN parameter_list . RPAREN ARROW type BlockStmType
   59             | FN IDENTIFIER LPAREN parameter_list . RPAREN BlockExpType
   60             | FN IDENTIFIER LPAREN parameter_list . RPAREN ARROW type BlockExpType
   72 parameter_list: parameter_list . COMMA IDENTIFIER COLON type

    RPAREN  shift, and go to state 12
    COMMA   shift, and go to state 13


State 11

   73 parameter_list: IDENTIFIER COLON . type

    INT   shift, and go to state 14
    BOOL  shift, and go to state 15

    type  go to state 16


State 12

   57 FunctionType: FN IDENTIFIER LPAREN parameter_list RPAREN . BlockStmType
   58             | FN IDENTIFIER LPAREN parameter_list RPAREN . ARROW type BlockStmType
   59             | FN IDENTIFIER LPAREN parameter_list RPAREN . BlockExpType
   60             | FN IDENTIFIER LPAREN parameter_list RPAREN . ARROW type BlockExpType

    ARROW   shift, and go to state 17
    LBRACE  shift, and go to state 18

    BlockStmType  go to state 19
    BlockExpType  go to state 20


State 13

   72 parameter_list: parameter_list COMMA . IDENTIFIER COLON type

    IDENTIFIER  shift, and go to state 21


State 14

   66 type: INT .

    $default  reduce using rule 66 (type)


State 15

   67 type: BOOL .

    $default  reduce using rule 67 (type)


State 16

   73 parameter_list: IDENTIFIER COLON type .

    $default  reduce using rule 73 (parameter_list)


State 17

   58 FunctionType: FN IDENTIFIER LPAREN parameter_list RPAREN ARROW . type BlockStmType
   60             | FN IDENTIFIER LPAREN parameter_list RPAREN ARROW . type BlockExpType

    INT   shift, and go to state 14
    BOOL  shift, and go to state 15

    type  go to state 22


State 18

   16 BlockStmType: LBRACE . CompoundStmType RBRACE
   52 BlockExpType: LBRACE . CompoundStmType ExpType RBRACE

    $default  reduce using rule 2 (CompoundStmType)

    CompoundStmType  go to state 23


State 19

   57 FunctionType: FN IDENTIFIER LPAREN parameter_list RPAREN BlockStmType .

    $default  reduce using rule 57 (FunctionType)


State 20

   59 FunctionType: FN IDENTIFIER LPAREN parameter_list RPAREN BlockExpType .

    $default  reduce using rule 59 (FunctionType)


State 21

   72 parameter_list: parameter_list COMMA IDENTIFIER . COLON type

    COLON  shift, and go to state 24


State 22

   58 FunctionType: FN IDENTIFIER LPAREN parameter_list RPAREN ARROW type . BlockStmType
   60             | FN IDENTIFIER LPAREN parameter_list RPAREN ARROW type . BlockExpType

    LBRACE  shift, and go to state 18

    BlockStmType  go to state 25
    BlockExpType  go to state 26


State 23

    3 CompoundStmType: CompoundStmType . StmType
   16 BlockStmType: LBRACE CompoundStmType . RBRACE
   52 BlockExpType: LBRACE CompoundStmType . ExpType RBRACE

    LPAREN       shift, and go to state 27
    LBRACE       shift, and go to state 18
    RBRACE       shift, and go to state 28
    LET          shift, and go to state 29
    NOT          shift, and go to state 30
    IF           shift, and go to state 31
    WHILE        shift, and go to state 32
    IDENTIFIER   shift, and go to state 33
    PRINTSTRING  shift, and go to state 34
    DEC_LITERAL  shift, and go to state 35
    PRINTVAR     shift, and go to state 36
    TRUE         shift, and go to state 37
    FALSE        shift, and go to state 38

    StmType             go to state 39
    LetStmType          go to state 40
    AssignStmType       go to state 41
    BlockStmType        go to state 42
    DecStmType          go to state 43
    IfStmType           go to state 44
    PrintStmType        go to state 45
    VarPrintStmType     go to state 46
    WhileStmStype       go to state 47
    CompareCondExpType  go to state 48
    ExpType             go to state 49
    Term                go to state 50
    IdExpType           go to state 51
    BoolExpType         go to state 52
    NumExpType          go to state 53
    BinopExpType        go to state 54
    BlockExpType        go to state 55
    GroupExpType        go to state 56
    FunctionExpType     go to state 57
    IfExpType           go to state 58
    NotCondType         go to state 59


State 24

   72 parameter_list: parameter_list COMMA IDENTIFIER COLON . type

    INT   shift, and go to state 14
    BOOL  shift, and go to state 15

    type  go to state 60


State 25

   58 FunctionType: FN IDENTIFIER LPAREN parameter_list RPAREN ARROW type BlockStmType .

    $default  reduce using rule 58 (FunctionType)


State 26

   60 FunctionType: FN IDENTIFIER LPAREN parameter_list RPAREN ARROW type BlockExpType .

    $default  reduce using rule 60 (FunctionType)


State 27

   53 GroupExpType: LPAREN . ExpType RPAREN

    LPAREN       shift, and go to state 27
    LBRACE       shift, and go to state 61
    NOT          shift, and go to state 30
    IF           shift, and go to state 62
    IDENTIFIER   shift, and go to state 63
    DEC_LITERAL  shift, and go to state 35
    TRUE         shift, and go to state 37
    FALSE        shift, and go to state 38

    CompareCondExpType  go to state 48
    ExpType             go to state 64
    Term                go to state 50
    IdExpType           go to state 51
    BoolExpType         go to state 52
    NumExpType          go to state 53
    BinopExpType        go to state 54
    BlockExpType        go to state 55
    GroupExpType        go to state 56
    FunctionExpType     go to state 57
    IfExpType           go to state 58
    NotCondType         go to state 59


State 28

   16 BlockStmType: LBRACE CompoundStmType RBRACE .

    $default  reduce using rule 16 (BlockStmType)


State 29

   13 LetStmType: LET . mutability IDENTIFIER COLON type EQ ExpType
   14           | LET . mutability IDENTIFIER EQ ExpType
   17 DecStmType: LET . mutability IDENTIFIER COLON type

    MUT  shift, and go to state 65

    $default  reduce using rule 64 (mutability)

    mutability  go to state 66


State 30

   63 NotCondType: NOT . ExpType

    LPAREN       shift, and go to state 27
    LBRACE       shift, and go to state 61
    NOT          shift, and go to state 30
    IF           shift, and go to state 62
    IDENTIFIER   shift, and go to state 63
    DEC_LITERAL  shift, and go to state 35
    TRUE         shift, and go to state 37
    FALSE        shift, and go to state 38

    CompareCondExpType  go to state 48
    ExpType             go to state 67
    Term                go to state 50
    IdExpType           go to state 51
    BoolExpType         go to state 52
    NumExpType          go to state 53
    BinopExpType        go to state 54
    BlockExpType        go to state 55
    GroupExpType        go to state 56
    FunctionExpType     go to state 57
    IfExpType           go to state 58
    NotCondType         go to state 59


State 31

   18 IfStmType: IF . ExpType BlockStmType
   19          | IF . ExpType BlockStmType ELSE BlockStmType
   55 IfExpType: IF . ExpType BlockExpType
   56          | IF . ExpType BlockExpType ELSE BlockExpType

    LPAREN       shift, and go to state 27
    LBRACE       shift, and go to state 61
    NOT          shift, and go to state 30
    IF           shift, and go to state 62
    IDENTIFIER   shift, and go to state 63
    DEC_LITERAL  shift, and go to state 35
    TRUE         shift, and go to state 37
    FALSE        shift, and go to state 38

    CompareCondExpType  go to state 48
    ExpType             go to state 68
    Term                go to state 50
    IdExpType           go to state 51
    BoolExpType         go to state 52
    NumExpType          go to state 53
    BinopExpType        go to state 54
    BlockExpType        go to state 55
    GroupExpType        go to state 56
    FunctionExpType     go to state 57
    IfExpType           go to state 58
    NotCondType         go to state 59


State 32

   22 WhileStmStype: WHILE . ExpType BlockStmType

    LPAREN       shift, and go to state 27
    LBRACE       shift, and go to state 61
    NOT          shift, and go to state 30
    IF           shift, and go to state 62
    IDENTIFIER   shift, and go to state 63
    DEC_LITERAL  shift, and go to state 35
    TRUE         shift, and go to state 37
    FALSE        shift, and go to state 38

    CompareCondExpType  go to state 48
    ExpType             go to state 69
    Term                go to state 50
    IdExpType           go to state 51
    BoolExpType         go to state 52
    NumExpType          go to state 53
    BinopExpType        go to state 54
    BlockExpType        go to state 55
    GroupExpType        go to state 56
    FunctionExpType     go to state 57
    IfExpType           go to state 58
    NotCondType         go to state 59


State 33

   15 AssignStmType: IDENTIFIER . assignment_operator ExpType
   44 IdExpType: IDENTIFIER .
   54 FunctionExpType: IDENTIFIER . LPAREN argument_list RPAREN

    LPAREN   shift, and go to state 70
    PLUSEQ   shift, and go to state 71
    MINUSEQ  shift, and go to state 72
    EQ       shift, and go to state 73

    $default  reduce using rule 44 (IdExpType)

    assignment_operator  go to state 74


State 34

   20 PrintStmType: PRINTSTRING .

    $default  reduce using rule 20 (PrintStmType)


State 35

   47 NumExpType: DEC_LITERAL .

    $default  reduce using rule 47 (NumExpType)


State 36

   21 VarPrintStmType: PRINTVAR .

    $default  reduce using rule 21 (VarPrintStmType)


State 37

   45 BoolExpType: TRUE .

    $default  reduce using rule 45 (BoolExpType)


State 38

   46 BoolExpType: FALSE .

    $default  reduce using rule 46 (BoolExpType)


State 39

    3 CompoundStmType: CompoundStmType StmType .

    $default  reduce using rule 3 (CompoundStmType)


State 40

    4 StmType: LetStmType . SEMICOLON

    SEMICOLON  shift, and go to state 75


State 41

    5 StmType: AssignStmType . SEMICOLON

    SEMICOLON  shift, and go to state 76


State 42

    6 StmType: BlockStmType .

    $default  reduce using rule 6 (StmType)


State 43

    7 StmType: DecStmType . SEMICOLON

    SEMICOLON  shift, and go to state 77


State 44

    8 StmType: IfStmType .

    $default  reduce using rule 8 (StmType)


State 45

    9 StmType: PrintStmType . SEMICOLON

    SEMICOLON  shift, and go to state 78


State 46

   10 StmType: VarPrintStmType . SEMICOLON

    SEMICOLON  shift, and go to state 79


State 47

   12 StmType: WhileStmStype .

    $default  reduce using rule 12 (StmType)


State 48

   26 ExpType: CompareCondExpType .

    $default  reduce using rule 26 (ExpType)


State 49

   11 StmType: ExpType . SEMICOLON
   23 CompareCondExpType: ExpType . conditional_operator Term
   24 ExpType: ExpType . ANDAND ExpType
   25        | ExpType . OROR ExpType
   52 BlockExpType: LBRACE CompoundStmType ExpType . RBRACE

    RBRACE     shift, and go to state 80
    SEMICOLON  shift, and go to state 81
    ANDAND     shift, and go to state 82
    OROR       shift, and go to state 83
    GT         shift, and go to state 84
    GE         shift, and go to state 85
    LT         shift, and go to state 86
    LE         shift, and go to state 87
    EQEQ       shift, and go to state 88
    NE         shift, and go to state 89

    conditional_operator  go to state 90


State 50

   48 BinopExpType: Term . PLUS Term
   49             | Term . MINUS Term
   50             | Term . STAR Term
   51             | Term . SLASH Term

    MINUS  shift, and go to state 91
    PLUS   shift, and go to state 92
    SLASH  shift, and go to state 93
    STAR   shift, and go to state 94


State 51

   28 ExpType: IdExpType .
   37 Term: IdExpType .

    MINUS     reduce using rule 37 (Term)
    PLUS      reduce using rule 37 (Term)
    SLASH     reduce using rule 37 (Term)
    STAR      reduce using rule 37 (Term)
    $default  reduce using rule 28 (ExpType)


State 52

   32 ExpType: BoolExpType .
   38 Term: BoolExpType .

    MINUS     reduce using rule 38 (Term)
    PLUS      reduce using rule 38 (Term)
    SLASH     reduce using rule 38 (Term)
    STAR      reduce using rule 38 (Term)
    $default  reduce using rule 32 (ExpType)


State 53

   27 ExpType: NumExpType .
   36 Term: NumExpType .

    MINUS     reduce using rule 36 (Term)
    PLUS      reduce using rule 36 (Term)
    SLASH     reduce using rule 36 (Term)
    STAR      reduce using rule 36 (Term)
    $default  reduce using rule 27 (ExpType)


State 54

   29 ExpType: BinopExpType .
   41 Term: BinopExpType .

    MINUS     reduce using rule 41 (Term)
    PLUS      reduce using rule 41 (Term)
    SLASH     reduce using rule 41 (Term)
    STAR      reduce using rule 41 (Term)
    $default  reduce using rule 29 (ExpType)


State 55

   30 ExpType: BlockExpType .
   39 Term: BlockExpType .

    MINUS     reduce using rule 39 (Term)
    PLUS      reduce using rule 39 (Term)
    SLASH     reduce using rule 39 (Term)
    STAR      reduce using rule 39 (Term)
    $default  reduce using rule 30 (ExpType)


State 56

   31 ExpType: GroupExpType .
   42 Term: GroupExpType .

    MINUS     reduce using rule 42 (Term)
    PLUS      reduce using rule 42 (Term)
    SLASH     reduce using rule 42 (Term)
    STAR      reduce using rule 42 (Term)
    $default  reduce using rule 31 (ExpType)


State 57

   33 ExpType: FunctionExpType .
   40 Term: FunctionExpType .

    MINUS     reduce using rule 40 (Term)
    PLUS      reduce using rule 40 (Term)
    SLASH     reduce using rule 40 (Term)
    STAR      reduce using rule 40 (Term)
    $default  reduce using rule 33 (ExpType)


State 58

   34 ExpType: IfExpType .
   43 Term: IfExpType .

    MINUS     reduce using rule 43 (Term)
    PLUS      reduce using rule 43 (Term)
    SLASH     reduce using rule 43 (Term)
    STAR      reduce using rule 43 (Term)
    $default  reduce using rule 34 (ExpType)


State 59

   35 ExpType: NotCondType .

    $default  reduce using rule 35 (ExpType)


State 60

   72 parameter_list: parameter_list COMMA IDENTIFIER COLON type .

    $default  reduce using rule 72 (parameter_list)


State 61

   52 BlockExpType: LBRACE . CompoundStmType ExpType RBRACE

    $default  reduce using rule 2 (CompoundStmType)

    CompoundStmType  go to state 95


State 62

   55 IfExpType: IF . ExpType BlockExpType
   56          | IF . ExpType BlockExpType ELSE BlockExpType

    LPAREN       shift, and go to state 27
    LBRACE       shift, and go to state 61
    NOT          shift, and go to state 30
    IF           shift, and go to state 62
    IDENTIFIER   shift, and go to state 63
    DEC_LITERAL  shift, and go to state 35
    TRUE         shift, and go to state 37
    FALSE        shift, and go to state 38

    CompareCondExpType  go to state 48
    ExpType             go to state 96
    Term                go to state 50
    IdExpType           go to state 51
    BoolExpType         go to state 52
    NumExpType          go to state 53
    BinopExpType        go to state 54
    BlockExpType        go to state 55
    GroupExpType        go to state 56
    FunctionExpType     go to state 57
    IfExpType           go to state 58
    NotCondType         go to state 59


State 63

   44 IdExpType: IDENTIFIER .
   54 FunctionExpType: IDENTIFIER . LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 70

    $default  reduce using rule 44 (IdExpType)


State 64

   23 CompareCondExpType: ExpType . conditional_operator Term
   24 ExpType: ExpType . ANDAND ExpType
   25        | ExpType . OROR ExpType
   53 GroupExpType: LPAREN ExpType . RPAREN

    RPAREN  shift, and go to state 97
    ANDAND  shift, and go to state 82
    OROR    shift, and go to state 83
    GT      shift, and go to state 84
    GE      shift, and go to state 85
    LT      shift, and go to state 86
    LE      shift, and go to state 87
    EQEQ    shift, and go to state 88
    NE      shift, and go to state 89

    conditional_operator  go to state 90


State 65

   65 mutability: MUT .

    $default  reduce using rule 65 (mutability)


State 66

   13 LetStmType: LET mutability . IDENTIFIER COLON type EQ ExpType
   14           | LET mutability . IDENTIFIER EQ ExpType
   17 DecStmType: LET mutability . IDENTIFIER COLON type

    IDENTIFIER  shift, and go to state 98


State 67

   23 CompareCondExpType: ExpType . conditional_operator Term
   24 ExpType: ExpType . ANDAND ExpType
   25        | ExpType . OROR ExpType
   63 NotCondType: NOT ExpType .

    $default  reduce using rule 63 (NotCondType)

    conditional_operator  go to state 90


State 68

   18 IfStmType: IF ExpType . BlockStmType
   19          | IF ExpType . BlockStmType ELSE BlockStmType
   23 CompareCondExpType: ExpType . conditional_operator Term
   24 ExpType: ExpType . ANDAND ExpType
   25        | ExpType . OROR ExpType
   55 IfExpType: IF ExpType . BlockExpType
   56          | IF ExpType . BlockExpType ELSE BlockExpType

    LBRACE  shift, and go to state 18
    ANDAND  shift, and go to state 82
    OROR    shift, and go to state 83
    GT      shift, and go to state 84
    GE      shift, and go to state 85
    LT      shift, and go to state 86
    LE      shift, and go to state 87
    EQEQ    shift, and go to state 88
    NE      shift, and go to state 89

    BlockStmType          go to state 99
    BlockExpType          go to state 100
    conditional_operator  go to state 90


State 69

   22 WhileStmStype: WHILE ExpType . BlockStmType
   23 CompareCondExpType: ExpType . conditional_operator Term
   24 ExpType: ExpType . ANDAND ExpType
   25        | ExpType . OROR ExpType

    LBRACE  shift, and go to state 101
    ANDAND  shift, and go to state 82
    OROR    shift, and go to state 83
    GT      shift, and go to state 84
    GE      shift, and go to state 85
    LT      shift, and go to state 86
    LE      shift, and go to state 87
    EQEQ    shift, and go to state 88
    NE      shift, and go to state 89

    BlockStmType          go to state 102
    conditional_operator  go to state 90


State 70

   54 FunctionExpType: IDENTIFIER LPAREN . argument_list RPAREN

    LPAREN       shift, and go to state 27
    LBRACE       shift, and go to state 61
    NOT          shift, and go to state 30
    IF           shift, and go to state 62
    IDENTIFIER   shift, and go to state 63
    DEC_LITERAL  shift, and go to state 35
    TRUE         shift, and go to state 37
    FALSE        shift, and go to state 38

    $default  reduce using rule 68 (argument_list)

    CompareCondExpType  go to state 48
    ExpType             go to state 103
    Term                go to state 50
    IdExpType           go to state 51
    BoolExpType         go to state 52
    NumExpType          go to state 53
    BinopExpType        go to state 54
    BlockExpType        go to state 55
    GroupExpType        go to state 56
    FunctionExpType     go to state 57
    IfExpType           go to state 58
    NotCondType         go to state 59
    argument_list       go to state 104


State 71

   81 assignment_operator: PLUSEQ .

    $default  reduce using rule 81 (assignment_operator)


State 72

   82 assignment_operator: MINUSEQ .

    $default  reduce using rule 82 (assignment_operator)


State 73

   80 assignment_operator: EQ .

    $default  reduce using rule 80 (assignment_operator)


State 74

   15 AssignStmType: IDENTIFIER assignment_operator . ExpType

    LPAREN       shift, and go to state 27
    LBRACE       shift, and go to state 61
    NOT          shift, and go to state 30
    IF           shift, and go to state 62
    IDENTIFIER   shift, and go to state 63
    DEC_LITERAL  shift, and go to state 35
    TRUE         shift, and go to state 37
    FALSE        shift, and go to state 38

    CompareCondExpType  go to state 48
    ExpType             go to state 105
    Term                go to state 50
    IdExpType           go to state 51
    BoolExpType         go to state 52
    NumExpType          go to state 53
    BinopExpType        go to state 54
    BlockExpType        go to state 55
    GroupExpType        go to state 56
    FunctionExpType     go to state 57
    IfExpType           go to state 58
    NotCondType         go to state 59


State 75

    4 StmType: LetStmType SEMICOLON .

    $default  reduce using rule 4 (StmType)


State 76

    5 StmType: AssignStmType SEMICOLON .

    $default  reduce using rule 5 (StmType)


State 77

    7 StmType: DecStmType SEMICOLON .

    $default  reduce using rule 7 (StmType)


State 78

    9 StmType: PrintStmType SEMICOLON .

    $default  reduce using rule 9 (StmType)


State 79

   10 StmType: VarPrintStmType SEMICOLON .

    $default  reduce using rule 10 (StmType)


State 80

   52 BlockExpType: LBRACE CompoundStmType ExpType RBRACE .

    $default  reduce using rule 52 (BlockExpType)


State 81

   11 StmType: ExpType SEMICOLON .

    $default  reduce using rule 11 (StmType)


State 82

   24 ExpType: ExpType ANDAND . ExpType

    LPAREN       shift, and go to state 27
    LBRACE       shift, and go to state 61
    NOT          shift, and go to state 30
    IF           shift, and go to state 62
    IDENTIFIER   shift, and go to state 63
    DEC_LITERAL  shift, and go to state 35
    TRUE         shift, and go to state 37
    FALSE        shift, and go to state 38

    CompareCondExpType  go to state 48
    ExpType             go to state 106
    Term                go to state 50
    IdExpType           go to state 51
    BoolExpType         go to state 52
    NumExpType          go to state 53
    BinopExpType        go to state 54
    BlockExpType        go to state 55
    GroupExpType        go to state 56
    FunctionExpType     go to state 57
    IfExpType           go to state 58
    NotCondType         go to state 59


State 83

   25 ExpType: ExpType OROR . ExpType

    LPAREN       shift, and go to state 27
    LBRACE       shift, and go to state 61
    NOT          shift, and go to state 30
    IF           shift, and go to state 62
    IDENTIFIER   shift, and go to state 63
    DEC_LITERAL  shift, and go to state 35
    TRUE         shift, and go to state 37
    FALSE        shift, and go to state 38

    CompareCondExpType  go to state 48
    ExpType             go to state 107
    Term                go to state 50
    IdExpType           go to state 51
    BoolExpType         go to state 52
    NumExpType          go to state 53
    BinopExpType        go to state 54
    BlockExpType        go to state 55
    GroupExpType        go to state 56
    FunctionExpType     go to state 57
    IfExpType           go to state 58
    NotCondType         go to state 59


State 84

   76 conditional_operator: GT .

    $default  reduce using rule 76 (conditional_operator)


State 85

   77 conditional_operator: GE .

    $default  reduce using rule 77 (conditional_operator)


State 86

   74 conditional_operator: LT .

    $default  reduce using rule 74 (conditional_operator)


State 87

   75 conditional_operator: LE .

    $default  reduce using rule 75 (conditional_operator)


State 88

   78 conditional_operator: EQEQ .

    $default  reduce using rule 78 (conditional_operator)


State 89

   79 conditional_operator: NE .

    $default  reduce using rule 79 (conditional_operator)


State 90

   23 CompareCondExpType: ExpType conditional_operator . Term

    LPAREN       shift, and go to state 27
    LBRACE       shift, and go to state 61
    IF           shift, and go to state 62
    IDENTIFIER   shift, and go to state 63
    DEC_LITERAL  shift, and go to state 35
    TRUE         shift, and go to state 37
    FALSE        shift, and go to state 38

    Term             go to state 108
    IdExpType        go to state 109
    BoolExpType      go to state 110
    NumExpType       go to state 111
    BinopExpType     go to state 112
    BlockExpType     go to state 113
    GroupExpType     go to state 114
    FunctionExpType  go to state 115
    IfExpType        go to state 116


State 91

   49 BinopExpType: Term MINUS . Term

    LPAREN       shift, and go to state 27
    LBRACE       shift, and go to state 61
    IF           shift, and go to state 62
    IDENTIFIER   shift, and go to state 63
    DEC_LITERAL  shift, and go to state 35
    TRUE         shift, and go to state 37
    FALSE        shift, and go to state 38

    Term             go to state 117
    IdExpType        go to state 109
    BoolExpType      go to state 110
    NumExpType       go to state 111
    BinopExpType     go to state 112
    BlockExpType     go to state 113
    GroupExpType     go to state 114
    FunctionExpType  go to state 115
    IfExpType        go to state 116


State 92

   48 BinopExpType: Term PLUS . Term

    LPAREN       shift, and go to state 27
    LBRACE       shift, and go to state 61
    IF           shift, and go to state 62
    IDENTIFIER   shift, and go to state 63
    DEC_LITERAL  shift, and go to state 35
    TRUE         shift, and go to state 37
    FALSE        shift, and go to state 38

    Term             go to state 118
    IdExpType        go to state 109
    BoolExpType      go to state 110
    NumExpType       go to state 111
    BinopExpType     go to state 112
    BlockExpType     go to state 113
    GroupExpType     go to state 114
    FunctionExpType  go to state 115
    IfExpType        go to state 116


State 93

   51 BinopExpType: Term SLASH . Term

    LPAREN       shift, and go to state 27
    LBRACE       shift, and go to state 61
    IF           shift, and go to state 62
    IDENTIFIER   shift, and go to state 63
    DEC_LITERAL  shift, and go to state 35
    TRUE         shift, and go to state 37
    FALSE        shift, and go to state 38

    Term             go to state 119
    IdExpType        go to state 109
    BoolExpType      go to state 110
    NumExpType       go to state 111
    BinopExpType     go to state 112
    BlockExpType     go to state 113
    GroupExpType     go to state 114
    FunctionExpType  go to state 115
    IfExpType        go to state 116


State 94

   50 BinopExpType: Term STAR . Term

    LPAREN       shift, and go to state 27
    LBRACE       shift, and go to state 61
    IF           shift, and go to state 62
    IDENTIFIER   shift, and go to state 63
    DEC_LITERAL  shift, and go to state 35
    TRUE         shift, and go to state 37
    FALSE        shift, and go to state 38

    Term             go to state 120
    IdExpType        go to state 109
    BoolExpType      go to state 110
    NumExpType       go to state 111
    BinopExpType     go to state 112
    BlockExpType     go to state 113
    GroupExpType     go to state 114
    FunctionExpType  go to state 115
    IfExpType        go to state 116


State 95

    3 CompoundStmType: CompoundStmType . StmType
   52 BlockExpType: LBRACE CompoundStmType . ExpType RBRACE

    LPAREN       shift, and go to state 27
    LBRACE       shift, and go to state 18
    LET          shift, and go to state 29
    NOT          shift, and go to state 30
    IF           shift, and go to state 31
    WHILE        shift, and go to state 32
    IDENTIFIER   shift, and go to state 33
    PRINTSTRING  shift, and go to state 34
    DEC_LITERAL  shift, and go to state 35
    PRINTVAR     shift, and go to state 36
    TRUE         shift, and go to state 37
    FALSE        shift, and go to state 38

    StmType             go to state 39
    LetStmType          go to state 40
    AssignStmType       go to state 41
    BlockStmType        go to state 42
    DecStmType          go to state 43
    IfStmType           go to state 44
    PrintStmType        go to state 45
    VarPrintStmType     go to state 46
    WhileStmStype       go to state 47
    CompareCondExpType  go to state 48
    ExpType             go to state 49
    Term                go to state 50
    IdExpType           go to state 51
    BoolExpType         go to state 52
    NumExpType          go to state 53
    BinopExpType        go to state 54
    BlockExpType        go to state 55
    GroupExpType        go to state 56
    FunctionExpType     go to state 57
    IfExpType           go to state 58
    NotCondType         go to state 59


State 96

   23 CompareCondExpType: ExpType . conditional_operator Term
   24 ExpType: ExpType . ANDAND ExpType
   25        | ExpType . OROR ExpType
   55 IfExpType: IF ExpType . BlockExpType
   56          | IF ExpType . BlockExpType ELSE BlockExpType

    LBRACE  shift, and go to state 61
    ANDAND  shift, and go to state 82
    OROR    shift, and go to state 83
    GT      shift, and go to state 84
    GE      shift, and go to state 85
    LT      shift, and go to state 86
    LE      shift, and go to state 87
    EQEQ    shift, and go to state 88
    NE      shift, and go to state 89

    BlockExpType          go to state 100
    conditional_operator  go to state 90


State 97

   53 GroupExpType: LPAREN ExpType RPAREN .

    $default  reduce using rule 53 (GroupExpType)


State 98

   13 LetStmType: LET mutability IDENTIFIER . COLON type EQ ExpType
   14           | LET mutability IDENTIFIER . EQ ExpType
   17 DecStmType: LET mutability IDENTIFIER . COLON type

    COLON  shift, and go to state 121
    EQ     shift, and go to state 122


State 99

   18 IfStmType: IF ExpType BlockStmType .
   19          | IF ExpType BlockStmType . ELSE BlockStmType

    ELSE  shift, and go to state 123

    $default  reduce using rule 18 (IfStmType)


State 100

   55 IfExpType: IF ExpType BlockExpType .
   56          | IF ExpType BlockExpType . ELSE BlockExpType

    ELSE  shift, and go to state 124

    $default  reduce using rule 55 (IfExpType)


State 101

   16 BlockStmType: LBRACE . CompoundStmType RBRACE

    $default  reduce using rule 2 (CompoundStmType)

    CompoundStmType  go to state 125


State 102

   22 WhileStmStype: WHILE ExpType BlockStmType .

    $default  reduce using rule 22 (WhileStmStype)


State 103

   23 CompareCondExpType: ExpType . conditional_operator Term
   24 ExpType: ExpType . ANDAND ExpType
   25        | ExpType . OROR ExpType
   70 argument_list: ExpType .

    ANDAND  shift, and go to state 82
    OROR    shift, and go to state 83
    GT      shift, and go to state 84
    GE      shift, and go to state 85
    LT      shift, and go to state 86
    LE      shift, and go to state 87
    EQEQ    shift, and go to state 88
    NE      shift, and go to state 89

    $default  reduce using rule 70 (argument_list)

    conditional_operator  go to state 90


State 104

   54 FunctionExpType: IDENTIFIER LPAREN argument_list . RPAREN
   69 argument_list: argument_list . COMMA ExpType

    RPAREN  shift, and go to state 126
    COMMA   shift, and go to state 127


State 105

   15 AssignStmType: IDENTIFIER assignment_operator ExpType .
   23 CompareCondExpType: ExpType . conditional_operator Term
   24 ExpType: ExpType . ANDAND ExpType
   25        | ExpType . OROR ExpType

    ANDAND  shift, and go to state 82
    OROR    shift, and go to state 83
    GT      shift, and go to state 84
    GE      shift, and go to state 85
    LT      shift, and go to state 86
    LE      shift, and go to state 87
    EQEQ    shift, and go to state 88
    NE      shift, and go to state 89

    $default  reduce using rule 15 (AssignStmType)

    conditional_operator  go to state 90


State 106

   23 CompareCondExpType: ExpType . conditional_operator Term
   24 ExpType: ExpType . ANDAND ExpType
   24        | ExpType ANDAND ExpType .
   25        | ExpType . OROR ExpType

    GT    shift, and go to state 84
    GE    shift, and go to state 85
    LT    shift, and go to state 86
    LE    shift, and go to state 87
    EQEQ  shift, and go to state 88
    NE    shift, and go to state 89

    $default  reduce using rule 24 (ExpType)

    conditional_operator  go to state 90


State 107

   23 CompareCondExpType: ExpType . conditional_operator Term
   24 ExpType: ExpType . ANDAND ExpType
   25        | ExpType . OROR ExpType
   25        | ExpType OROR ExpType .

    GT    shift, and go to state 84
    GE    shift, and go to state 85
    LT    shift, and go to state 86
    LE    shift, and go to state 87
    EQEQ  shift, and go to state 88
    NE    shift, and go to state 89

    $default  reduce using rule 25 (ExpType)

    conditional_operator  go to state 90


State 108

   23 CompareCondExpType: ExpType conditional_operator Term .
   48 BinopExpType: Term . PLUS Term
   49             | Term . MINUS Term
   50             | Term . STAR Term
   51             | Term . SLASH Term

    MINUS  shift, and go to state 91
    PLUS   shift, and go to state 92
    SLASH  shift, and go to state 93
    STAR   shift, and go to state 94

    $default  reduce using rule 23 (CompareCondExpType)


State 109

   37 Term: IdExpType .

    $default  reduce using rule 37 (Term)


State 110

   38 Term: BoolExpType .

    $default  reduce using rule 38 (Term)


State 111

   36 Term: NumExpType .

    $default  reduce using rule 36 (Term)


State 112

   41 Term: BinopExpType .

    $default  reduce using rule 41 (Term)


State 113

   39 Term: BlockExpType .

    $default  reduce using rule 39 (Term)


State 114

   42 Term: GroupExpType .

    $default  reduce using rule 42 (Term)


State 115

   40 Term: FunctionExpType .

    $default  reduce using rule 40 (Term)


State 116

   43 Term: IfExpType .

    $default  reduce using rule 43 (Term)


State 117

   48 BinopExpType: Term . PLUS Term
   49             | Term . MINUS Term
   49             | Term MINUS Term .
   50             | Term . STAR Term
   51             | Term . SLASH Term

    SLASH  shift, and go to state 93
    STAR   shift, and go to state 94

    $default  reduce using rule 49 (BinopExpType)


State 118

   48 BinopExpType: Term . PLUS Term
   48             | Term PLUS Term .
   49             | Term . MINUS Term
   50             | Term . STAR Term
   51             | Term . SLASH Term

    SLASH  shift, and go to state 93
    STAR   shift, and go to state 94

    $default  reduce using rule 48 (BinopExpType)


State 119

   48 BinopExpType: Term . PLUS Term
   49             | Term . MINUS Term
   50             | Term . STAR Term
   51             | Term . SLASH Term
   51             | Term SLASH Term .

    $default  reduce using rule 51 (BinopExpType)


State 120

   48 BinopExpType: Term . PLUS Term
   49             | Term . MINUS Term
   50             | Term . STAR Term
   50             | Term STAR Term .
   51             | Term . SLASH Term

    $default  reduce using rule 50 (BinopExpType)


State 121

   13 LetStmType: LET mutability IDENTIFIER COLON . type EQ ExpType
   17 DecStmType: LET mutability IDENTIFIER COLON . type

    INT   shift, and go to state 14
    BOOL  shift, and go to state 15

    type  go to state 128


State 122

   14 LetStmType: LET mutability IDENTIFIER EQ . ExpType

    LPAREN       shift, and go to state 27
    LBRACE       shift, and go to state 61
    NOT          shift, and go to state 30
    IF           shift, and go to state 62
    IDENTIFIER   shift, and go to state 63
    DEC_LITERAL  shift, and go to state 35
    TRUE         shift, and go to state 37
    FALSE        shift, and go to state 38

    CompareCondExpType  go to state 48
    ExpType             go to state 129
    Term                go to state 50
    IdExpType           go to state 51
    BoolExpType         go to state 52
    NumExpType          go to state 53
    BinopExpType        go to state 54
    BlockExpType        go to state 55
    GroupExpType        go to state 56
    FunctionExpType     go to state 57
    IfExpType           go to state 58
    NotCondType         go to state 59


State 123

   19 IfStmType: IF ExpType BlockStmType ELSE . BlockStmType

    LBRACE  shift, and go to state 101

    BlockStmType  go to state 130


State 124

   56 IfExpType: IF ExpType BlockExpType ELSE . BlockExpType

    LBRACE  shift, and go to state 61

    BlockExpType  go to state 131


State 125

    3 CompoundStmType: CompoundStmType . StmType
   16 BlockStmType: LBRACE CompoundStmType . RBRACE

    LPAREN       shift, and go to state 27
    LBRACE       shift, and go to state 18
    RBRACE       shift, and go to state 28
    LET          shift, and go to state 29
    NOT          shift, and go to state 30
    IF           shift, and go to state 31
    WHILE        shift, and go to state 32
    IDENTIFIER   shift, and go to state 33
    PRINTSTRING  shift, and go to state 34
    DEC_LITERAL  shift, and go to state 35
    PRINTVAR     shift, and go to state 36
    TRUE         shift, and go to state 37
    FALSE        shift, and go to state 38

    StmType             go to state 39
    LetStmType          go to state 40
    AssignStmType       go to state 41
    BlockStmType        go to state 42
    DecStmType          go to state 43
    IfStmType           go to state 44
    PrintStmType        go to state 45
    VarPrintStmType     go to state 46
    WhileStmStype       go to state 47
    CompareCondExpType  go to state 48
    ExpType             go to state 132
    Term                go to state 50
    IdExpType           go to state 51
    BoolExpType         go to state 52
    NumExpType          go to state 53
    BinopExpType        go to state 54
    BlockExpType        go to state 55
    GroupExpType        go to state 56
    FunctionExpType     go to state 57
    IfExpType           go to state 58
    NotCondType         go to state 59


State 126

   54 FunctionExpType: IDENTIFIER LPAREN argument_list RPAREN .

    $default  reduce using rule 54 (FunctionExpType)


State 127

   69 argument_list: argument_list COMMA . ExpType

    LPAREN       shift, and go to state 27
    LBRACE       shift, and go to state 61
    NOT          shift, and go to state 30
    IF           shift, and go to state 62
    IDENTIFIER   shift, and go to state 63
    DEC_LITERAL  shift, and go to state 35
    TRUE         shift, and go to state 37
    FALSE        shift, and go to state 38

    CompareCondExpType  go to state 48
    ExpType             go to state 133
    Term                go to state 50
    IdExpType           go to state 51
    BoolExpType         go to state 52
    NumExpType          go to state 53
    BinopExpType        go to state 54
    BlockExpType        go to state 55
    GroupExpType        go to state 56
    FunctionExpType     go to state 57
    IfExpType           go to state 58
    NotCondType         go to state 59


State 128

   13 LetStmType: LET mutability IDENTIFIER COLON type . EQ ExpType
   17 DecStmType: LET mutability IDENTIFIER COLON type .

    EQ  shift, and go to state 134

    $default  reduce using rule 17 (DecStmType)


State 129

   14 LetStmType: LET mutability IDENTIFIER EQ ExpType .
   23 CompareCondExpType: ExpType . conditional_operator Term
   24 ExpType: ExpType . ANDAND ExpType
   25        | ExpType . OROR ExpType

    ANDAND  shift, and go to state 82
    OROR    shift, and go to state 83
    GT      shift, and go to state 84
    GE      shift, and go to state 85
    LT      shift, and go to state 86
    LE      shift, and go to state 87
    EQEQ    shift, and go to state 88
    NE      shift, and go to state 89

    $default  reduce using rule 14 (LetStmType)

    conditional_operator  go to state 90


State 130

   19 IfStmType: IF ExpType BlockStmType ELSE BlockStmType .

    $default  reduce using rule 19 (IfStmType)


State 131

   56 IfExpType: IF ExpType BlockExpType ELSE BlockExpType .

    $default  reduce using rule 56 (IfExpType)


State 132

   11 StmType: ExpType . SEMICOLON
   23 CompareCondExpType: ExpType . conditional_operator Term
   24 ExpType: ExpType . ANDAND ExpType
   25        | ExpType . OROR ExpType

    SEMICOLON  shift, and go to state 81
    ANDAND     shift, and go to state 82
    OROR       shift, and go to state 83
    GT         shift, and go to state 84
    GE         shift, and go to state 85
    LT         shift, and go to state 86
    LE         shift, and go to state 87
    EQEQ       shift, and go to state 88
    NE         shift, and go to state 89

    conditional_operator  go to state 90


State 133

   23 CompareCondExpType: ExpType . conditional_operator Term
   24 ExpType: ExpType . ANDAND ExpType
   25        | ExpType . OROR ExpType
   69 argument_list: argument_list COMMA ExpType .

    ANDAND  shift, and go to state 82
    OROR    shift, and go to state 83
    GT      shift, and go to state 84
    GE      shift, and go to state 85
    LT      shift, and go to state 86
    LE      shift, and go to state 87
    EQEQ    shift, and go to state 88
    NE      shift, and go to state 89

    $default  reduce using rule 69 (argument_list)

    conditional_operator  go to state 90


State 134

   13 LetStmType: LET mutability IDENTIFIER COLON type EQ . ExpType

    LPAREN       shift, and go to state 27
    LBRACE       shift, and go to state 61
    NOT          shift, and go to state 30
    IF           shift, and go to state 62
    IDENTIFIER   shift, and go to state 63
    DEC_LITERAL  shift, and go to state 35
    TRUE         shift, and go to state 37
    FALSE        shift, and go to state 38

    CompareCondExpType  go to state 48
    ExpType             go to state 135
    Term                go to state 50
    IdExpType           go to state 51
    BoolExpType         go to state 52
    NumExpType          go to state 53
    BinopExpType        go to state 54
    BlockExpType        go to state 55
    GroupExpType        go to state 56
    FunctionExpType     go to state 57
    IfExpType           go to state 58
    NotCondType         go to state 59


State 135

   13 LetStmType: LET mutability IDENTIFIER COLON type EQ ExpType .
   23 CompareCondExpType: ExpType . conditional_operator Term
   24 ExpType: ExpType . ANDAND ExpType
   25        | ExpType . OROR ExpType

    ANDAND  shift, and go to state 82
    OROR    shift, and go to state 83
    GT      shift, and go to state 84
    GE      shift, and go to state 85
    LT      shift, and go to state 86
    LE      shift, and go to state 87
    EQEQ    shift, and go to state 88
    NE      shift, and go to state 89

    $default  reduce using rule 13 (LetStmType)

    conditional_operator  go to state 90
