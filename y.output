Terminals unused in grammar

   ANDAND
   OROR


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | function_list

    3 function_list: function_list function
    4              | function

    5 function: FN IDENTIFIER LPAREN parameter_list RPAREN return_type block_statement
    6         | FN IDENTIFIER LPAREN parameter_list RPAREN return_type block_expression

    7 return_type: /* empty */
    8            | ARROW type

    9 parameter_list: /* empty */
   10               | parameter_list COMMA parameter
   11               | parameter

   12 parameter: IDENTIFIER COLON mutability type
   13          | expression

   14 type: INT
   15     | BOOL

   16 statement_list: /* empty */
   17               | statement_list statement

   18 statement: let_statement SEMICOLON
   19          | assign_statement SEMICOLON
   20          | expression_statement SEMICOLON
   21          | if_statement
   22          | print_statement SEMICOLON
   23          | declaration_statement SEMICOLON
   24          | while_statement
   25          | block_statement

   26 while_statement: WHILE conditional block_statement

   27 declaration_statement: LET mutability IDENTIFIER COLON type

   28 print_statement: PRINTSTRING
   29                | PRINTVAR

   30 let_statement: LET mutability IDENTIFIER COLON type EQ expression
   31              | LET mutability IDENTIFIER EQ mutability expression

   32 assign_statement: IDENTIFIER assignment_operator expression_statement
   33                 | STAR IDENTIFIER assignment_operator expression_statement

   34 assignment_operator: EQ
   35                    | PLUSEQ
   36                    | MINUSEQ

   37 expression_statement: expression

   38 expression: value
   39           | function_call
   40           | IDENTIFIER
   41           | if_expression
   42           | STAR expression
   43           | block_expression
   44           | binary_operation
   45           | grouped_expression

   46 binary_operation: expression PLUS expression
   47                 | expression MINUS expression
   48                 | expression STAR expression
   49                 | expression SLASH expression

   50 grouped_expression: LPAREN binary_operation RPAREN

   51 function_call: IDENTIFIER LPAREN parameter_list RPAREN

   52 if_statement: IF conditional block_statement
   53             | IF conditional block_statement ELSE block_statement

   54 if_expression: IF conditional block_expression
   55              | IF conditional block_expression ELSE block_expression

   56 conditional: expression LT expression
   57            | expression LE expression
   58            | expression GT expression
   59            | expression GE expression
   60            | expression NE expression
   61            | expression EQEQ expression
   62            | NOT expression
   63            | TRUE
   64            | FALSE

   65 block_statement: LBRACE statement_list RBRACE

   66 block_expression: LBRACE statement_list expression RBRACE

   67 value: DEC_LITERAL
   68      | TRUE
   69      | FALSE

   70 mutability: /* empty */
   71           | MUT
   72           | AMPERSAND MUT


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENTIFIER (258) 5 6 12 27 30 31 32 33 40 51
PRINTVAR (259) 29
PRINTSTRING (260) 28
DEC_LITERAL (261) 67
TRUE (262) 63 68
FALSE (263) 64 69
FN (264) 5 6
LPAREN (265) 5 6 50 51
RPAREN (266) 5 6 50 51
ARROW (267) 8
LBRACE (268) 65 66
RBRACE (269) 65 66
SEMICOLON (270) 18 19 20 22 23
COLON (271) 12 27 30
LET (272) 27 30 31
EQ (273) 30 31 34
PLUS (274) 46
MINUS (275) 47
STAR (276) 33 42 48
SLASH (277) 49
PLUSEQ (278) 35
MINUSEQ (279) 36
ANDAND (280)
OROR (281)
NOT (282) 62
GT (283) 58
GE (284) 59
LT (285) 56
LE (286) 57
EQEQ (287) 61
NE (288) 60
AMPERSAND (289) 72
IF (290) 52 53 54 55
ELSE (291) 53 55
WHILE (292) 26
MUT (293) 71 72
COMMA (294) 10
INT (295) 14
BOOL (296) 15


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
program (43)
    on left: 1 2, on right: 0
function_list (44)
    on left: 3 4, on right: 2 3
function (45)
    on left: 5 6, on right: 3 4
return_type (46)
    on left: 7 8, on right: 5 6
parameter_list (47)
    on left: 9 10 11, on right: 5 6 10 51
parameter (48)
    on left: 12 13, on right: 10 11
type (49)
    on left: 14 15, on right: 8 12 27 30
statement_list (50)
    on left: 16 17, on right: 17 65 66
statement (51)
    on left: 18 19 20 21 22 23 24 25, on right: 17
while_statement (52)
    on left: 26, on right: 24
declaration_statement (53)
    on left: 27, on right: 23
print_statement (54)
    on left: 28 29, on right: 22
let_statement (55)
    on left: 30 31, on right: 18
assign_statement (56)
    on left: 32 33, on right: 19
assignment_operator (57)
    on left: 34 35 36, on right: 32 33
expression_statement (58)
    on left: 37, on right: 20 32 33
expression (59)
    on left: 38 39 40 41 42 43 44 45, on right: 13 30 31 37 42 46 47
    48 49 56 57 58 59 60 61 62 66
binary_operation (60)
    on left: 46 47 48 49, on right: 44 50
grouped_expression (61)
    on left: 50, on right: 45
function_call (62)
    on left: 51, on right: 39
if_statement (63)
    on left: 52 53, on right: 21
if_expression (64)
    on left: 54 55, on right: 41
conditional (65)
    on left: 56 57 58 59 60 61 62 63 64, on right: 26 52 53 54 55
block_statement (66)
    on left: 65, on right: 5 25 26 52 53
block_expression (67)
    on left: 66, on right: 6 43 54 55
value (68)
    on left: 67 68 69, on right: 38
mutability (69)
    on left: 70 71 72, on right: 12 27 30 31


State 0

    0 $accept: . program $end

    FN  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    5 function: FN . IDENTIFIER LPAREN parameter_list RPAREN return_type block_statement
    6         | FN . IDENTIFIER LPAREN parameter_list RPAREN return_type block_expression

    IDENTIFIER  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    2 program: function_list .
    3 function_list: function_list . function

    FN  shift, and go to state 1

    $default  reduce using rule 2 (program)

    function  go to state 7


State 4

    4 function_list: function .

    $default  reduce using rule 4 (function_list)


State 5

    5 function: FN IDENTIFIER . LPAREN parameter_list RPAREN return_type block_statement
    6         | FN IDENTIFIER . LPAREN parameter_list RPAREN return_type block_expression

    LPAREN  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    5 function: FN IDENTIFIER LPAREN . parameter_list RPAREN return_type block_statement
    6         | FN IDENTIFIER LPAREN . parameter_list RPAREN return_type block_expression

    IDENTIFIER   shift, and go to state 9
    DEC_LITERAL  shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    LPAREN       shift, and go to state 13
    LBRACE       shift, and go to state 14
    STAR         shift, and go to state 15
    IF           shift, and go to state 16

    $default  reduce using rule 9 (parameter_list)

    parameter_list      go to state 17
    parameter           go to state 18
    expression          go to state 19
    binary_operation    go to state 20
    grouped_expression  go to state 21
    function_call       go to state 22
    if_expression       go to state 23
    block_expression    go to state 24
    value               go to state 25


State 9

   12 parameter: IDENTIFIER . COLON mutability type
   40 expression: IDENTIFIER .
   51 function_call: IDENTIFIER . LPAREN parameter_list RPAREN

    LPAREN  shift, and go to state 26
    COLON   shift, and go to state 27

    $default  reduce using rule 40 (expression)


State 10

   67 value: DEC_LITERAL .

    $default  reduce using rule 67 (value)


State 11

   68 value: TRUE .

    $default  reduce using rule 68 (value)


State 12

   69 value: FALSE .

    $default  reduce using rule 69 (value)


State 13

   50 grouped_expression: LPAREN . binary_operation RPAREN

    IDENTIFIER   shift, and go to state 28
    DEC_LITERAL  shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    LPAREN       shift, and go to state 13
    LBRACE       shift, and go to state 14
    STAR         shift, and go to state 15
    IF           shift, and go to state 16

    expression          go to state 29
    binary_operation    go to state 30
    grouped_expression  go to state 21
    function_call       go to state 22
    if_expression       go to state 23
    block_expression    go to state 24
    value               go to state 25


State 14

   66 block_expression: LBRACE . statement_list expression RBRACE

    $default  reduce using rule 16 (statement_list)

    statement_list  go to state 31


State 15

   42 expression: STAR . expression

    IDENTIFIER   shift, and go to state 28
    DEC_LITERAL  shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    LPAREN       shift, and go to state 13
    LBRACE       shift, and go to state 14
    STAR         shift, and go to state 15
    IF           shift, and go to state 16

    expression          go to state 32
    binary_operation    go to state 20
    grouped_expression  go to state 21
    function_call       go to state 22
    if_expression       go to state 23
    block_expression    go to state 24
    value               go to state 25


State 16

   54 if_expression: IF . conditional block_expression
   55              | IF . conditional block_expression ELSE block_expression

    IDENTIFIER   shift, and go to state 28
    DEC_LITERAL  shift, and go to state 10
    TRUE         shift, and go to state 33
    FALSE        shift, and go to state 34
    LPAREN       shift, and go to state 13
    LBRACE       shift, and go to state 14
    STAR         shift, and go to state 15
    NOT          shift, and go to state 35
    IF           shift, and go to state 16

    expression          go to state 36
    binary_operation    go to state 20
    grouped_expression  go to state 21
    function_call       go to state 22
    if_expression       go to state 23
    conditional         go to state 37
    block_expression    go to state 24
    value               go to state 25


State 17

    5 function: FN IDENTIFIER LPAREN parameter_list . RPAREN return_type block_statement
    6         | FN IDENTIFIER LPAREN parameter_list . RPAREN return_type block_expression
   10 parameter_list: parameter_list . COMMA parameter

    RPAREN  shift, and go to state 38
    COMMA   shift, and go to state 39


State 18

   11 parameter_list: parameter .

    $default  reduce using rule 11 (parameter_list)


State 19

   13 parameter: expression .
   46 binary_operation: expression . PLUS expression
   47                 | expression . MINUS expression
   48                 | expression . STAR expression
   49                 | expression . SLASH expression

    PLUS   shift, and go to state 40
    MINUS  shift, and go to state 41
    STAR   shift, and go to state 42
    SLASH  shift, and go to state 43

    $default  reduce using rule 13 (parameter)


State 20

   44 expression: binary_operation .

    $default  reduce using rule 44 (expression)


State 21

   45 expression: grouped_expression .

    $default  reduce using rule 45 (expression)


State 22

   39 expression: function_call .

    $default  reduce using rule 39 (expression)


State 23

   41 expression: if_expression .

    $default  reduce using rule 41 (expression)


State 24

   43 expression: block_expression .

    $default  reduce using rule 43 (expression)


State 25

   38 expression: value .

    $default  reduce using rule 38 (expression)


State 26

   51 function_call: IDENTIFIER LPAREN . parameter_list RPAREN

    IDENTIFIER   shift, and go to state 9
    DEC_LITERAL  shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    LPAREN       shift, and go to state 13
    LBRACE       shift, and go to state 14
    STAR         shift, and go to state 15
    IF           shift, and go to state 16

    $default  reduce using rule 9 (parameter_list)

    parameter_list      go to state 44
    parameter           go to state 18
    expression          go to state 19
    binary_operation    go to state 20
    grouped_expression  go to state 21
    function_call       go to state 22
    if_expression       go to state 23
    block_expression    go to state 24
    value               go to state 25


State 27

   12 parameter: IDENTIFIER COLON . mutability type

    AMPERSAND  shift, and go to state 45
    MUT        shift, and go to state 46

    $default  reduce using rule 70 (mutability)

    mutability  go to state 47


State 28

   40 expression: IDENTIFIER .
   51 function_call: IDENTIFIER . LPAREN parameter_list RPAREN

    LPAREN  shift, and go to state 26

    $default  reduce using rule 40 (expression)


State 29

   46 binary_operation: expression . PLUS expression
   47                 | expression . MINUS expression
   48                 | expression . STAR expression
   49                 | expression . SLASH expression

    PLUS   shift, and go to state 40
    MINUS  shift, and go to state 41
    STAR   shift, and go to state 42
    SLASH  shift, and go to state 43


State 30

   44 expression: binary_operation .
   50 grouped_expression: LPAREN binary_operation . RPAREN

    RPAREN  shift, and go to state 48

    $default  reduce using rule 44 (expression)


State 31

   17 statement_list: statement_list . statement
   66 block_expression: LBRACE statement_list . expression RBRACE

    IDENTIFIER   shift, and go to state 49
    PRINTVAR     shift, and go to state 50
    PRINTSTRING  shift, and go to state 51
    DEC_LITERAL  shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    LPAREN       shift, and go to state 13
    LBRACE       shift, and go to state 52
    LET          shift, and go to state 53
    STAR         shift, and go to state 54
    IF           shift, and go to state 55
    WHILE        shift, and go to state 56

    statement              go to state 57
    while_statement        go to state 58
    declaration_statement  go to state 59
    print_statement        go to state 60
    let_statement          go to state 61
    assign_statement       go to state 62
    expression_statement   go to state 63
    expression             go to state 64
    binary_operation       go to state 20
    grouped_expression     go to state 21
    function_call          go to state 22
    if_statement           go to state 65
    if_expression          go to state 23
    block_statement        go to state 66
    block_expression       go to state 24
    value                  go to state 25


State 32

   42 expression: STAR expression .
   46 binary_operation: expression . PLUS expression
   47                 | expression . MINUS expression
   48                 | expression . STAR expression
   49                 | expression . SLASH expression

    $default  reduce using rule 42 (expression)


State 33

   63 conditional: TRUE .
   68 value: TRUE .

    LBRACE    reduce using rule 63 (conditional)
    $default  reduce using rule 68 (value)


State 34

   64 conditional: FALSE .
   69 value: FALSE .

    LBRACE    reduce using rule 64 (conditional)
    $default  reduce using rule 69 (value)


State 35

   62 conditional: NOT . expression

    IDENTIFIER   shift, and go to state 28
    DEC_LITERAL  shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    LPAREN       shift, and go to state 13
    LBRACE       shift, and go to state 14
    STAR         shift, and go to state 15
    IF           shift, and go to state 16

    expression          go to state 67
    binary_operation    go to state 20
    grouped_expression  go to state 21
    function_call       go to state 22
    if_expression       go to state 23
    block_expression    go to state 24
    value               go to state 25


State 36

   46 binary_operation: expression . PLUS expression
   47                 | expression . MINUS expression
   48                 | expression . STAR expression
   49                 | expression . SLASH expression
   56 conditional: expression . LT expression
   57            | expression . LE expression
   58            | expression . GT expression
   59            | expression . GE expression
   60            | expression . NE expression
   61            | expression . EQEQ expression

    PLUS   shift, and go to state 40
    MINUS  shift, and go to state 41
    STAR   shift, and go to state 42
    SLASH  shift, and go to state 43
    GT     shift, and go to state 68
    GE     shift, and go to state 69
    LT     shift, and go to state 70
    LE     shift, and go to state 71
    EQEQ   shift, and go to state 72
    NE     shift, and go to state 73


State 37

   54 if_expression: IF conditional . block_expression
   55              | IF conditional . block_expression ELSE block_expression

    LBRACE  shift, and go to state 14

    block_expression  go to state 74


State 38

    5 function: FN IDENTIFIER LPAREN parameter_list RPAREN . return_type block_statement
    6         | FN IDENTIFIER LPAREN parameter_list RPAREN . return_type block_expression

    ARROW  shift, and go to state 75

    $default  reduce using rule 7 (return_type)

    return_type  go to state 76


State 39

   10 parameter_list: parameter_list COMMA . parameter

    IDENTIFIER   shift, and go to state 9
    DEC_LITERAL  shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    LPAREN       shift, and go to state 13
    LBRACE       shift, and go to state 14
    STAR         shift, and go to state 15
    IF           shift, and go to state 16

    parameter           go to state 77
    expression          go to state 19
    binary_operation    go to state 20
    grouped_expression  go to state 21
    function_call       go to state 22
    if_expression       go to state 23
    block_expression    go to state 24
    value               go to state 25


State 40

   46 binary_operation: expression PLUS . expression

    IDENTIFIER   shift, and go to state 28
    DEC_LITERAL  shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    LPAREN       shift, and go to state 13
    LBRACE       shift, and go to state 14
    STAR         shift, and go to state 15
    IF           shift, and go to state 16

    expression          go to state 78
    binary_operation    go to state 20
    grouped_expression  go to state 21
    function_call       go to state 22
    if_expression       go to state 23
    block_expression    go to state 24
    value               go to state 25


State 41

   47 binary_operation: expression MINUS . expression

    IDENTIFIER   shift, and go to state 28
    DEC_LITERAL  shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    LPAREN       shift, and go to state 13
    LBRACE       shift, and go to state 14
    STAR         shift, and go to state 15
    IF           shift, and go to state 16

    expression          go to state 79
    binary_operation    go to state 20
    grouped_expression  go to state 21
    function_call       go to state 22
    if_expression       go to state 23
    block_expression    go to state 24
    value               go to state 25


State 42

   48 binary_operation: expression STAR . expression

    IDENTIFIER   shift, and go to state 28
    DEC_LITERAL  shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    LPAREN       shift, and go to state 13
    LBRACE       shift, and go to state 14
    STAR         shift, and go to state 15
    IF           shift, and go to state 16

    expression          go to state 80
    binary_operation    go to state 20
    grouped_expression  go to state 21
    function_call       go to state 22
    if_expression       go to state 23
    block_expression    go to state 24
    value               go to state 25


State 43

   49 binary_operation: expression SLASH . expression

    IDENTIFIER   shift, and go to state 28
    DEC_LITERAL  shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    LPAREN       shift, and go to state 13
    LBRACE       shift, and go to state 14
    STAR         shift, and go to state 15
    IF           shift, and go to state 16

    expression          go to state 81
    binary_operation    go to state 20
    grouped_expression  go to state 21
    function_call       go to state 22
    if_expression       go to state 23
    block_expression    go to state 24
    value               go to state 25


State 44

   10 parameter_list: parameter_list . COMMA parameter
   51 function_call: IDENTIFIER LPAREN parameter_list . RPAREN

    RPAREN  shift, and go to state 82
    COMMA   shift, and go to state 39


State 45

   72 mutability: AMPERSAND . MUT

    MUT  shift, and go to state 83


State 46

   71 mutability: MUT .

    $default  reduce using rule 71 (mutability)


State 47

   12 parameter: IDENTIFIER COLON mutability . type

    INT   shift, and go to state 84
    BOOL  shift, and go to state 85

    type  go to state 86


State 48

   50 grouped_expression: LPAREN binary_operation RPAREN .

    $default  reduce using rule 50 (grouped_expression)


State 49

   32 assign_statement: IDENTIFIER . assignment_operator expression_statement
   40 expression: IDENTIFIER .
   51 function_call: IDENTIFIER . LPAREN parameter_list RPAREN

    LPAREN   shift, and go to state 26
    EQ       shift, and go to state 87
    PLUSEQ   shift, and go to state 88
    MINUSEQ  shift, and go to state 89

    $default  reduce using rule 40 (expression)

    assignment_operator  go to state 90


State 50

   29 print_statement: PRINTVAR .

    $default  reduce using rule 29 (print_statement)


State 51

   28 print_statement: PRINTSTRING .

    $default  reduce using rule 28 (print_statement)


State 52

   65 block_statement: LBRACE . statement_list RBRACE
   66 block_expression: LBRACE . statement_list expression RBRACE

    $default  reduce using rule 16 (statement_list)

    statement_list  go to state 91


State 53

   27 declaration_statement: LET . mutability IDENTIFIER COLON type
   30 let_statement: LET . mutability IDENTIFIER COLON type EQ expression
   31              | LET . mutability IDENTIFIER EQ mutability expression

    AMPERSAND  shift, and go to state 45
    MUT        shift, and go to state 46

    $default  reduce using rule 70 (mutability)

    mutability  go to state 92


State 54

   33 assign_statement: STAR . IDENTIFIER assignment_operator expression_statement
   42 expression: STAR . expression

    IDENTIFIER   shift, and go to state 93
    DEC_LITERAL  shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    LPAREN       shift, and go to state 13
    LBRACE       shift, and go to state 14
    STAR         shift, and go to state 15
    IF           shift, and go to state 16

    expression          go to state 32
    binary_operation    go to state 20
    grouped_expression  go to state 21
    function_call       go to state 22
    if_expression       go to state 23
    block_expression    go to state 24
    value               go to state 25


State 55

   52 if_statement: IF . conditional block_statement
   53             | IF . conditional block_statement ELSE block_statement
   54 if_expression: IF . conditional block_expression
   55              | IF . conditional block_expression ELSE block_expression

    IDENTIFIER   shift, and go to state 28
    DEC_LITERAL  shift, and go to state 10
    TRUE         shift, and go to state 33
    FALSE        shift, and go to state 34
    LPAREN       shift, and go to state 13
    LBRACE       shift, and go to state 14
    STAR         shift, and go to state 15
    NOT          shift, and go to state 35
    IF           shift, and go to state 16

    expression          go to state 36
    binary_operation    go to state 20
    grouped_expression  go to state 21
    function_call       go to state 22
    if_expression       go to state 23
    conditional         go to state 94
    block_expression    go to state 24
    value               go to state 25


State 56

   26 while_statement: WHILE . conditional block_statement

    IDENTIFIER   shift, and go to state 28
    DEC_LITERAL  shift, and go to state 10
    TRUE         shift, and go to state 33
    FALSE        shift, and go to state 34
    LPAREN       shift, and go to state 13
    LBRACE       shift, and go to state 14
    STAR         shift, and go to state 15
    NOT          shift, and go to state 35
    IF           shift, and go to state 16

    expression          go to state 36
    binary_operation    go to state 20
    grouped_expression  go to state 21
    function_call       go to state 22
    if_expression       go to state 23
    conditional         go to state 95
    block_expression    go to state 24
    value               go to state 25


State 57

   17 statement_list: statement_list statement .

    $default  reduce using rule 17 (statement_list)


State 58

   24 statement: while_statement .

    $default  reduce using rule 24 (statement)


State 59

   23 statement: declaration_statement . SEMICOLON

    SEMICOLON  shift, and go to state 96


State 60

   22 statement: print_statement . SEMICOLON

    SEMICOLON  shift, and go to state 97


State 61

   18 statement: let_statement . SEMICOLON

    SEMICOLON  shift, and go to state 98


State 62

   19 statement: assign_statement . SEMICOLON

    SEMICOLON  shift, and go to state 99


State 63

   20 statement: expression_statement . SEMICOLON

    SEMICOLON  shift, and go to state 100


State 64

   37 expression_statement: expression .
   46 binary_operation: expression . PLUS expression
   47                 | expression . MINUS expression
   48                 | expression . STAR expression
   49                 | expression . SLASH expression
   66 block_expression: LBRACE statement_list expression . RBRACE

    RBRACE  shift, and go to state 101
    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    STAR    shift, and go to state 42
    SLASH   shift, and go to state 43

    $default  reduce using rule 37 (expression_statement)


State 65

   21 statement: if_statement .

    $default  reduce using rule 21 (statement)


State 66

   25 statement: block_statement .

    $default  reduce using rule 25 (statement)


State 67

   46 binary_operation: expression . PLUS expression
   47                 | expression . MINUS expression
   48                 | expression . STAR expression
   49                 | expression . SLASH expression
   62 conditional: NOT expression .

    PLUS   shift, and go to state 40
    MINUS  shift, and go to state 41
    STAR   shift, and go to state 42
    SLASH  shift, and go to state 43

    $default  reduce using rule 62 (conditional)


State 68

   58 conditional: expression GT . expression

    IDENTIFIER   shift, and go to state 28
    DEC_LITERAL  shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    LPAREN       shift, and go to state 13
    LBRACE       shift, and go to state 14
    STAR         shift, and go to state 15
    IF           shift, and go to state 16

    expression          go to state 102
    binary_operation    go to state 20
    grouped_expression  go to state 21
    function_call       go to state 22
    if_expression       go to state 23
    block_expression    go to state 24
    value               go to state 25


State 69

   59 conditional: expression GE . expression

    IDENTIFIER   shift, and go to state 28
    DEC_LITERAL  shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    LPAREN       shift, and go to state 13
    LBRACE       shift, and go to state 14
    STAR         shift, and go to state 15
    IF           shift, and go to state 16

    expression          go to state 103
    binary_operation    go to state 20
    grouped_expression  go to state 21
    function_call       go to state 22
    if_expression       go to state 23
    block_expression    go to state 24
    value               go to state 25


State 70

   56 conditional: expression LT . expression

    IDENTIFIER   shift, and go to state 28
    DEC_LITERAL  shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    LPAREN       shift, and go to state 13
    LBRACE       shift, and go to state 14
    STAR         shift, and go to state 15
    IF           shift, and go to state 16

    expression          go to state 104
    binary_operation    go to state 20
    grouped_expression  go to state 21
    function_call       go to state 22
    if_expression       go to state 23
    block_expression    go to state 24
    value               go to state 25


State 71

   57 conditional: expression LE . expression

    IDENTIFIER   shift, and go to state 28
    DEC_LITERAL  shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    LPAREN       shift, and go to state 13
    LBRACE       shift, and go to state 14
    STAR         shift, and go to state 15
    IF           shift, and go to state 16

    expression          go to state 105
    binary_operation    go to state 20
    grouped_expression  go to state 21
    function_call       go to state 22
    if_expression       go to state 23
    block_expression    go to state 24
    value               go to state 25


State 72

   61 conditional: expression EQEQ . expression

    IDENTIFIER   shift, and go to state 28
    DEC_LITERAL  shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    LPAREN       shift, and go to state 13
    LBRACE       shift, and go to state 14
    STAR         shift, and go to state 15
    IF           shift, and go to state 16

    expression          go to state 106
    binary_operation    go to state 20
    grouped_expression  go to state 21
    function_call       go to state 22
    if_expression       go to state 23
    block_expression    go to state 24
    value               go to state 25


State 73

   60 conditional: expression NE . expression

    IDENTIFIER   shift, and go to state 28
    DEC_LITERAL  shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    LPAREN       shift, and go to state 13
    LBRACE       shift, and go to state 14
    STAR         shift, and go to state 15
    IF           shift, and go to state 16

    expression          go to state 107
    binary_operation    go to state 20
    grouped_expression  go to state 21
    function_call       go to state 22
    if_expression       go to state 23
    block_expression    go to state 24
    value               go to state 25


State 74

   54 if_expression: IF conditional block_expression .
   55              | IF conditional block_expression . ELSE block_expression

    ELSE  shift, and go to state 108

    $default  reduce using rule 54 (if_expression)


State 75

    8 return_type: ARROW . type

    INT   shift, and go to state 84
    BOOL  shift, and go to state 85

    type  go to state 109


State 76

    5 function: FN IDENTIFIER LPAREN parameter_list RPAREN return_type . block_statement
    6         | FN IDENTIFIER LPAREN parameter_list RPAREN return_type . block_expression

    LBRACE  shift, and go to state 52

    block_statement   go to state 110
    block_expression  go to state 111


State 77

   10 parameter_list: parameter_list COMMA parameter .

    $default  reduce using rule 10 (parameter_list)


State 78

   46 binary_operation: expression . PLUS expression
   46                 | expression PLUS expression .
   47                 | expression . MINUS expression
   48                 | expression . STAR expression
   49                 | expression . SLASH expression

    STAR   shift, and go to state 42
    SLASH  shift, and go to state 43

    $default  reduce using rule 46 (binary_operation)


State 79

   46 binary_operation: expression . PLUS expression
   47                 | expression . MINUS expression
   47                 | expression MINUS expression .
   48                 | expression . STAR expression
   49                 | expression . SLASH expression

    STAR   shift, and go to state 42
    SLASH  shift, and go to state 43

    $default  reduce using rule 47 (binary_operation)


State 80

   46 binary_operation: expression . PLUS expression
   47                 | expression . MINUS expression
   48                 | expression . STAR expression
   48                 | expression STAR expression .
   49                 | expression . SLASH expression

    $default  reduce using rule 48 (binary_operation)


State 81

   46 binary_operation: expression . PLUS expression
   47                 | expression . MINUS expression
   48                 | expression . STAR expression
   49                 | expression . SLASH expression
   49                 | expression SLASH expression .

    $default  reduce using rule 49 (binary_operation)


State 82

   51 function_call: IDENTIFIER LPAREN parameter_list RPAREN .

    $default  reduce using rule 51 (function_call)


State 83

   72 mutability: AMPERSAND MUT .

    $default  reduce using rule 72 (mutability)


State 84

   14 type: INT .

    $default  reduce using rule 14 (type)


State 85

   15 type: BOOL .

    $default  reduce using rule 15 (type)


State 86

   12 parameter: IDENTIFIER COLON mutability type .

    $default  reduce using rule 12 (parameter)


State 87

   34 assignment_operator: EQ .

    $default  reduce using rule 34 (assignment_operator)


State 88

   35 assignment_operator: PLUSEQ .

    $default  reduce using rule 35 (assignment_operator)


State 89

   36 assignment_operator: MINUSEQ .

    $default  reduce using rule 36 (assignment_operator)


State 90

   32 assign_statement: IDENTIFIER assignment_operator . expression_statement

    IDENTIFIER   shift, and go to state 28
    DEC_LITERAL  shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    LPAREN       shift, and go to state 13
    LBRACE       shift, and go to state 14
    STAR         shift, and go to state 15
    IF           shift, and go to state 16

    expression_statement  go to state 112
    expression            go to state 113
    binary_operation      go to state 20
    grouped_expression    go to state 21
    function_call         go to state 22
    if_expression         go to state 23
    block_expression      go to state 24
    value                 go to state 25


State 91

   17 statement_list: statement_list . statement
   65 block_statement: LBRACE statement_list . RBRACE
   66 block_expression: LBRACE statement_list . expression RBRACE

    IDENTIFIER   shift, and go to state 49
    PRINTVAR     shift, and go to state 50
    PRINTSTRING  shift, and go to state 51
    DEC_LITERAL  shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    LPAREN       shift, and go to state 13
    LBRACE       shift, and go to state 52
    RBRACE       shift, and go to state 114
    LET          shift, and go to state 53
    STAR         shift, and go to state 54
    IF           shift, and go to state 55
    WHILE        shift, and go to state 56

    statement              go to state 57
    while_statement        go to state 58
    declaration_statement  go to state 59
    print_statement        go to state 60
    let_statement          go to state 61
    assign_statement       go to state 62
    expression_statement   go to state 63
    expression             go to state 64
    binary_operation       go to state 20
    grouped_expression     go to state 21
    function_call          go to state 22
    if_statement           go to state 65
    if_expression          go to state 23
    block_statement        go to state 66
    block_expression       go to state 24
    value                  go to state 25


State 92

   27 declaration_statement: LET mutability . IDENTIFIER COLON type
   30 let_statement: LET mutability . IDENTIFIER COLON type EQ expression
   31              | LET mutability . IDENTIFIER EQ mutability expression

    IDENTIFIER  shift, and go to state 115


State 93

   33 assign_statement: STAR IDENTIFIER . assignment_operator expression_statement
   40 expression: IDENTIFIER .
   51 function_call: IDENTIFIER . LPAREN parameter_list RPAREN

    LPAREN   shift, and go to state 26
    EQ       shift, and go to state 87
    PLUSEQ   shift, and go to state 88
    MINUSEQ  shift, and go to state 89

    $default  reduce using rule 40 (expression)

    assignment_operator  go to state 116


State 94

   52 if_statement: IF conditional . block_statement
   53             | IF conditional . block_statement ELSE block_statement
   54 if_expression: IF conditional . block_expression
   55              | IF conditional . block_expression ELSE block_expression

    LBRACE  shift, and go to state 52

    block_statement   go to state 117
    block_expression  go to state 74


State 95

   26 while_statement: WHILE conditional . block_statement

    LBRACE  shift, and go to state 118

    block_statement  go to state 119


State 96

   23 statement: declaration_statement SEMICOLON .

    $default  reduce using rule 23 (statement)


State 97

   22 statement: print_statement SEMICOLON .

    $default  reduce using rule 22 (statement)


State 98

   18 statement: let_statement SEMICOLON .

    $default  reduce using rule 18 (statement)


State 99

   19 statement: assign_statement SEMICOLON .

    $default  reduce using rule 19 (statement)


State 100

   20 statement: expression_statement SEMICOLON .

    $default  reduce using rule 20 (statement)


State 101

   66 block_expression: LBRACE statement_list expression RBRACE .

    $default  reduce using rule 66 (block_expression)


State 102

   46 binary_operation: expression . PLUS expression
   47                 | expression . MINUS expression
   48                 | expression . STAR expression
   49                 | expression . SLASH expression
   58 conditional: expression GT expression .

    PLUS   shift, and go to state 40
    MINUS  shift, and go to state 41
    STAR   shift, and go to state 42
    SLASH  shift, and go to state 43

    $default  reduce using rule 58 (conditional)


State 103

   46 binary_operation: expression . PLUS expression
   47                 | expression . MINUS expression
   48                 | expression . STAR expression
   49                 | expression . SLASH expression
   59 conditional: expression GE expression .

    PLUS   shift, and go to state 40
    MINUS  shift, and go to state 41
    STAR   shift, and go to state 42
    SLASH  shift, and go to state 43

    $default  reduce using rule 59 (conditional)


State 104

   46 binary_operation: expression . PLUS expression
   47                 | expression . MINUS expression
   48                 | expression . STAR expression
   49                 | expression . SLASH expression
   56 conditional: expression LT expression .

    PLUS   shift, and go to state 40
    MINUS  shift, and go to state 41
    STAR   shift, and go to state 42
    SLASH  shift, and go to state 43

    $default  reduce using rule 56 (conditional)


State 105

   46 binary_operation: expression . PLUS expression
   47                 | expression . MINUS expression
   48                 | expression . STAR expression
   49                 | expression . SLASH expression
   57 conditional: expression LE expression .

    PLUS   shift, and go to state 40
    MINUS  shift, and go to state 41
    STAR   shift, and go to state 42
    SLASH  shift, and go to state 43

    $default  reduce using rule 57 (conditional)


State 106

   46 binary_operation: expression . PLUS expression
   47                 | expression . MINUS expression
   48                 | expression . STAR expression
   49                 | expression . SLASH expression
   61 conditional: expression EQEQ expression .

    PLUS   shift, and go to state 40
    MINUS  shift, and go to state 41
    STAR   shift, and go to state 42
    SLASH  shift, and go to state 43

    $default  reduce using rule 61 (conditional)


State 107

   46 binary_operation: expression . PLUS expression
   47                 | expression . MINUS expression
   48                 | expression . STAR expression
   49                 | expression . SLASH expression
   60 conditional: expression NE expression .

    PLUS   shift, and go to state 40
    MINUS  shift, and go to state 41
    STAR   shift, and go to state 42
    SLASH  shift, and go to state 43

    $default  reduce using rule 60 (conditional)


State 108

   55 if_expression: IF conditional block_expression ELSE . block_expression

    LBRACE  shift, and go to state 14

    block_expression  go to state 120


State 109

    8 return_type: ARROW type .

    $default  reduce using rule 8 (return_type)


State 110

    5 function: FN IDENTIFIER LPAREN parameter_list RPAREN return_type block_statement .

    $default  reduce using rule 5 (function)


State 111

    6 function: FN IDENTIFIER LPAREN parameter_list RPAREN return_type block_expression .

    $default  reduce using rule 6 (function)


State 112

   32 assign_statement: IDENTIFIER assignment_operator expression_statement .

    $default  reduce using rule 32 (assign_statement)


State 113

   37 expression_statement: expression .
   46 binary_operation: expression . PLUS expression
   47                 | expression . MINUS expression
   48                 | expression . STAR expression
   49                 | expression . SLASH expression

    PLUS   shift, and go to state 40
    MINUS  shift, and go to state 41
    STAR   shift, and go to state 42
    SLASH  shift, and go to state 43

    $default  reduce using rule 37 (expression_statement)


State 114

   65 block_statement: LBRACE statement_list RBRACE .

    $default  reduce using rule 65 (block_statement)


State 115

   27 declaration_statement: LET mutability IDENTIFIER . COLON type
   30 let_statement: LET mutability IDENTIFIER . COLON type EQ expression
   31              | LET mutability IDENTIFIER . EQ mutability expression

    COLON  shift, and go to state 121
    EQ     shift, and go to state 122


State 116

   33 assign_statement: STAR IDENTIFIER assignment_operator . expression_statement

    IDENTIFIER   shift, and go to state 28
    DEC_LITERAL  shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    LPAREN       shift, and go to state 13
    LBRACE       shift, and go to state 14
    STAR         shift, and go to state 15
    IF           shift, and go to state 16

    expression_statement  go to state 123
    expression            go to state 113
    binary_operation      go to state 20
    grouped_expression    go to state 21
    function_call         go to state 22
    if_expression         go to state 23
    block_expression      go to state 24
    value                 go to state 25


State 117

   52 if_statement: IF conditional block_statement .
   53             | IF conditional block_statement . ELSE block_statement

    ELSE  shift, and go to state 124

    $default  reduce using rule 52 (if_statement)


State 118

   65 block_statement: LBRACE . statement_list RBRACE

    $default  reduce using rule 16 (statement_list)

    statement_list  go to state 125


State 119

   26 while_statement: WHILE conditional block_statement .

    $default  reduce using rule 26 (while_statement)


State 120

   55 if_expression: IF conditional block_expression ELSE block_expression .

    $default  reduce using rule 55 (if_expression)


State 121

   27 declaration_statement: LET mutability IDENTIFIER COLON . type
   30 let_statement: LET mutability IDENTIFIER COLON . type EQ expression

    INT   shift, and go to state 84
    BOOL  shift, and go to state 85

    type  go to state 126


State 122

   31 let_statement: LET mutability IDENTIFIER EQ . mutability expression

    AMPERSAND  shift, and go to state 45
    MUT        shift, and go to state 46

    $default  reduce using rule 70 (mutability)

    mutability  go to state 127


State 123

   33 assign_statement: STAR IDENTIFIER assignment_operator expression_statement .

    $default  reduce using rule 33 (assign_statement)


State 124

   53 if_statement: IF conditional block_statement ELSE . block_statement

    LBRACE  shift, and go to state 118

    block_statement  go to state 128


State 125

   17 statement_list: statement_list . statement
   65 block_statement: LBRACE statement_list . RBRACE

    IDENTIFIER   shift, and go to state 49
    PRINTVAR     shift, and go to state 50
    PRINTSTRING  shift, and go to state 51
    DEC_LITERAL  shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    LPAREN       shift, and go to state 13
    LBRACE       shift, and go to state 52
    RBRACE       shift, and go to state 114
    LET          shift, and go to state 53
    STAR         shift, and go to state 54
    IF           shift, and go to state 55
    WHILE        shift, and go to state 56

    statement              go to state 57
    while_statement        go to state 58
    declaration_statement  go to state 59
    print_statement        go to state 60
    let_statement          go to state 61
    assign_statement       go to state 62
    expression_statement   go to state 63
    expression             go to state 113
    binary_operation       go to state 20
    grouped_expression     go to state 21
    function_call          go to state 22
    if_statement           go to state 65
    if_expression          go to state 23
    block_statement        go to state 66
    block_expression       go to state 24
    value                  go to state 25


State 126

   27 declaration_statement: LET mutability IDENTIFIER COLON type .
   30 let_statement: LET mutability IDENTIFIER COLON type . EQ expression

    EQ  shift, and go to state 129

    $default  reduce using rule 27 (declaration_statement)


State 127

   31 let_statement: LET mutability IDENTIFIER EQ mutability . expression

    IDENTIFIER   shift, and go to state 28
    DEC_LITERAL  shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    LPAREN       shift, and go to state 13
    LBRACE       shift, and go to state 14
    STAR         shift, and go to state 15
    IF           shift, and go to state 16

    expression          go to state 130
    binary_operation    go to state 20
    grouped_expression  go to state 21
    function_call       go to state 22
    if_expression       go to state 23
    block_expression    go to state 24
    value               go to state 25


State 128

   53 if_statement: IF conditional block_statement ELSE block_statement .

    $default  reduce using rule 53 (if_statement)


State 129

   30 let_statement: LET mutability IDENTIFIER COLON type EQ . expression

    IDENTIFIER   shift, and go to state 28
    DEC_LITERAL  shift, and go to state 10
    TRUE         shift, and go to state 11
    FALSE        shift, and go to state 12
    LPAREN       shift, and go to state 13
    LBRACE       shift, and go to state 14
    STAR         shift, and go to state 15
    IF           shift, and go to state 16

    expression          go to state 131
    binary_operation    go to state 20
    grouped_expression  go to state 21
    function_call       go to state 22
    if_expression       go to state 23
    block_expression    go to state 24
    value               go to state 25


State 130

   31 let_statement: LET mutability IDENTIFIER EQ mutability expression .
   46 binary_operation: expression . PLUS expression
   47                 | expression . MINUS expression
   48                 | expression . STAR expression
   49                 | expression . SLASH expression

    PLUS   shift, and go to state 40
    MINUS  shift, and go to state 41
    STAR   shift, and go to state 42
    SLASH  shift, and go to state 43

    $default  reduce using rule 31 (let_statement)


State 131

   30 let_statement: LET mutability IDENTIFIER COLON type EQ expression .
   46 binary_operation: expression . PLUS expression
   47                 | expression . MINUS expression
   48                 | expression . STAR expression
   49                 | expression . SLASH expression

    PLUS   shift, and go to state 40
    MINUS  shift, and go to state 41
    STAR   shift, and go to state 42
    SLASH  shift, and go to state 43

    $default  reduce using rule 30 (let_statement)
