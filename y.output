Terminals unused in grammar

   ANDAND
   OROR
   AMPERSAND
   WHILE


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | program function

    3 function: FN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    4         | FN IDENTIFIER LPAREN parameter_list RPAREN ARROW type LBRACE statement_list RBRACE

    5 parameter_list: /* empty */
    6               | parameter_list COMMA parameter
    7               | parameter

    8 parameter: IDENTIFIER COLON type
    9          | expression

   10 type: INT
   11     | BOOL

   12 statement_list: /* empty */
   13               | statement_list statement

   14 statement: let_statement
   15          | assign_statement SEMICOLON
   16          | expression_statement SEMICOLON
   17          | if_statement
   18          | print_statement SEMICOLON
   19          | declaration_statement SEMICOLON

   20 declaration_statement: LET mutability IDENTIFIER COLON type

   21 print_statement: PRINTSTRING
   22                | PRINTVAR

   23 let_statement: LET mutability IDENTIFIER COLON type EQ expression SEMICOLON
   24              | LET mutability IDENTIFIER EQ expression SEMICOLON
   25              | LET mutability IDENTIFIER EQ expression

   26 assign_statement: IDENTIFIER assignment_operator expression
   27                 | IDENTIFIER assignment_operator if_statement

   28 assignment_operator: EQ
   29                    | PLUSEQ
   30                    | MINUSEQ

   31 expression_statement: expression

   32 expression: value
   33           | function_call
   34           | IDENTIFIER
   35           | block_expression
   36           | expression PLUS expression
   37           | expression MINUS expression
   38           | expression STAR expression
   39           | expression SLASH expression

   40 block_expression: LBRACE statement_list expression RBRACE

   41 function_call: IDENTIFIER LPAREN parameter_list RPAREN

   42 if_statement: IF conditional block_statement
   43             | IF conditional block_statement ELSE block_statement

   44 conditional: expression LT expression
   45            | expression LE expression
   46            | expression GT expression
   47            | expression GE expression
   48            | expression NE expression
   49            | expression EQEQ expression
   50            | NOT expression
   51            | TRUE
   52            | FALSE

   53 block_statement: LBRACE statement_list RBRACE

   54 value: DEC_LITERAL
   55      | TRUE
   56      | FALSE

   57 mutability: /* empty */
   58           | MUT


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENTIFIER (258) 3 4 8 20 23 24 25 26 27 34 41
PRINTVAR (259) 22
PRINTSTRING (260) 21
DEC_LITERAL (261) 54
TRUE (262) 51 55
FALSE (263) 52 56
FN (264) 3 4
LPAREN (265) 3 4 41
RPAREN (266) 3 4 41
ARROW (267) 4
LBRACE (268) 3 4 40 53
RBRACE (269) 3 4 40 53
SEMICOLON (270) 15 16 18 19 23 24
COLON (271) 8 20 23
LET (272) 20 23 24 25
EQ (273) 23 24 25 28
PLUS (274) 36
MINUS (275) 37
STAR (276) 38
SLASH (277) 39
PLUSEQ (278) 29
MINUSEQ (279) 30
ANDAND (280)
OROR (281)
NOT (282) 50
GT (283) 46
GE (284) 47
LT (285) 44
LE (286) 45
EQEQ (287) 49
NE (288) 48
AMPERSAND (289)
IF (290) 42 43
ELSE (291) 43
WHILE (292)
MUT (293) 58
COMMA (294) 6
INT (295) 10
BOOL (296) 11


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
program (43)
    on left: 1 2, on right: 0 2
function (44)
    on left: 3 4, on right: 2
parameter_list (45)
    on left: 5 6 7, on right: 3 4 6 41
parameter (46)
    on left: 8 9, on right: 6 7
type (47)
    on left: 10 11, on right: 4 8 20 23
statement_list (48)
    on left: 12 13, on right: 3 4 13 40 53
statement (49)
    on left: 14 15 16 17 18 19, on right: 13
declaration_statement (50)
    on left: 20, on right: 19
print_statement (51)
    on left: 21 22, on right: 18
let_statement (52)
    on left: 23 24 25, on right: 14
assign_statement (53)
    on left: 26 27, on right: 15
assignment_operator (54)
    on left: 28 29 30, on right: 26 27
expression_statement (55)
    on left: 31, on right: 16
expression (56)
    on left: 32 33 34 35 36 37 38 39, on right: 9 23 24 25 26 31 36
    37 38 39 40 44 45 46 47 48 49 50
block_expression (57)
    on left: 40, on right: 35
function_call (58)
    on left: 41, on right: 33
if_statement (59)
    on left: 42 43, on right: 17 27
conditional (60)
    on left: 44 45 46 47 48 49 50 51 52, on right: 42 43
block_statement (61)
    on left: 53, on right: 42 43
value (62)
    on left: 54 55 56, on right: 32
mutability (63)
    on left: 57 58, on right: 20 23 24 25


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . function

    $end  shift, and go to state 2
    FN    shift, and go to state 3

    function  go to state 4


State 2

    0 $accept: program $end .

    $default  accept


State 3

    3 function: FN . IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    4         | FN . IDENTIFIER LPAREN parameter_list RPAREN ARROW type LBRACE statement_list RBRACE

    IDENTIFIER  shift, and go to state 5


State 4

    2 program: program function .

    $default  reduce using rule 2 (program)


State 5

    3 function: FN IDENTIFIER . LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    4         | FN IDENTIFIER . LPAREN parameter_list RPAREN ARROW type LBRACE statement_list RBRACE

    LPAREN  shift, and go to state 6


State 6

    3 function: FN IDENTIFIER LPAREN . parameter_list RPAREN LBRACE statement_list RBRACE
    4         | FN IDENTIFIER LPAREN . parameter_list RPAREN ARROW type LBRACE statement_list RBRACE

    IDENTIFIER   shift, and go to state 7
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11

    $default  reduce using rule 5 (parameter_list)

    parameter_list    go to state 12
    parameter         go to state 13
    expression        go to state 14
    block_expression  go to state 15
    function_call     go to state 16
    value             go to state 17


State 7

    8 parameter: IDENTIFIER . COLON type
   34 expression: IDENTIFIER .
   41 function_call: IDENTIFIER . LPAREN parameter_list RPAREN

    LPAREN  shift, and go to state 18
    COLON   shift, and go to state 19

    $default  reduce using rule 34 (expression)


State 8

   54 value: DEC_LITERAL .

    $default  reduce using rule 54 (value)


State 9

   55 value: TRUE .

    $default  reduce using rule 55 (value)


State 10

   56 value: FALSE .

    $default  reduce using rule 56 (value)


State 11

   40 block_expression: LBRACE . statement_list expression RBRACE

    $default  reduce using rule 12 (statement_list)

    statement_list  go to state 20


State 12

    3 function: FN IDENTIFIER LPAREN parameter_list . RPAREN LBRACE statement_list RBRACE
    4         | FN IDENTIFIER LPAREN parameter_list . RPAREN ARROW type LBRACE statement_list RBRACE
    6 parameter_list: parameter_list . COMMA parameter

    RPAREN  shift, and go to state 21
    COMMA   shift, and go to state 22


State 13

    7 parameter_list: parameter .

    $default  reduce using rule 7 (parameter_list)


State 14

    9 parameter: expression .
   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression

    PLUS   shift, and go to state 23
    MINUS  shift, and go to state 24
    STAR   shift, and go to state 25
    SLASH  shift, and go to state 26

    $default  reduce using rule 9 (parameter)


State 15

   35 expression: block_expression .

    $default  reduce using rule 35 (expression)


State 16

   33 expression: function_call .

    $default  reduce using rule 33 (expression)


State 17

   32 expression: value .

    $default  reduce using rule 32 (expression)


State 18

   41 function_call: IDENTIFIER LPAREN . parameter_list RPAREN

    IDENTIFIER   shift, and go to state 7
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11

    $default  reduce using rule 5 (parameter_list)

    parameter_list    go to state 27
    parameter         go to state 13
    expression        go to state 14
    block_expression  go to state 15
    function_call     go to state 16
    value             go to state 17


State 19

    8 parameter: IDENTIFIER COLON . type

    INT   shift, and go to state 28
    BOOL  shift, and go to state 29

    type  go to state 30


State 20

   13 statement_list: statement_list . statement
   40 block_expression: LBRACE statement_list . expression RBRACE

    IDENTIFIER   shift, and go to state 31
    PRINTVAR     shift, and go to state 32
    PRINTSTRING  shift, and go to state 33
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11
    LET          shift, and go to state 34
    IF           shift, and go to state 35

    statement              go to state 36
    declaration_statement  go to state 37
    print_statement        go to state 38
    let_statement          go to state 39
    assign_statement       go to state 40
    expression_statement   go to state 41
    expression             go to state 42
    block_expression       go to state 15
    function_call          go to state 16
    if_statement           go to state 43
    value                  go to state 17


State 21

    3 function: FN IDENTIFIER LPAREN parameter_list RPAREN . LBRACE statement_list RBRACE
    4         | FN IDENTIFIER LPAREN parameter_list RPAREN . ARROW type LBRACE statement_list RBRACE

    ARROW   shift, and go to state 44
    LBRACE  shift, and go to state 45


State 22

    6 parameter_list: parameter_list COMMA . parameter

    IDENTIFIER   shift, and go to state 7
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11

    parameter         go to state 46
    expression        go to state 14
    block_expression  go to state 15
    function_call     go to state 16
    value             go to state 17


State 23

   36 expression: expression PLUS . expression

    IDENTIFIER   shift, and go to state 47
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11

    expression        go to state 48
    block_expression  go to state 15
    function_call     go to state 16
    value             go to state 17


State 24

   37 expression: expression MINUS . expression

    IDENTIFIER   shift, and go to state 47
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11

    expression        go to state 49
    block_expression  go to state 15
    function_call     go to state 16
    value             go to state 17


State 25

   38 expression: expression STAR . expression

    IDENTIFIER   shift, and go to state 47
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11

    expression        go to state 50
    block_expression  go to state 15
    function_call     go to state 16
    value             go to state 17


State 26

   39 expression: expression SLASH . expression

    IDENTIFIER   shift, and go to state 47
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11

    expression        go to state 51
    block_expression  go to state 15
    function_call     go to state 16
    value             go to state 17


State 27

    6 parameter_list: parameter_list . COMMA parameter
   41 function_call: IDENTIFIER LPAREN parameter_list . RPAREN

    RPAREN  shift, and go to state 52
    COMMA   shift, and go to state 22


State 28

   10 type: INT .

    $default  reduce using rule 10 (type)


State 29

   11 type: BOOL .

    $default  reduce using rule 11 (type)


State 30

    8 parameter: IDENTIFIER COLON type .

    $default  reduce using rule 8 (parameter)


State 31

   26 assign_statement: IDENTIFIER . assignment_operator expression
   27                 | IDENTIFIER . assignment_operator if_statement
   34 expression: IDENTIFIER .
   41 function_call: IDENTIFIER . LPAREN parameter_list RPAREN

    LPAREN   shift, and go to state 18
    EQ       shift, and go to state 53
    PLUSEQ   shift, and go to state 54
    MINUSEQ  shift, and go to state 55

    $default  reduce using rule 34 (expression)

    assignment_operator  go to state 56


State 32

   22 print_statement: PRINTVAR .

    $default  reduce using rule 22 (print_statement)


State 33

   21 print_statement: PRINTSTRING .

    $default  reduce using rule 21 (print_statement)


State 34

   20 declaration_statement: LET . mutability IDENTIFIER COLON type
   23 let_statement: LET . mutability IDENTIFIER COLON type EQ expression SEMICOLON
   24              | LET . mutability IDENTIFIER EQ expression SEMICOLON
   25              | LET . mutability IDENTIFIER EQ expression

    MUT  shift, and go to state 57

    $default  reduce using rule 57 (mutability)

    mutability  go to state 58


State 35

   42 if_statement: IF . conditional block_statement
   43             | IF . conditional block_statement ELSE block_statement

    IDENTIFIER   shift, and go to state 47
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 59
    FALSE        shift, and go to state 60
    LBRACE       shift, and go to state 11
    NOT          shift, and go to state 61

    expression        go to state 62
    block_expression  go to state 15
    function_call     go to state 16
    conditional       go to state 63
    value             go to state 17


State 36

   13 statement_list: statement_list statement .

    $default  reduce using rule 13 (statement_list)


State 37

   19 statement: declaration_statement . SEMICOLON

    SEMICOLON  shift, and go to state 64


State 38

   18 statement: print_statement . SEMICOLON

    SEMICOLON  shift, and go to state 65


State 39

   14 statement: let_statement .

    $default  reduce using rule 14 (statement)


State 40

   15 statement: assign_statement . SEMICOLON

    SEMICOLON  shift, and go to state 66


State 41

   16 statement: expression_statement . SEMICOLON

    SEMICOLON  shift, and go to state 67


State 42

   31 expression_statement: expression .
   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   40 block_expression: LBRACE statement_list expression . RBRACE

    RBRACE  shift, and go to state 68
    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24
    STAR    shift, and go to state 25
    SLASH   shift, and go to state 26

    $default  reduce using rule 31 (expression_statement)


State 43

   17 statement: if_statement .

    $default  reduce using rule 17 (statement)


State 44

    4 function: FN IDENTIFIER LPAREN parameter_list RPAREN ARROW . type LBRACE statement_list RBRACE

    INT   shift, and go to state 28
    BOOL  shift, and go to state 29

    type  go to state 69


State 45

    3 function: FN IDENTIFIER LPAREN parameter_list RPAREN LBRACE . statement_list RBRACE

    $default  reduce using rule 12 (statement_list)

    statement_list  go to state 70


State 46

    6 parameter_list: parameter_list COMMA parameter .

    $default  reduce using rule 6 (parameter_list)


State 47

   34 expression: IDENTIFIER .
   41 function_call: IDENTIFIER . LPAREN parameter_list RPAREN

    LPAREN  shift, and go to state 18

    $default  reduce using rule 34 (expression)


State 48

   36 expression: expression . PLUS expression
   36           | expression PLUS expression .
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression

    STAR   shift, and go to state 25
    SLASH  shift, and go to state 26

    $default  reduce using rule 36 (expression)


State 49

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   37           | expression MINUS expression .
   38           | expression . STAR expression
   39           | expression . SLASH expression

    STAR   shift, and go to state 25
    SLASH  shift, and go to state 26

    $default  reduce using rule 37 (expression)


State 50

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   38           | expression STAR expression .
   39           | expression . SLASH expression

    $default  reduce using rule 38 (expression)


State 51

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   39           | expression SLASH expression .

    $default  reduce using rule 39 (expression)


State 52

   41 function_call: IDENTIFIER LPAREN parameter_list RPAREN .

    $default  reduce using rule 41 (function_call)


State 53

   28 assignment_operator: EQ .

    $default  reduce using rule 28 (assignment_operator)


State 54

   29 assignment_operator: PLUSEQ .

    $default  reduce using rule 29 (assignment_operator)


State 55

   30 assignment_operator: MINUSEQ .

    $default  reduce using rule 30 (assignment_operator)


State 56

   26 assign_statement: IDENTIFIER assignment_operator . expression
   27                 | IDENTIFIER assignment_operator . if_statement

    IDENTIFIER   shift, and go to state 47
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11
    IF           shift, and go to state 35

    expression        go to state 71
    block_expression  go to state 15
    function_call     go to state 16
    if_statement      go to state 72
    value             go to state 17


State 57

   58 mutability: MUT .

    $default  reduce using rule 58 (mutability)


State 58

   20 declaration_statement: LET mutability . IDENTIFIER COLON type
   23 let_statement: LET mutability . IDENTIFIER COLON type EQ expression SEMICOLON
   24              | LET mutability . IDENTIFIER EQ expression SEMICOLON
   25              | LET mutability . IDENTIFIER EQ expression

    IDENTIFIER  shift, and go to state 73


State 59

   51 conditional: TRUE .
   55 value: TRUE .

    LBRACE    reduce using rule 51 (conditional)
    $default  reduce using rule 55 (value)


State 60

   52 conditional: FALSE .
   56 value: FALSE .

    LBRACE    reduce using rule 52 (conditional)
    $default  reduce using rule 56 (value)


State 61

   50 conditional: NOT . expression

    IDENTIFIER   shift, and go to state 47
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11

    expression        go to state 74
    block_expression  go to state 15
    function_call     go to state 16
    value             go to state 17


State 62

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   44 conditional: expression . LT expression
   45            | expression . LE expression
   46            | expression . GT expression
   47            | expression . GE expression
   48            | expression . NE expression
   49            | expression . EQEQ expression

    PLUS   shift, and go to state 23
    MINUS  shift, and go to state 24
    STAR   shift, and go to state 25
    SLASH  shift, and go to state 26
    GT     shift, and go to state 75
    GE     shift, and go to state 76
    LT     shift, and go to state 77
    LE     shift, and go to state 78
    EQEQ   shift, and go to state 79
    NE     shift, and go to state 80


State 63

   42 if_statement: IF conditional . block_statement
   43             | IF conditional . block_statement ELSE block_statement

    LBRACE  shift, and go to state 81

    block_statement  go to state 82


State 64

   19 statement: declaration_statement SEMICOLON .

    $default  reduce using rule 19 (statement)


State 65

   18 statement: print_statement SEMICOLON .

    $default  reduce using rule 18 (statement)


State 66

   15 statement: assign_statement SEMICOLON .

    $default  reduce using rule 15 (statement)


State 67

   16 statement: expression_statement SEMICOLON .

    $default  reduce using rule 16 (statement)


State 68

   40 block_expression: LBRACE statement_list expression RBRACE .

    $default  reduce using rule 40 (block_expression)


State 69

    4 function: FN IDENTIFIER LPAREN parameter_list RPAREN ARROW type . LBRACE statement_list RBRACE

    LBRACE  shift, and go to state 83


State 70

    3 function: FN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list . RBRACE
   13 statement_list: statement_list . statement

    IDENTIFIER   shift, and go to state 31
    PRINTVAR     shift, and go to state 32
    PRINTSTRING  shift, and go to state 33
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11
    RBRACE       shift, and go to state 84
    LET          shift, and go to state 34
    IF           shift, and go to state 35

    statement              go to state 36
    declaration_statement  go to state 37
    print_statement        go to state 38
    let_statement          go to state 39
    assign_statement       go to state 40
    expression_statement   go to state 41
    expression             go to state 85
    block_expression       go to state 15
    function_call          go to state 16
    if_statement           go to state 43
    value                  go to state 17


State 71

   26 assign_statement: IDENTIFIER assignment_operator expression .
   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression

    PLUS   shift, and go to state 23
    MINUS  shift, and go to state 24
    STAR   shift, and go to state 25
    SLASH  shift, and go to state 26

    $default  reduce using rule 26 (assign_statement)


State 72

   27 assign_statement: IDENTIFIER assignment_operator if_statement .

    $default  reduce using rule 27 (assign_statement)


State 73

   20 declaration_statement: LET mutability IDENTIFIER . COLON type
   23 let_statement: LET mutability IDENTIFIER . COLON type EQ expression SEMICOLON
   24              | LET mutability IDENTIFIER . EQ expression SEMICOLON
   25              | LET mutability IDENTIFIER . EQ expression

    COLON  shift, and go to state 86
    EQ     shift, and go to state 87


State 74

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   50 conditional: NOT expression .

    PLUS   shift, and go to state 23
    MINUS  shift, and go to state 24
    STAR   shift, and go to state 25
    SLASH  shift, and go to state 26

    $default  reduce using rule 50 (conditional)


State 75

   46 conditional: expression GT . expression

    IDENTIFIER   shift, and go to state 47
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11

    expression        go to state 88
    block_expression  go to state 15
    function_call     go to state 16
    value             go to state 17


State 76

   47 conditional: expression GE . expression

    IDENTIFIER   shift, and go to state 47
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11

    expression        go to state 89
    block_expression  go to state 15
    function_call     go to state 16
    value             go to state 17


State 77

   44 conditional: expression LT . expression

    IDENTIFIER   shift, and go to state 47
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11

    expression        go to state 90
    block_expression  go to state 15
    function_call     go to state 16
    value             go to state 17


State 78

   45 conditional: expression LE . expression

    IDENTIFIER   shift, and go to state 47
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11

    expression        go to state 91
    block_expression  go to state 15
    function_call     go to state 16
    value             go to state 17


State 79

   49 conditional: expression EQEQ . expression

    IDENTIFIER   shift, and go to state 47
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11

    expression        go to state 92
    block_expression  go to state 15
    function_call     go to state 16
    value             go to state 17


State 80

   48 conditional: expression NE . expression

    IDENTIFIER   shift, and go to state 47
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11

    expression        go to state 93
    block_expression  go to state 15
    function_call     go to state 16
    value             go to state 17


State 81

   53 block_statement: LBRACE . statement_list RBRACE

    $default  reduce using rule 12 (statement_list)

    statement_list  go to state 94


State 82

   42 if_statement: IF conditional block_statement .
   43             | IF conditional block_statement . ELSE block_statement

    ELSE  shift, and go to state 95

    $default  reduce using rule 42 (if_statement)


State 83

    4 function: FN IDENTIFIER LPAREN parameter_list RPAREN ARROW type LBRACE . statement_list RBRACE

    $default  reduce using rule 12 (statement_list)

    statement_list  go to state 96


State 84

    3 function: FN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .

    $default  reduce using rule 3 (function)


State 85

   31 expression_statement: expression .
   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression

    PLUS   shift, and go to state 23
    MINUS  shift, and go to state 24
    STAR   shift, and go to state 25
    SLASH  shift, and go to state 26

    $default  reduce using rule 31 (expression_statement)


State 86

   20 declaration_statement: LET mutability IDENTIFIER COLON . type
   23 let_statement: LET mutability IDENTIFIER COLON . type EQ expression SEMICOLON

    INT   shift, and go to state 28
    BOOL  shift, and go to state 29

    type  go to state 97


State 87

   24 let_statement: LET mutability IDENTIFIER EQ . expression SEMICOLON
   25              | LET mutability IDENTIFIER EQ . expression

    IDENTIFIER   shift, and go to state 47
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11

    expression        go to state 98
    block_expression  go to state 15
    function_call     go to state 16
    value             go to state 17


State 88

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   46 conditional: expression GT expression .

    PLUS   shift, and go to state 23
    MINUS  shift, and go to state 24
    STAR   shift, and go to state 25
    SLASH  shift, and go to state 26

    $default  reduce using rule 46 (conditional)


State 89

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   47 conditional: expression GE expression .

    PLUS   shift, and go to state 23
    MINUS  shift, and go to state 24
    STAR   shift, and go to state 25
    SLASH  shift, and go to state 26

    $default  reduce using rule 47 (conditional)


State 90

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   44 conditional: expression LT expression .

    PLUS   shift, and go to state 23
    MINUS  shift, and go to state 24
    STAR   shift, and go to state 25
    SLASH  shift, and go to state 26

    $default  reduce using rule 44 (conditional)


State 91

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   45 conditional: expression LE expression .

    PLUS   shift, and go to state 23
    MINUS  shift, and go to state 24
    STAR   shift, and go to state 25
    SLASH  shift, and go to state 26

    $default  reduce using rule 45 (conditional)


State 92

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   49 conditional: expression EQEQ expression .

    PLUS   shift, and go to state 23
    MINUS  shift, and go to state 24
    STAR   shift, and go to state 25
    SLASH  shift, and go to state 26

    $default  reduce using rule 49 (conditional)


State 93

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   48 conditional: expression NE expression .

    PLUS   shift, and go to state 23
    MINUS  shift, and go to state 24
    STAR   shift, and go to state 25
    SLASH  shift, and go to state 26

    $default  reduce using rule 48 (conditional)


State 94

   13 statement_list: statement_list . statement
   53 block_statement: LBRACE statement_list . RBRACE

    IDENTIFIER   shift, and go to state 31
    PRINTVAR     shift, and go to state 32
    PRINTSTRING  shift, and go to state 33
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11
    RBRACE       shift, and go to state 99
    LET          shift, and go to state 34
    IF           shift, and go to state 35

    statement              go to state 36
    declaration_statement  go to state 37
    print_statement        go to state 38
    let_statement          go to state 39
    assign_statement       go to state 40
    expression_statement   go to state 41
    expression             go to state 85
    block_expression       go to state 15
    function_call          go to state 16
    if_statement           go to state 43
    value                  go to state 17


State 95

   43 if_statement: IF conditional block_statement ELSE . block_statement

    LBRACE  shift, and go to state 81

    block_statement  go to state 100


State 96

    4 function: FN IDENTIFIER LPAREN parameter_list RPAREN ARROW type LBRACE statement_list . RBRACE
   13 statement_list: statement_list . statement

    IDENTIFIER   shift, and go to state 31
    PRINTVAR     shift, and go to state 32
    PRINTSTRING  shift, and go to state 33
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11
    RBRACE       shift, and go to state 101
    LET          shift, and go to state 34
    IF           shift, and go to state 35

    statement              go to state 36
    declaration_statement  go to state 37
    print_statement        go to state 38
    let_statement          go to state 39
    assign_statement       go to state 40
    expression_statement   go to state 41
    expression             go to state 85
    block_expression       go to state 15
    function_call          go to state 16
    if_statement           go to state 43
    value                  go to state 17


State 97

   20 declaration_statement: LET mutability IDENTIFIER COLON type .
   23 let_statement: LET mutability IDENTIFIER COLON type . EQ expression SEMICOLON

    EQ  shift, and go to state 102

    $default  reduce using rule 20 (declaration_statement)


State 98

   24 let_statement: LET mutability IDENTIFIER EQ expression . SEMICOLON
   25              | LET mutability IDENTIFIER EQ expression .
   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression

    SEMICOLON  shift, and go to state 103
    PLUS       shift, and go to state 23
    MINUS      shift, and go to state 24
    STAR       shift, and go to state 25
    SLASH      shift, and go to state 26

    $default  reduce using rule 25 (let_statement)


State 99

   53 block_statement: LBRACE statement_list RBRACE .

    $default  reduce using rule 53 (block_statement)


State 100

   43 if_statement: IF conditional block_statement ELSE block_statement .

    $default  reduce using rule 43 (if_statement)


State 101

    4 function: FN IDENTIFIER LPAREN parameter_list RPAREN ARROW type LBRACE statement_list RBRACE .

    $default  reduce using rule 4 (function)


State 102

   23 let_statement: LET mutability IDENTIFIER COLON type EQ . expression SEMICOLON

    IDENTIFIER   shift, and go to state 47
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LBRACE       shift, and go to state 11

    expression        go to state 104
    block_expression  go to state 15
    function_call     go to state 16
    value             go to state 17


State 103

   24 let_statement: LET mutability IDENTIFIER EQ expression SEMICOLON .

    $default  reduce using rule 24 (let_statement)


State 104

   23 let_statement: LET mutability IDENTIFIER COLON type EQ expression . SEMICOLON
   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression

    SEMICOLON  shift, and go to state 105
    PLUS       shift, and go to state 23
    MINUS      shift, and go to state 24
    STAR       shift, and go to state 25
    SLASH      shift, and go to state 26


State 105

   23 let_statement: LET mutability IDENTIFIER COLON type EQ expression SEMICOLON .

    $default  reduce using rule 23 (let_statement)
