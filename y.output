Terminals unused in grammar

   PRINTVAR
   PRINTSTRING
   TRUE
   FALSE
   FN
   LPAREN
   RPAREN
   ARROW
   LBRACE
   RBRACE
   SEMICOLON
   COLON
   PLUS
   MINUS
   STAR
   SLASH
   PLUSEQ
   MINUSEQ
   ANDAND
   OROR
   NOT
   GT
   GE
   LT
   LE
   EQEQ
   NE
   AMPERSAND
   IF
   ELSE
   WHILE
   COMMA
   INT
   BOOL


Grammar

    0 $accept: let_statement $end

    1 let_statement: LET IDENTIFIER EQ DEC_LITERAL
    2              | LET MUT IDENTIFIER EQ DEC_LITERAL


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENTIFIER (258) 1 2
PRINTVAR (259)
PRINTSTRING (260)
DEC_LITERAL (261) 1 2
TRUE (262)
FALSE (263)
FN (264)
LPAREN (265)
RPAREN (266)
ARROW (267)
LBRACE (268)
RBRACE (269)
SEMICOLON (270)
COLON (271)
LET (272) 1 2
EQ (273) 1 2
PLUS (274)
MINUS (275)
STAR (276)
SLASH (277)
PLUSEQ (278)
MINUSEQ (279)
ANDAND (280)
OROR (281)
NOT (282)
GT (283)
GE (284)
LT (285)
LE (286)
EQEQ (287)
NE (288)
AMPERSAND (289)
IF (290)
ELSE (291)
WHILE (292)
MUT (293) 2
COMMA (294)
INT (295)
BOOL (296)


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
let_statement (43)
    on left: 1 2, on right: 0


State 0

    0 $accept: . let_statement $end

    LET  shift, and go to state 1

    let_statement  go to state 2


State 1

    1 let_statement: LET . IDENTIFIER EQ DEC_LITERAL
    2              | LET . MUT IDENTIFIER EQ DEC_LITERAL

    IDENTIFIER  shift, and go to state 3
    MUT         shift, and go to state 4


State 2

    0 $accept: let_statement . $end

    $end  shift, and go to state 5


State 3

    1 let_statement: LET IDENTIFIER . EQ DEC_LITERAL

    EQ  shift, and go to state 6


State 4

    2 let_statement: LET MUT . IDENTIFIER EQ DEC_LITERAL

    IDENTIFIER  shift, and go to state 7


State 5

    0 $accept: let_statement $end .

    $default  accept


State 6

    1 let_statement: LET IDENTIFIER EQ . DEC_LITERAL

    DEC_LITERAL  shift, and go to state 8


State 7

    2 let_statement: LET MUT IDENTIFIER . EQ DEC_LITERAL

    EQ  shift, and go to state 9


State 8

    1 let_statement: LET IDENTIFIER EQ DEC_LITERAL .

    $default  reduce using rule 1 (let_statement)


State 9

    2 let_statement: LET MUT IDENTIFIER EQ . DEC_LITERAL

    DEC_LITERAL  shift, and go to state 10


State 10

    2 let_statement: LET MUT IDENTIFIER EQ DEC_LITERAL .

    $default  reduce using rule 2 (let_statement)
