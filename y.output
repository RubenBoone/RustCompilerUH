Terminals unused in grammar

   MINUSEQ
   ANDAND
   OROR
   NOT
   EQEQ
   NE
   WHILE


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | function
    3        | functions function

    4 functions: function function

    5 function: FN IDENTIFIER LPAREN params RPAREN blockStatement
    6         | FN IDENTIFIER LPAREN params RPAREN ARROW type blockStatement

    7 functionCall: IDENTIFIER LPAREN params RPAREN

    8 blockStatement: LBRACE statements RBRACE

    9 statements: /* empty */
   10           | statements statement SEMICOLON
   11           | statements declaration SEMICOLON
   12           | statements assignment SEMICOLON
   13           | statements functionCall SEMICOLON
   14           | statements expression
   15           | statements declaration
   16           | IF conditional blockStatement
   17           | IF conditional blockStatement ELSE blockStatement

   18 statement: LET IDENTIFIER EQ expression
   19          | IDENTIFIER PLUSEQ expression
   20          | PRINTSTRING
   21          | PRINTVAR
   22          | IDENTIFIER LBRACE params RBRACE

   23 expression: DEC_LITERAL
   24           | IDENTIFIER
   25           | functionCall
   26           | expression PLUS expression
   27           | expression MINUS expression
   28           | expression STAR expression
   29           | expression SLASH expression
   30           | TRUE
   31           | FALSE
   32           | AMPERSAND MUT IDENTIFIER

   33 conditional: expression LT expression
   34            | expression LE expression
   35            | expression GT expression
   36            | expression GE expression
   37            | expression

   38 declaration: LET IDENTIFIER COLON type
   39            | LET IDENTIFIER EQ blockStatement
   40            | LET MUT IDENTIFIER EQ expression

   41 assignment: IDENTIFIER EQ expression
   42           | IDENTIFIER EQ IF conditional blockStatement
   43           | IDENTIFIER EQ IF conditional blockStatement ELSE blockStatement

   44 params: /* empty */
   45       | IDENTIFIER COLON type
   46       | IDENTIFIER COLON AMPERSAND MUT type
   47       | expression
   48       | expression COMMA params

   49 type: INT
   50     | BOOL


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENTIFIER (258) 5 6 7 18 19 22 24 32 38 39 40 41 42 43 45 46
PRINTVAR (259) 21
PRINTSTRING (260) 20
DEC_LITERAL (261) 23
TRUE (262) 30
FALSE (263) 31
FN (264) 5 6
LPAREN (265) 5 6 7
RPAREN (266) 5 6 7
ARROW (267) 6
LBRACE (268) 8 22
RBRACE (269) 8 22
SEMICOLON (270) 10 11 12 13
COLON (271) 38 45 46
LET (272) 18 38 39 40
EQ (273) 18 39 40 41 42 43
PLUS (274) 26
MINUS (275) 27
STAR (276) 28
SLASH (277) 29
PLUSEQ (278) 19
MINUSEQ (279)
ANDAND (280)
OROR (281)
NOT (282)
GT (283) 35
GE (284) 36
LT (285) 33
LE (286) 34
EQEQ (287)
NE (288)
AMPERSAND (289) 32 46
IF (290) 16 17 42 43
ELSE (291) 17 43
WHILE (292)
MUT (293) 32 40 46
COMMA (294) 48
INT (295) 49
BOOL (296) 50


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
program (43)
    on left: 1 2 3, on right: 0
functions (44)
    on left: 4, on right: 3
function (45)
    on left: 5 6, on right: 2 3 4
functionCall (46)
    on left: 7, on right: 13 25
blockStatement (47)
    on left: 8, on right: 5 6 16 17 39 42 43
statements (48)
    on left: 9 10 11 12 13 14 15 16 17, on right: 8 10 11 12 13 14
    15
statement (49)
    on left: 18 19 20 21 22, on right: 10
expression (50)
    on left: 23 24 25 26 27 28 29 30 31 32, on right: 14 18 19 26 27
    28 29 33 34 35 36 37 40 41 47 48
conditional (51)
    on left: 33 34 35 36 37, on right: 16 17 42 43
declaration (52)
    on left: 38 39 40, on right: 11 15
assignment (53)
    on left: 41 42 43, on right: 12
params (54)
    on left: 44 45 46 47 48, on right: 5 6 7 22 48
type (55)
    on left: 49 50, on right: 6 38 45 46


State 0

    0 $accept: . program $end

    FN  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program    go to state 2
    functions  go to state 3
    function   go to state 4


State 1

    5 function: FN . IDENTIFIER LPAREN params RPAREN blockStatement
    6         | FN . IDENTIFIER LPAREN params RPAREN ARROW type blockStatement

    IDENTIFIER  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    3 program: functions . function

    FN  shift, and go to state 1

    function  go to state 7


State 4

    2 program: function .
    4 functions: function . function

    FN  shift, and go to state 1

    $default  reduce using rule 2 (program)

    function  go to state 8


State 5

    5 function: FN IDENTIFIER . LPAREN params RPAREN blockStatement
    6         | FN IDENTIFIER . LPAREN params RPAREN ARROW type blockStatement

    LPAREN  shift, and go to state 9


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 program: functions function .

    $default  reduce using rule 3 (program)


State 8

    4 functions: function function .

    $default  reduce using rule 4 (functions)


State 9

    5 function: FN IDENTIFIER LPAREN . params RPAREN blockStatement
    6         | FN IDENTIFIER LPAREN . params RPAREN ARROW type blockStatement

    IDENTIFIER   shift, and go to state 10
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    AMPERSAND    shift, and go to state 14

    $default  reduce using rule 44 (params)

    functionCall  go to state 15
    expression    go to state 16
    params        go to state 17


State 10

    7 functionCall: IDENTIFIER . LPAREN params RPAREN
   24 expression: IDENTIFIER .
   45 params: IDENTIFIER . COLON type
   46       | IDENTIFIER . COLON AMPERSAND MUT type

    LPAREN  shift, and go to state 18
    COLON   shift, and go to state 19

    $default  reduce using rule 24 (expression)


State 11

   23 expression: DEC_LITERAL .

    $default  reduce using rule 23 (expression)


State 12

   30 expression: TRUE .

    $default  reduce using rule 30 (expression)


State 13

   31 expression: FALSE .

    $default  reduce using rule 31 (expression)


State 14

   32 expression: AMPERSAND . MUT IDENTIFIER

    MUT  shift, and go to state 20


State 15

   25 expression: functionCall .

    $default  reduce using rule 25 (expression)


State 16

   26 expression: expression . PLUS expression
   27           | expression . MINUS expression
   28           | expression . STAR expression
   29           | expression . SLASH expression
   47 params: expression .
   48       | expression . COMMA params

    PLUS   shift, and go to state 21
    MINUS  shift, and go to state 22
    STAR   shift, and go to state 23
    SLASH  shift, and go to state 24
    COMMA  shift, and go to state 25

    $default  reduce using rule 47 (params)


State 17

    5 function: FN IDENTIFIER LPAREN params . RPAREN blockStatement
    6         | FN IDENTIFIER LPAREN params . RPAREN ARROW type blockStatement

    RPAREN  shift, and go to state 26


State 18

    7 functionCall: IDENTIFIER LPAREN . params RPAREN

    IDENTIFIER   shift, and go to state 10
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    AMPERSAND    shift, and go to state 14

    $default  reduce using rule 44 (params)

    functionCall  go to state 15
    expression    go to state 16
    params        go to state 27


State 19

   45 params: IDENTIFIER COLON . type
   46       | IDENTIFIER COLON . AMPERSAND MUT type

    AMPERSAND  shift, and go to state 28
    INT        shift, and go to state 29
    BOOL       shift, and go to state 30

    type  go to state 31


State 20

   32 expression: AMPERSAND MUT . IDENTIFIER

    IDENTIFIER  shift, and go to state 32


State 21

   26 expression: expression PLUS . expression

    IDENTIFIER   shift, and go to state 33
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    AMPERSAND    shift, and go to state 14

    functionCall  go to state 15
    expression    go to state 34


State 22

   27 expression: expression MINUS . expression

    IDENTIFIER   shift, and go to state 33
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    AMPERSAND    shift, and go to state 14

    functionCall  go to state 15
    expression    go to state 35


State 23

   28 expression: expression STAR . expression

    IDENTIFIER   shift, and go to state 33
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    AMPERSAND    shift, and go to state 14

    functionCall  go to state 15
    expression    go to state 36


State 24

   29 expression: expression SLASH . expression

    IDENTIFIER   shift, and go to state 33
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    AMPERSAND    shift, and go to state 14

    functionCall  go to state 15
    expression    go to state 37


State 25

   48 params: expression COMMA . params

    IDENTIFIER   shift, and go to state 10
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    AMPERSAND    shift, and go to state 14

    $default  reduce using rule 44 (params)

    functionCall  go to state 15
    expression    go to state 16
    params        go to state 38


State 26

    5 function: FN IDENTIFIER LPAREN params RPAREN . blockStatement
    6         | FN IDENTIFIER LPAREN params RPAREN . ARROW type blockStatement

    ARROW   shift, and go to state 39
    LBRACE  shift, and go to state 40

    blockStatement  go to state 41


State 27

    7 functionCall: IDENTIFIER LPAREN params . RPAREN

    RPAREN  shift, and go to state 42


State 28

   46 params: IDENTIFIER COLON AMPERSAND . MUT type

    MUT  shift, and go to state 43


State 29

   49 type: INT .

    $default  reduce using rule 49 (type)


State 30

   50 type: BOOL .

    $default  reduce using rule 50 (type)


State 31

   45 params: IDENTIFIER COLON type .

    $default  reduce using rule 45 (params)


State 32

   32 expression: AMPERSAND MUT IDENTIFIER .

    $default  reduce using rule 32 (expression)


State 33

    7 functionCall: IDENTIFIER . LPAREN params RPAREN
   24 expression: IDENTIFIER .

    LPAREN  shift, and go to state 18

    $default  reduce using rule 24 (expression)


State 34

   26 expression: expression . PLUS expression
   26           | expression PLUS expression .
   27           | expression . MINUS expression
   28           | expression . STAR expression
   29           | expression . SLASH expression

    STAR   shift, and go to state 23
    SLASH  shift, and go to state 24

    $default  reduce using rule 26 (expression)


State 35

   26 expression: expression . PLUS expression
   27           | expression . MINUS expression
   27           | expression MINUS expression .
   28           | expression . STAR expression
   29           | expression . SLASH expression

    STAR   shift, and go to state 23
    SLASH  shift, and go to state 24

    $default  reduce using rule 27 (expression)


State 36

   26 expression: expression . PLUS expression
   27           | expression . MINUS expression
   28           | expression . STAR expression
   28           | expression STAR expression .
   29           | expression . SLASH expression

    $default  reduce using rule 28 (expression)


State 37

   26 expression: expression . PLUS expression
   27           | expression . MINUS expression
   28           | expression . STAR expression
   29           | expression . SLASH expression
   29           | expression SLASH expression .

    $default  reduce using rule 29 (expression)


State 38

   48 params: expression COMMA params .

    $default  reduce using rule 48 (params)


State 39

    6 function: FN IDENTIFIER LPAREN params RPAREN ARROW . type blockStatement

    INT   shift, and go to state 29
    BOOL  shift, and go to state 30

    type  go to state 44


State 40

    8 blockStatement: LBRACE . statements RBRACE

    IF  shift, and go to state 45

    $default  reduce using rule 9 (statements)

    statements  go to state 46


State 41

    5 function: FN IDENTIFIER LPAREN params RPAREN blockStatement .

    $default  reduce using rule 5 (function)


State 42

    7 functionCall: IDENTIFIER LPAREN params RPAREN .

    $default  reduce using rule 7 (functionCall)


State 43

   46 params: IDENTIFIER COLON AMPERSAND MUT . type

    INT   shift, and go to state 29
    BOOL  shift, and go to state 30

    type  go to state 47


State 44

    6 function: FN IDENTIFIER LPAREN params RPAREN ARROW type . blockStatement

    LBRACE  shift, and go to state 40

    blockStatement  go to state 48


State 45

   16 statements: IF . conditional blockStatement
   17           | IF . conditional blockStatement ELSE blockStatement

    IDENTIFIER   shift, and go to state 33
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    AMPERSAND    shift, and go to state 14

    functionCall  go to state 15
    expression    go to state 49
    conditional   go to state 50


State 46

    8 blockStatement: LBRACE statements . RBRACE
   10 statements: statements . statement SEMICOLON
   11           | statements . declaration SEMICOLON
   12           | statements . assignment SEMICOLON
   13           | statements . functionCall SEMICOLON
   14           | statements . expression
   15           | statements . declaration

    IDENTIFIER   shift, and go to state 51
    PRINTVAR     shift, and go to state 52
    PRINTSTRING  shift, and go to state 53
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    RBRACE       shift, and go to state 54
    LET          shift, and go to state 55
    AMPERSAND    shift, and go to state 14

    functionCall  go to state 56
    statement     go to state 57
    expression    go to state 58
    declaration   go to state 59
    assignment    go to state 60


State 47

   46 params: IDENTIFIER COLON AMPERSAND MUT type .

    $default  reduce using rule 46 (params)


State 48

    6 function: FN IDENTIFIER LPAREN params RPAREN ARROW type blockStatement .

    $default  reduce using rule 6 (function)


State 49

   26 expression: expression . PLUS expression
   27           | expression . MINUS expression
   28           | expression . STAR expression
   29           | expression . SLASH expression
   33 conditional: expression . LT expression
   34            | expression . LE expression
   35            | expression . GT expression
   36            | expression . GE expression
   37            | expression .

    PLUS   shift, and go to state 21
    MINUS  shift, and go to state 22
    STAR   shift, and go to state 23
    SLASH  shift, and go to state 24
    GT     shift, and go to state 61
    GE     shift, and go to state 62
    LT     shift, and go to state 63
    LE     shift, and go to state 64

    $default  reduce using rule 37 (conditional)


State 50

   16 statements: IF conditional . blockStatement
   17           | IF conditional . blockStatement ELSE blockStatement

    LBRACE  shift, and go to state 40

    blockStatement  go to state 65


State 51

    7 functionCall: IDENTIFIER . LPAREN params RPAREN
   19 statement: IDENTIFIER . PLUSEQ expression
   22          | IDENTIFIER . LBRACE params RBRACE
   24 expression: IDENTIFIER .
   41 assignment: IDENTIFIER . EQ expression
   42           | IDENTIFIER . EQ IF conditional blockStatement
   43           | IDENTIFIER . EQ IF conditional blockStatement ELSE blockStatement

    LPAREN  shift, and go to state 18
    LBRACE  shift, and go to state 66
    EQ      shift, and go to state 67
    PLUSEQ  shift, and go to state 68

    $default  reduce using rule 24 (expression)


State 52

   21 statement: PRINTVAR .

    $default  reduce using rule 21 (statement)


State 53

   20 statement: PRINTSTRING .

    $default  reduce using rule 20 (statement)


State 54

    8 blockStatement: LBRACE statements RBRACE .

    $default  reduce using rule 8 (blockStatement)


State 55

   18 statement: LET . IDENTIFIER EQ expression
   38 declaration: LET . IDENTIFIER COLON type
   39            | LET . IDENTIFIER EQ blockStatement
   40            | LET . MUT IDENTIFIER EQ expression

    IDENTIFIER  shift, and go to state 69
    MUT         shift, and go to state 70


State 56

   13 statements: statements functionCall . SEMICOLON
   25 expression: functionCall .

    SEMICOLON  shift, and go to state 71

    $default  reduce using rule 25 (expression)


State 57

   10 statements: statements statement . SEMICOLON

    SEMICOLON  shift, and go to state 72


State 58

   14 statements: statements expression .
   26 expression: expression . PLUS expression
   27           | expression . MINUS expression
   28           | expression . STAR expression
   29           | expression . SLASH expression

    PLUS   shift, and go to state 21
    MINUS  shift, and go to state 22
    STAR   shift, and go to state 23
    SLASH  shift, and go to state 24

    $default  reduce using rule 14 (statements)


State 59

   11 statements: statements declaration . SEMICOLON
   15           | statements declaration .

    SEMICOLON  shift, and go to state 73

    $default  reduce using rule 15 (statements)


State 60

   12 statements: statements assignment . SEMICOLON

    SEMICOLON  shift, and go to state 74


State 61

   35 conditional: expression GT . expression

    IDENTIFIER   shift, and go to state 33
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    AMPERSAND    shift, and go to state 14

    functionCall  go to state 15
    expression    go to state 75


State 62

   36 conditional: expression GE . expression

    IDENTIFIER   shift, and go to state 33
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    AMPERSAND    shift, and go to state 14

    functionCall  go to state 15
    expression    go to state 76


State 63

   33 conditional: expression LT . expression

    IDENTIFIER   shift, and go to state 33
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    AMPERSAND    shift, and go to state 14

    functionCall  go to state 15
    expression    go to state 77


State 64

   34 conditional: expression LE . expression

    IDENTIFIER   shift, and go to state 33
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    AMPERSAND    shift, and go to state 14

    functionCall  go to state 15
    expression    go to state 78


State 65

   16 statements: IF conditional blockStatement .
   17           | IF conditional blockStatement . ELSE blockStatement

    ELSE  shift, and go to state 79

    $default  reduce using rule 16 (statements)


State 66

   22 statement: IDENTIFIER LBRACE . params RBRACE

    IDENTIFIER   shift, and go to state 10
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    AMPERSAND    shift, and go to state 14

    $default  reduce using rule 44 (params)

    functionCall  go to state 15
    expression    go to state 16
    params        go to state 80


State 67

   41 assignment: IDENTIFIER EQ . expression
   42           | IDENTIFIER EQ . IF conditional blockStatement
   43           | IDENTIFIER EQ . IF conditional blockStatement ELSE blockStatement

    IDENTIFIER   shift, and go to state 33
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    AMPERSAND    shift, and go to state 14
    IF           shift, and go to state 81

    functionCall  go to state 15
    expression    go to state 82


State 68

   19 statement: IDENTIFIER PLUSEQ . expression

    IDENTIFIER   shift, and go to state 33
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    AMPERSAND    shift, and go to state 14

    functionCall  go to state 15
    expression    go to state 83


State 69

   18 statement: LET IDENTIFIER . EQ expression
   38 declaration: LET IDENTIFIER . COLON type
   39            | LET IDENTIFIER . EQ blockStatement

    COLON  shift, and go to state 84
    EQ     shift, and go to state 85


State 70

   40 declaration: LET MUT . IDENTIFIER EQ expression

    IDENTIFIER  shift, and go to state 86


State 71

   13 statements: statements functionCall SEMICOLON .

    $default  reduce using rule 13 (statements)


State 72

   10 statements: statements statement SEMICOLON .

    $default  reduce using rule 10 (statements)


State 73

   11 statements: statements declaration SEMICOLON .

    $default  reduce using rule 11 (statements)


State 74

   12 statements: statements assignment SEMICOLON .

    $default  reduce using rule 12 (statements)


State 75

   26 expression: expression . PLUS expression
   27           | expression . MINUS expression
   28           | expression . STAR expression
   29           | expression . SLASH expression
   35 conditional: expression GT expression .

    PLUS   shift, and go to state 21
    MINUS  shift, and go to state 22
    STAR   shift, and go to state 23
    SLASH  shift, and go to state 24

    $default  reduce using rule 35 (conditional)


State 76

   26 expression: expression . PLUS expression
   27           | expression . MINUS expression
   28           | expression . STAR expression
   29           | expression . SLASH expression
   36 conditional: expression GE expression .

    PLUS   shift, and go to state 21
    MINUS  shift, and go to state 22
    STAR   shift, and go to state 23
    SLASH  shift, and go to state 24

    $default  reduce using rule 36 (conditional)


State 77

   26 expression: expression . PLUS expression
   27           | expression . MINUS expression
   28           | expression . STAR expression
   29           | expression . SLASH expression
   33 conditional: expression LT expression .

    PLUS   shift, and go to state 21
    MINUS  shift, and go to state 22
    STAR   shift, and go to state 23
    SLASH  shift, and go to state 24

    $default  reduce using rule 33 (conditional)


State 78

   26 expression: expression . PLUS expression
   27           | expression . MINUS expression
   28           | expression . STAR expression
   29           | expression . SLASH expression
   34 conditional: expression LE expression .

    PLUS   shift, and go to state 21
    MINUS  shift, and go to state 22
    STAR   shift, and go to state 23
    SLASH  shift, and go to state 24

    $default  reduce using rule 34 (conditional)


State 79

   17 statements: IF conditional blockStatement ELSE . blockStatement

    LBRACE  shift, and go to state 40

    blockStatement  go to state 87


State 80

   22 statement: IDENTIFIER LBRACE params . RBRACE

    RBRACE  shift, and go to state 88


State 81

   42 assignment: IDENTIFIER EQ IF . conditional blockStatement
   43           | IDENTIFIER EQ IF . conditional blockStatement ELSE blockStatement

    IDENTIFIER   shift, and go to state 33
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    AMPERSAND    shift, and go to state 14

    functionCall  go to state 15
    expression    go to state 49
    conditional   go to state 89


State 82

   26 expression: expression . PLUS expression
   27           | expression . MINUS expression
   28           | expression . STAR expression
   29           | expression . SLASH expression
   41 assignment: IDENTIFIER EQ expression .

    PLUS   shift, and go to state 21
    MINUS  shift, and go to state 22
    STAR   shift, and go to state 23
    SLASH  shift, and go to state 24

    $default  reduce using rule 41 (assignment)


State 83

   19 statement: IDENTIFIER PLUSEQ expression .
   26 expression: expression . PLUS expression
   27           | expression . MINUS expression
   28           | expression . STAR expression
   29           | expression . SLASH expression

    PLUS   shift, and go to state 21
    MINUS  shift, and go to state 22
    STAR   shift, and go to state 23
    SLASH  shift, and go to state 24

    $default  reduce using rule 19 (statement)


State 84

   38 declaration: LET IDENTIFIER COLON . type

    INT   shift, and go to state 29
    BOOL  shift, and go to state 30

    type  go to state 90


State 85

   18 statement: LET IDENTIFIER EQ . expression
   39 declaration: LET IDENTIFIER EQ . blockStatement

    IDENTIFIER   shift, and go to state 33
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    LBRACE       shift, and go to state 40
    AMPERSAND    shift, and go to state 14

    functionCall    go to state 15
    blockStatement  go to state 91
    expression      go to state 92


State 86

   40 declaration: LET MUT IDENTIFIER . EQ expression

    EQ  shift, and go to state 93


State 87

   17 statements: IF conditional blockStatement ELSE blockStatement .

    $default  reduce using rule 17 (statements)


State 88

   22 statement: IDENTIFIER LBRACE params RBRACE .

    $default  reduce using rule 22 (statement)


State 89

   42 assignment: IDENTIFIER EQ IF conditional . blockStatement
   43           | IDENTIFIER EQ IF conditional . blockStatement ELSE blockStatement

    LBRACE  shift, and go to state 40

    blockStatement  go to state 94


State 90

   38 declaration: LET IDENTIFIER COLON type .

    $default  reduce using rule 38 (declaration)


State 91

   39 declaration: LET IDENTIFIER EQ blockStatement .

    $default  reduce using rule 39 (declaration)


State 92

   18 statement: LET IDENTIFIER EQ expression .
   26 expression: expression . PLUS expression
   27           | expression . MINUS expression
   28           | expression . STAR expression
   29           | expression . SLASH expression

    PLUS   shift, and go to state 21
    MINUS  shift, and go to state 22
    STAR   shift, and go to state 23
    SLASH  shift, and go to state 24

    $default  reduce using rule 18 (statement)


State 93

   40 declaration: LET MUT IDENTIFIER EQ . expression

    IDENTIFIER   shift, and go to state 33
    DEC_LITERAL  shift, and go to state 11
    TRUE         shift, and go to state 12
    FALSE        shift, and go to state 13
    AMPERSAND    shift, and go to state 14

    functionCall  go to state 15
    expression    go to state 95


State 94

   42 assignment: IDENTIFIER EQ IF conditional blockStatement .
   43           | IDENTIFIER EQ IF conditional blockStatement . ELSE blockStatement

    ELSE  shift, and go to state 96

    $default  reduce using rule 42 (assignment)


State 95

   26 expression: expression . PLUS expression
   27           | expression . MINUS expression
   28           | expression . STAR expression
   29           | expression . SLASH expression
   40 declaration: LET MUT IDENTIFIER EQ expression .

    PLUS   shift, and go to state 21
    MINUS  shift, and go to state 22
    STAR   shift, and go to state 23
    SLASH  shift, and go to state 24

    $default  reduce using rule 40 (declaration)


State 96

   43 assignment: IDENTIFIER EQ IF conditional blockStatement ELSE . blockStatement

    LBRACE  shift, and go to state 40

    blockStatement  go to state 97


State 97

   43 assignment: IDENTIFIER EQ IF conditional blockStatement ELSE blockStatement .

    $default  reduce using rule 43 (assignment)
