Terminals unused in grammar

   ANDAND
   OROR
   AMPERSAND
   WHILE


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | program function

    3 function: FN IDENTIFIER LPAREN parameter_list RPAREN return_type block_statement
    4         | FN IDENTIFIER LPAREN parameter_list RPAREN return_type block_expression

    5 return_type: /* empty */
    6            | ARROW type

    7 parameter_list: /* empty */
    8               | parameter_list COMMA parameter
    9               | parameter

   10 parameter: IDENTIFIER COLON type
   11          | expression

   12 type: INT
   13     | BOOL

   14 statement_list: /* empty */
   15               | statement_list statement

   16 statement: let_statement SEMICOLON
   17          | assign_statement SEMICOLON
   18          | expression_statement SEMICOLON
   19          | if_statement
   20          | print_statement SEMICOLON
   21          | declaration_statement SEMICOLON

   22 declaration_statement: LET mutability IDENTIFIER COLON type

   23 print_statement: PRINTSTRING
   24                | PRINTVAR

   25 let_statement: LET mutability IDENTIFIER COLON type EQ expression
   26              | LET mutability IDENTIFIER EQ expression

   27 assign_statement: IDENTIFIER assignment_operator expression_statement

   28 assignment_operator: EQ
   29                    | PLUSEQ
   30                    | MINUSEQ

   31 expression_statement: expression

   32 expression: value
   33           | function_call
   34           | IDENTIFIER
   35           | if_expression
   36           | expression PLUS expression
   37           | expression MINUS expression
   38           | expression STAR expression
   39           | expression SLASH expression

   40 function_call: IDENTIFIER LPAREN parameter_list RPAREN

   41 if_statement: IF conditional block_statement
   42             | IF conditional block_statement ELSE block_statement

   43 if_expression: IF conditional block_expression
   44              | IF conditional block_expression ELSE block_expression

   45 conditional: expression LT expression
   46            | expression LE expression
   47            | expression GT expression
   48            | expression GE expression
   49            | expression NE expression
   50            | expression EQEQ expression
   51            | NOT expression
   52            | TRUE
   53            | FALSE

   54 block_statement: LBRACE statement_list RBRACE

   55 block_expression: LBRACE statement_list expression RBRACE

   56 value: DEC_LITERAL
   57      | TRUE
   58      | FALSE

   59 mutability: /* empty */
   60           | MUT


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENTIFIER (258) 3 4 10 22 25 26 27 34 40
PRINTVAR (259) 24
PRINTSTRING (260) 23
DEC_LITERAL (261) 56
TRUE (262) 52 57
FALSE (263) 53 58
FN (264) 3 4
LPAREN (265) 3 4 40
RPAREN (266) 3 4 40
ARROW (267) 6
LBRACE (268) 54 55
RBRACE (269) 54 55
SEMICOLON (270) 16 17 18 20 21
COLON (271) 10 22 25
LET (272) 22 25 26
EQ (273) 25 26 28
PLUS (274) 36
MINUS (275) 37
STAR (276) 38
SLASH (277) 39
PLUSEQ (278) 29
MINUSEQ (279) 30
ANDAND (280)
OROR (281)
NOT (282) 51
GT (283) 47
GE (284) 48
LT (285) 45
LE (286) 46
EQEQ (287) 50
NE (288) 49
AMPERSAND (289)
IF (290) 41 42 43 44
ELSE (291) 42 44
WHILE (292)
MUT (293) 60
COMMA (294) 8
INT (295) 12
BOOL (296) 13


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
program (43)
    on left: 1 2, on right: 0 2
function (44)
    on left: 3 4, on right: 2
return_type (45)
    on left: 5 6, on right: 3 4
parameter_list (46)
    on left: 7 8 9, on right: 3 4 8 40
parameter (47)
    on left: 10 11, on right: 8 9
type (48)
    on left: 12 13, on right: 6 10 22 25
statement_list (49)
    on left: 14 15, on right: 15 54 55
statement (50)
    on left: 16 17 18 19 20 21, on right: 15
declaration_statement (51)
    on left: 22, on right: 21
print_statement (52)
    on left: 23 24, on right: 20
let_statement (53)
    on left: 25 26, on right: 16
assign_statement (54)
    on left: 27, on right: 17
assignment_operator (55)
    on left: 28 29 30, on right: 27
expression_statement (56)
    on left: 31, on right: 18 27
expression (57)
    on left: 32 33 34 35 36 37 38 39, on right: 11 25 26 31 36 37 38
    39 45 46 47 48 49 50 51 55
function_call (58)
    on left: 40, on right: 33
if_statement (59)
    on left: 41 42, on right: 19
if_expression (60)
    on left: 43 44, on right: 35
conditional (61)
    on left: 45 46 47 48 49 50 51 52 53, on right: 41 42 43 44
block_statement (62)
    on left: 54, on right: 3 41 42
block_expression (63)
    on left: 55, on right: 4 43 44
value (64)
    on left: 56 57 58, on right: 32
mutability (65)
    on left: 59 60, on right: 22 25 26


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . function

    $end  shift, and go to state 2
    FN    shift, and go to state 3

    function  go to state 4


State 2

    0 $accept: program $end .

    $default  accept


State 3

    3 function: FN . IDENTIFIER LPAREN parameter_list RPAREN return_type block_statement
    4         | FN . IDENTIFIER LPAREN parameter_list RPAREN return_type block_expression

    IDENTIFIER  shift, and go to state 5


State 4

    2 program: program function .

    $default  reduce using rule 2 (program)


State 5

    3 function: FN IDENTIFIER . LPAREN parameter_list RPAREN return_type block_statement
    4         | FN IDENTIFIER . LPAREN parameter_list RPAREN return_type block_expression

    LPAREN  shift, and go to state 6


State 6

    3 function: FN IDENTIFIER LPAREN . parameter_list RPAREN return_type block_statement
    4         | FN IDENTIFIER LPAREN . parameter_list RPAREN return_type block_expression

    IDENTIFIER   shift, and go to state 7
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    IF           shift, and go to state 11

    $default  reduce using rule 7 (parameter_list)

    parameter_list  go to state 12
    parameter       go to state 13
    expression      go to state 14
    function_call   go to state 15
    if_expression   go to state 16
    value           go to state 17


State 7

   10 parameter: IDENTIFIER . COLON type
   34 expression: IDENTIFIER .
   40 function_call: IDENTIFIER . LPAREN parameter_list RPAREN

    LPAREN  shift, and go to state 18
    COLON   shift, and go to state 19

    $default  reduce using rule 34 (expression)


State 8

   56 value: DEC_LITERAL .

    $default  reduce using rule 56 (value)


State 9

   57 value: TRUE .

    $default  reduce using rule 57 (value)


State 10

   58 value: FALSE .

    $default  reduce using rule 58 (value)


State 11

   43 if_expression: IF . conditional block_expression
   44              | IF . conditional block_expression ELSE block_expression

    IDENTIFIER   shift, and go to state 20
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 21
    FALSE        shift, and go to state 22
    NOT          shift, and go to state 23
    IF           shift, and go to state 11

    expression     go to state 24
    function_call  go to state 15
    if_expression  go to state 16
    conditional    go to state 25
    value          go to state 17


State 12

    3 function: FN IDENTIFIER LPAREN parameter_list . RPAREN return_type block_statement
    4         | FN IDENTIFIER LPAREN parameter_list . RPAREN return_type block_expression
    8 parameter_list: parameter_list . COMMA parameter

    RPAREN  shift, and go to state 26
    COMMA   shift, and go to state 27


State 13

    9 parameter_list: parameter .

    $default  reduce using rule 9 (parameter_list)


State 14

   11 parameter: expression .
   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression

    PLUS   shift, and go to state 28
    MINUS  shift, and go to state 29
    STAR   shift, and go to state 30
    SLASH  shift, and go to state 31

    $default  reduce using rule 11 (parameter)


State 15

   33 expression: function_call .

    $default  reduce using rule 33 (expression)


State 16

   35 expression: if_expression .

    $default  reduce using rule 35 (expression)


State 17

   32 expression: value .

    $default  reduce using rule 32 (expression)


State 18

   40 function_call: IDENTIFIER LPAREN . parameter_list RPAREN

    IDENTIFIER   shift, and go to state 7
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    IF           shift, and go to state 11

    $default  reduce using rule 7 (parameter_list)

    parameter_list  go to state 32
    parameter       go to state 13
    expression      go to state 14
    function_call   go to state 15
    if_expression   go to state 16
    value           go to state 17


State 19

   10 parameter: IDENTIFIER COLON . type

    INT   shift, and go to state 33
    BOOL  shift, and go to state 34

    type  go to state 35


State 20

   34 expression: IDENTIFIER .
   40 function_call: IDENTIFIER . LPAREN parameter_list RPAREN

    LPAREN  shift, and go to state 18

    $default  reduce using rule 34 (expression)


State 21

   52 conditional: TRUE .
   57 value: TRUE .

    LBRACE    reduce using rule 52 (conditional)
    $default  reduce using rule 57 (value)


State 22

   53 conditional: FALSE .
   58 value: FALSE .

    LBRACE    reduce using rule 53 (conditional)
    $default  reduce using rule 58 (value)


State 23

   51 conditional: NOT . expression

    IDENTIFIER   shift, and go to state 20
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    IF           shift, and go to state 11

    expression     go to state 36
    function_call  go to state 15
    if_expression  go to state 16
    value          go to state 17


State 24

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   45 conditional: expression . LT expression
   46            | expression . LE expression
   47            | expression . GT expression
   48            | expression . GE expression
   49            | expression . NE expression
   50            | expression . EQEQ expression

    PLUS   shift, and go to state 28
    MINUS  shift, and go to state 29
    STAR   shift, and go to state 30
    SLASH  shift, and go to state 31
    GT     shift, and go to state 37
    GE     shift, and go to state 38
    LT     shift, and go to state 39
    LE     shift, and go to state 40
    EQEQ   shift, and go to state 41
    NE     shift, and go to state 42


State 25

   43 if_expression: IF conditional . block_expression
   44              | IF conditional . block_expression ELSE block_expression

    LBRACE  shift, and go to state 43

    block_expression  go to state 44


State 26

    3 function: FN IDENTIFIER LPAREN parameter_list RPAREN . return_type block_statement
    4         | FN IDENTIFIER LPAREN parameter_list RPAREN . return_type block_expression

    ARROW  shift, and go to state 45

    $default  reduce using rule 5 (return_type)

    return_type  go to state 46


State 27

    8 parameter_list: parameter_list COMMA . parameter

    IDENTIFIER   shift, and go to state 7
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    IF           shift, and go to state 11

    parameter      go to state 47
    expression     go to state 14
    function_call  go to state 15
    if_expression  go to state 16
    value          go to state 17


State 28

   36 expression: expression PLUS . expression

    IDENTIFIER   shift, and go to state 20
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    IF           shift, and go to state 11

    expression     go to state 48
    function_call  go to state 15
    if_expression  go to state 16
    value          go to state 17


State 29

   37 expression: expression MINUS . expression

    IDENTIFIER   shift, and go to state 20
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    IF           shift, and go to state 11

    expression     go to state 49
    function_call  go to state 15
    if_expression  go to state 16
    value          go to state 17


State 30

   38 expression: expression STAR . expression

    IDENTIFIER   shift, and go to state 20
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    IF           shift, and go to state 11

    expression     go to state 50
    function_call  go to state 15
    if_expression  go to state 16
    value          go to state 17


State 31

   39 expression: expression SLASH . expression

    IDENTIFIER   shift, and go to state 20
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    IF           shift, and go to state 11

    expression     go to state 51
    function_call  go to state 15
    if_expression  go to state 16
    value          go to state 17


State 32

    8 parameter_list: parameter_list . COMMA parameter
   40 function_call: IDENTIFIER LPAREN parameter_list . RPAREN

    RPAREN  shift, and go to state 52
    COMMA   shift, and go to state 27


State 33

   12 type: INT .

    $default  reduce using rule 12 (type)


State 34

   13 type: BOOL .

    $default  reduce using rule 13 (type)


State 35

   10 parameter: IDENTIFIER COLON type .

    $default  reduce using rule 10 (parameter)


State 36

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   51 conditional: NOT expression .

    PLUS   shift, and go to state 28
    MINUS  shift, and go to state 29
    STAR   shift, and go to state 30
    SLASH  shift, and go to state 31

    $default  reduce using rule 51 (conditional)


State 37

   47 conditional: expression GT . expression

    IDENTIFIER   shift, and go to state 20
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    IF           shift, and go to state 11

    expression     go to state 53
    function_call  go to state 15
    if_expression  go to state 16
    value          go to state 17


State 38

   48 conditional: expression GE . expression

    IDENTIFIER   shift, and go to state 20
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    IF           shift, and go to state 11

    expression     go to state 54
    function_call  go to state 15
    if_expression  go to state 16
    value          go to state 17


State 39

   45 conditional: expression LT . expression

    IDENTIFIER   shift, and go to state 20
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    IF           shift, and go to state 11

    expression     go to state 55
    function_call  go to state 15
    if_expression  go to state 16
    value          go to state 17


State 40

   46 conditional: expression LE . expression

    IDENTIFIER   shift, and go to state 20
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    IF           shift, and go to state 11

    expression     go to state 56
    function_call  go to state 15
    if_expression  go to state 16
    value          go to state 17


State 41

   50 conditional: expression EQEQ . expression

    IDENTIFIER   shift, and go to state 20
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    IF           shift, and go to state 11

    expression     go to state 57
    function_call  go to state 15
    if_expression  go to state 16
    value          go to state 17


State 42

   49 conditional: expression NE . expression

    IDENTIFIER   shift, and go to state 20
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    IF           shift, and go to state 11

    expression     go to state 58
    function_call  go to state 15
    if_expression  go to state 16
    value          go to state 17


State 43

   55 block_expression: LBRACE . statement_list expression RBRACE

    $default  reduce using rule 14 (statement_list)

    statement_list  go to state 59


State 44

   43 if_expression: IF conditional block_expression .
   44              | IF conditional block_expression . ELSE block_expression

    ELSE  shift, and go to state 60

    $default  reduce using rule 43 (if_expression)


State 45

    6 return_type: ARROW . type

    INT   shift, and go to state 33
    BOOL  shift, and go to state 34

    type  go to state 61


State 46

    3 function: FN IDENTIFIER LPAREN parameter_list RPAREN return_type . block_statement
    4         | FN IDENTIFIER LPAREN parameter_list RPAREN return_type . block_expression

    LBRACE  shift, and go to state 62

    block_statement   go to state 63
    block_expression  go to state 64


State 47

    8 parameter_list: parameter_list COMMA parameter .

    $default  reduce using rule 8 (parameter_list)


State 48

   36 expression: expression . PLUS expression
   36           | expression PLUS expression .
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression

    STAR   shift, and go to state 30
    SLASH  shift, and go to state 31

    $default  reduce using rule 36 (expression)


State 49

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   37           | expression MINUS expression .
   38           | expression . STAR expression
   39           | expression . SLASH expression

    STAR   shift, and go to state 30
    SLASH  shift, and go to state 31

    $default  reduce using rule 37 (expression)


State 50

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   38           | expression STAR expression .
   39           | expression . SLASH expression

    $default  reduce using rule 38 (expression)


State 51

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   39           | expression SLASH expression .

    $default  reduce using rule 39 (expression)


State 52

   40 function_call: IDENTIFIER LPAREN parameter_list RPAREN .

    $default  reduce using rule 40 (function_call)


State 53

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   47 conditional: expression GT expression .

    PLUS   shift, and go to state 28
    MINUS  shift, and go to state 29
    STAR   shift, and go to state 30
    SLASH  shift, and go to state 31

    $default  reduce using rule 47 (conditional)


State 54

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   48 conditional: expression GE expression .

    PLUS   shift, and go to state 28
    MINUS  shift, and go to state 29
    STAR   shift, and go to state 30
    SLASH  shift, and go to state 31

    $default  reduce using rule 48 (conditional)


State 55

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   45 conditional: expression LT expression .

    PLUS   shift, and go to state 28
    MINUS  shift, and go to state 29
    STAR   shift, and go to state 30
    SLASH  shift, and go to state 31

    $default  reduce using rule 45 (conditional)


State 56

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   46 conditional: expression LE expression .

    PLUS   shift, and go to state 28
    MINUS  shift, and go to state 29
    STAR   shift, and go to state 30
    SLASH  shift, and go to state 31

    $default  reduce using rule 46 (conditional)


State 57

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   50 conditional: expression EQEQ expression .

    PLUS   shift, and go to state 28
    MINUS  shift, and go to state 29
    STAR   shift, and go to state 30
    SLASH  shift, and go to state 31

    $default  reduce using rule 50 (conditional)


State 58

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   49 conditional: expression NE expression .

    PLUS   shift, and go to state 28
    MINUS  shift, and go to state 29
    STAR   shift, and go to state 30
    SLASH  shift, and go to state 31

    $default  reduce using rule 49 (conditional)


State 59

   15 statement_list: statement_list . statement
   55 block_expression: LBRACE statement_list . expression RBRACE

    IDENTIFIER   shift, and go to state 65
    PRINTVAR     shift, and go to state 66
    PRINTSTRING  shift, and go to state 67
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    LET          shift, and go to state 68
    IF           shift, and go to state 69

    statement              go to state 70
    declaration_statement  go to state 71
    print_statement        go to state 72
    let_statement          go to state 73
    assign_statement       go to state 74
    expression_statement   go to state 75
    expression             go to state 76
    function_call          go to state 15
    if_statement           go to state 77
    if_expression          go to state 16
    value                  go to state 17


State 60

   44 if_expression: IF conditional block_expression ELSE . block_expression

    LBRACE  shift, and go to state 43

    block_expression  go to state 78


State 61

    6 return_type: ARROW type .

    $default  reduce using rule 6 (return_type)


State 62

   54 block_statement: LBRACE . statement_list RBRACE
   55 block_expression: LBRACE . statement_list expression RBRACE

    $default  reduce using rule 14 (statement_list)

    statement_list  go to state 79


State 63

    3 function: FN IDENTIFIER LPAREN parameter_list RPAREN return_type block_statement .

    $default  reduce using rule 3 (function)


State 64

    4 function: FN IDENTIFIER LPAREN parameter_list RPAREN return_type block_expression .

    $default  reduce using rule 4 (function)


State 65

   27 assign_statement: IDENTIFIER . assignment_operator expression_statement
   34 expression: IDENTIFIER .
   40 function_call: IDENTIFIER . LPAREN parameter_list RPAREN

    LPAREN   shift, and go to state 18
    EQ       shift, and go to state 80
    PLUSEQ   shift, and go to state 81
    MINUSEQ  shift, and go to state 82

    $default  reduce using rule 34 (expression)

    assignment_operator  go to state 83


State 66

   24 print_statement: PRINTVAR .

    $default  reduce using rule 24 (print_statement)


State 67

   23 print_statement: PRINTSTRING .

    $default  reduce using rule 23 (print_statement)


State 68

   22 declaration_statement: LET . mutability IDENTIFIER COLON type
   25 let_statement: LET . mutability IDENTIFIER COLON type EQ expression
   26              | LET . mutability IDENTIFIER EQ expression

    MUT  shift, and go to state 84

    $default  reduce using rule 59 (mutability)

    mutability  go to state 85


State 69

   41 if_statement: IF . conditional block_statement
   42             | IF . conditional block_statement ELSE block_statement
   43 if_expression: IF . conditional block_expression
   44              | IF . conditional block_expression ELSE block_expression

    IDENTIFIER   shift, and go to state 20
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 21
    FALSE        shift, and go to state 22
    NOT          shift, and go to state 23
    IF           shift, and go to state 11

    expression     go to state 24
    function_call  go to state 15
    if_expression  go to state 16
    conditional    go to state 86
    value          go to state 17


State 70

   15 statement_list: statement_list statement .

    $default  reduce using rule 15 (statement_list)


State 71

   21 statement: declaration_statement . SEMICOLON

    SEMICOLON  shift, and go to state 87


State 72

   20 statement: print_statement . SEMICOLON

    SEMICOLON  shift, and go to state 88


State 73

   16 statement: let_statement . SEMICOLON

    SEMICOLON  shift, and go to state 89


State 74

   17 statement: assign_statement . SEMICOLON

    SEMICOLON  shift, and go to state 90


State 75

   18 statement: expression_statement . SEMICOLON

    SEMICOLON  shift, and go to state 91


State 76

   31 expression_statement: expression .
   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   55 block_expression: LBRACE statement_list expression . RBRACE

    RBRACE  shift, and go to state 92
    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    STAR    shift, and go to state 30
    SLASH   shift, and go to state 31

    $default  reduce using rule 31 (expression_statement)


State 77

   19 statement: if_statement .

    $default  reduce using rule 19 (statement)


State 78

   44 if_expression: IF conditional block_expression ELSE block_expression .

    $default  reduce using rule 44 (if_expression)


State 79

   15 statement_list: statement_list . statement
   54 block_statement: LBRACE statement_list . RBRACE
   55 block_expression: LBRACE statement_list . expression RBRACE

    IDENTIFIER   shift, and go to state 65
    PRINTVAR     shift, and go to state 66
    PRINTSTRING  shift, and go to state 67
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    RBRACE       shift, and go to state 93
    LET          shift, and go to state 68
    IF           shift, and go to state 69

    statement              go to state 70
    declaration_statement  go to state 71
    print_statement        go to state 72
    let_statement          go to state 73
    assign_statement       go to state 74
    expression_statement   go to state 75
    expression             go to state 76
    function_call          go to state 15
    if_statement           go to state 77
    if_expression          go to state 16
    value                  go to state 17


State 80

   28 assignment_operator: EQ .

    $default  reduce using rule 28 (assignment_operator)


State 81

   29 assignment_operator: PLUSEQ .

    $default  reduce using rule 29 (assignment_operator)


State 82

   30 assignment_operator: MINUSEQ .

    $default  reduce using rule 30 (assignment_operator)


State 83

   27 assign_statement: IDENTIFIER assignment_operator . expression_statement

    IDENTIFIER   shift, and go to state 20
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    IF           shift, and go to state 11

    expression_statement  go to state 94
    expression            go to state 95
    function_call         go to state 15
    if_expression         go to state 16
    value                 go to state 17


State 84

   60 mutability: MUT .

    $default  reduce using rule 60 (mutability)


State 85

   22 declaration_statement: LET mutability . IDENTIFIER COLON type
   25 let_statement: LET mutability . IDENTIFIER COLON type EQ expression
   26              | LET mutability . IDENTIFIER EQ expression

    IDENTIFIER  shift, and go to state 96


State 86

   41 if_statement: IF conditional . block_statement
   42             | IF conditional . block_statement ELSE block_statement
   43 if_expression: IF conditional . block_expression
   44              | IF conditional . block_expression ELSE block_expression

    LBRACE  shift, and go to state 62

    block_statement   go to state 97
    block_expression  go to state 44


State 87

   21 statement: declaration_statement SEMICOLON .

    $default  reduce using rule 21 (statement)


State 88

   20 statement: print_statement SEMICOLON .

    $default  reduce using rule 20 (statement)


State 89

   16 statement: let_statement SEMICOLON .

    $default  reduce using rule 16 (statement)


State 90

   17 statement: assign_statement SEMICOLON .

    $default  reduce using rule 17 (statement)


State 91

   18 statement: expression_statement SEMICOLON .

    $default  reduce using rule 18 (statement)


State 92

   55 block_expression: LBRACE statement_list expression RBRACE .

    $default  reduce using rule 55 (block_expression)


State 93

   54 block_statement: LBRACE statement_list RBRACE .

    $default  reduce using rule 54 (block_statement)


State 94

   27 assign_statement: IDENTIFIER assignment_operator expression_statement .

    $default  reduce using rule 27 (assign_statement)


State 95

   31 expression_statement: expression .
   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression

    PLUS   shift, and go to state 28
    MINUS  shift, and go to state 29
    STAR   shift, and go to state 30
    SLASH  shift, and go to state 31

    $default  reduce using rule 31 (expression_statement)


State 96

   22 declaration_statement: LET mutability IDENTIFIER . COLON type
   25 let_statement: LET mutability IDENTIFIER . COLON type EQ expression
   26              | LET mutability IDENTIFIER . EQ expression

    COLON  shift, and go to state 98
    EQ     shift, and go to state 99


State 97

   41 if_statement: IF conditional block_statement .
   42             | IF conditional block_statement . ELSE block_statement

    ELSE  shift, and go to state 100

    $default  reduce using rule 41 (if_statement)


State 98

   22 declaration_statement: LET mutability IDENTIFIER COLON . type
   25 let_statement: LET mutability IDENTIFIER COLON . type EQ expression

    INT   shift, and go to state 33
    BOOL  shift, and go to state 34

    type  go to state 101


State 99

   26 let_statement: LET mutability IDENTIFIER EQ . expression

    IDENTIFIER   shift, and go to state 20
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    IF           shift, and go to state 11

    expression     go to state 102
    function_call  go to state 15
    if_expression  go to state 16
    value          go to state 17


State 100

   42 if_statement: IF conditional block_statement ELSE . block_statement

    LBRACE  shift, and go to state 103

    block_statement  go to state 104


State 101

   22 declaration_statement: LET mutability IDENTIFIER COLON type .
   25 let_statement: LET mutability IDENTIFIER COLON type . EQ expression

    EQ  shift, and go to state 105

    $default  reduce using rule 22 (declaration_statement)


State 102

   26 let_statement: LET mutability IDENTIFIER EQ expression .
   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression

    PLUS   shift, and go to state 28
    MINUS  shift, and go to state 29
    STAR   shift, and go to state 30
    SLASH  shift, and go to state 31

    $default  reduce using rule 26 (let_statement)


State 103

   54 block_statement: LBRACE . statement_list RBRACE

    $default  reduce using rule 14 (statement_list)

    statement_list  go to state 106


State 104

   42 if_statement: IF conditional block_statement ELSE block_statement .

    $default  reduce using rule 42 (if_statement)


State 105

   25 let_statement: LET mutability IDENTIFIER COLON type EQ . expression

    IDENTIFIER   shift, and go to state 20
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    IF           shift, and go to state 11

    expression     go to state 107
    function_call  go to state 15
    if_expression  go to state 16
    value          go to state 17


State 106

   15 statement_list: statement_list . statement
   54 block_statement: LBRACE statement_list . RBRACE

    IDENTIFIER   shift, and go to state 65
    PRINTVAR     shift, and go to state 66
    PRINTSTRING  shift, and go to state 67
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    RBRACE       shift, and go to state 93
    LET          shift, and go to state 68
    IF           shift, and go to state 69

    statement              go to state 70
    declaration_statement  go to state 71
    print_statement        go to state 72
    let_statement          go to state 73
    assign_statement       go to state 74
    expression_statement   go to state 75
    expression             go to state 95
    function_call          go to state 15
    if_statement           go to state 77
    if_expression          go to state 16
    value                  go to state 17


State 107

   25 let_statement: LET mutability IDENTIFIER COLON type EQ expression .
   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression

    PLUS   shift, and go to state 28
    MINUS  shift, and go to state 29
    STAR   shift, and go to state 30
    SLASH  shift, and go to state 31

    $default  reduce using rule 25 (let_statement)
