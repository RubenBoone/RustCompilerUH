Terminals unused in grammar

   ANDAND
   OROR
   AMPERSAND
   WHILE


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | program function

    3 function: FN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    4         | FN IDENTIFIER LPAREN parameter_list RPAREN ARROW type LBRACE statement_list RBRACE

    5 parameter_list: /* empty */
    6               | parameter_list COMMA parameter
    7               | parameter

    8 parameter: IDENTIFIER COLON type
    9          | expression

   10 type: INT
   11     | BOOL

   12 statement_list: /* empty */
   13               | statement_list statement
   14               | block_expression

   15 block_expression: statement_list expression

   16 statement: let_statement SEMICOLON
   17          | assign_statement SEMICOLON
   18          | expression_statement SEMICOLON
   19          | if_statement
   20          | print_statement SEMICOLON
   21          | declaration_statement SEMICOLON

   22 declaration_statement: LET mutability IDENTIFIER COLON type

   23 print_statement: PRINTSTRING
   24                | PRINTVAR

   25 let_statement: LET mutability IDENTIFIER COLON type EQ expression
   26              | LET mutability IDENTIFIER EQ expression

   27 assign_statement: IDENTIFIER assignment_operator expression
   28                 | IDENTIFIER assignment_operator if_statement

   29 assignment_operator: EQ
   30                    | PLUSEQ
   31                    | MINUSEQ

   32 expression_statement: expression

   33 expression: value
   34           | function_call
   35           | IDENTIFIER
   36           | expression PLUS expression
   37           | expression MINUS expression
   38           | expression STAR expression
   39           | expression SLASH expression

   40 function_call: IDENTIFIER LPAREN parameter_list RPAREN

   41 if_statement: IF conditional block_statement
   42             | IF conditional block_statement ELSE block_statement

   43 conditional: expression LT expression
   44            | expression LE expression
   45            | expression GT expression
   46            | expression GE expression
   47            | expression NE expression
   48            | expression EQEQ expression
   49            | NOT expression
   50            | TRUE
   51            | FALSE

   52 block_statement: LBRACE statement_list RBRACE

   53 value: DEC_LITERAL
   54      | TRUE
   55      | FALSE

   56 mutability: /* empty */
   57           | MUT


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENTIFIER (258) 3 4 8 22 25 26 27 28 35 40
PRINTVAR (259) 24
PRINTSTRING (260) 23
DEC_LITERAL (261) 53
TRUE (262) 50 54
FALSE (263) 51 55
FN (264) 3 4
LPAREN (265) 3 4 40
RPAREN (266) 3 4 40
ARROW (267) 4
LBRACE (268) 3 4 52
RBRACE (269) 3 4 52
SEMICOLON (270) 16 17 18 20 21
COLON (271) 8 22 25
LET (272) 22 25 26
EQ (273) 25 26 29
PLUS (274) 36
MINUS (275) 37
STAR (276) 38
SLASH (277) 39
PLUSEQ (278) 30
MINUSEQ (279) 31
ANDAND (280)
OROR (281)
NOT (282) 49
GT (283) 45
GE (284) 46
LT (285) 43
LE (286) 44
EQEQ (287) 48
NE (288) 47
AMPERSAND (289)
IF (290) 41 42
ELSE (291) 42
WHILE (292)
MUT (293) 57
COMMA (294) 6
INT (295) 10
BOOL (296) 11


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
program (43)
    on left: 1 2, on right: 0 2
function (44)
    on left: 3 4, on right: 2
parameter_list (45)
    on left: 5 6 7, on right: 3 4 6 40
parameter (46)
    on left: 8 9, on right: 6 7
type (47)
    on left: 10 11, on right: 4 8 22 25
statement_list (48)
    on left: 12 13 14, on right: 3 4 13 15 52
block_expression (49)
    on left: 15, on right: 14
statement (50)
    on left: 16 17 18 19 20 21, on right: 13
declaration_statement (51)
    on left: 22, on right: 21
print_statement (52)
    on left: 23 24, on right: 20
let_statement (53)
    on left: 25 26, on right: 16
assign_statement (54)
    on left: 27 28, on right: 17
assignment_operator (55)
    on left: 29 30 31, on right: 27 28
expression_statement (56)
    on left: 32, on right: 18
expression (57)
    on left: 33 34 35 36 37 38 39, on right: 9 15 25 26 27 32 36 37
    38 39 43 44 45 46 47 48 49
function_call (58)
    on left: 40, on right: 34
if_statement (59)
    on left: 41 42, on right: 19 28
conditional (60)
    on left: 43 44 45 46 47 48 49 50 51, on right: 41 42
block_statement (61)
    on left: 52, on right: 41 42
value (62)
    on left: 53 54 55, on right: 33
mutability (63)
    on left: 56 57, on right: 22 25 26


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . function

    $end  shift, and go to state 2
    FN    shift, and go to state 3

    function  go to state 4


State 2

    0 $accept: program $end .

    $default  accept


State 3

    3 function: FN . IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    4         | FN . IDENTIFIER LPAREN parameter_list RPAREN ARROW type LBRACE statement_list RBRACE

    IDENTIFIER  shift, and go to state 5


State 4

    2 program: program function .

    $default  reduce using rule 2 (program)


State 5

    3 function: FN IDENTIFIER . LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    4         | FN IDENTIFIER . LPAREN parameter_list RPAREN ARROW type LBRACE statement_list RBRACE

    LPAREN  shift, and go to state 6


State 6

    3 function: FN IDENTIFIER LPAREN . parameter_list RPAREN LBRACE statement_list RBRACE
    4         | FN IDENTIFIER LPAREN . parameter_list RPAREN ARROW type LBRACE statement_list RBRACE

    IDENTIFIER   shift, and go to state 7
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10

    $default  reduce using rule 5 (parameter_list)

    parameter_list  go to state 11
    parameter       go to state 12
    expression      go to state 13
    function_call   go to state 14
    value           go to state 15


State 7

    8 parameter: IDENTIFIER . COLON type
   35 expression: IDENTIFIER .
   40 function_call: IDENTIFIER . LPAREN parameter_list RPAREN

    LPAREN  shift, and go to state 16
    COLON   shift, and go to state 17

    $default  reduce using rule 35 (expression)


State 8

   53 value: DEC_LITERAL .

    $default  reduce using rule 53 (value)


State 9

   54 value: TRUE .

    $default  reduce using rule 54 (value)


State 10

   55 value: FALSE .

    $default  reduce using rule 55 (value)


State 11

    3 function: FN IDENTIFIER LPAREN parameter_list . RPAREN LBRACE statement_list RBRACE
    4         | FN IDENTIFIER LPAREN parameter_list . RPAREN ARROW type LBRACE statement_list RBRACE
    6 parameter_list: parameter_list . COMMA parameter

    RPAREN  shift, and go to state 18
    COMMA   shift, and go to state 19


State 12

    7 parameter_list: parameter .

    $default  reduce using rule 7 (parameter_list)


State 13

    9 parameter: expression .
   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression

    PLUS   shift, and go to state 20
    MINUS  shift, and go to state 21
    STAR   shift, and go to state 22
    SLASH  shift, and go to state 23

    $default  reduce using rule 9 (parameter)


State 14

   34 expression: function_call .

    $default  reduce using rule 34 (expression)


State 15

   33 expression: value .

    $default  reduce using rule 33 (expression)


State 16

   40 function_call: IDENTIFIER LPAREN . parameter_list RPAREN

    IDENTIFIER   shift, and go to state 7
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10

    $default  reduce using rule 5 (parameter_list)

    parameter_list  go to state 24
    parameter       go to state 12
    expression      go to state 13
    function_call   go to state 14
    value           go to state 15


State 17

    8 parameter: IDENTIFIER COLON . type

    INT   shift, and go to state 25
    BOOL  shift, and go to state 26

    type  go to state 27


State 18

    3 function: FN IDENTIFIER LPAREN parameter_list RPAREN . LBRACE statement_list RBRACE
    4         | FN IDENTIFIER LPAREN parameter_list RPAREN . ARROW type LBRACE statement_list RBRACE

    ARROW   shift, and go to state 28
    LBRACE  shift, and go to state 29


State 19

    6 parameter_list: parameter_list COMMA . parameter

    IDENTIFIER   shift, and go to state 7
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10

    parameter      go to state 30
    expression     go to state 13
    function_call  go to state 14
    value          go to state 15


State 20

   36 expression: expression PLUS . expression

    IDENTIFIER   shift, and go to state 31
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10

    expression     go to state 32
    function_call  go to state 14
    value          go to state 15


State 21

   37 expression: expression MINUS . expression

    IDENTIFIER   shift, and go to state 31
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10

    expression     go to state 33
    function_call  go to state 14
    value          go to state 15


State 22

   38 expression: expression STAR . expression

    IDENTIFIER   shift, and go to state 31
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10

    expression     go to state 34
    function_call  go to state 14
    value          go to state 15


State 23

   39 expression: expression SLASH . expression

    IDENTIFIER   shift, and go to state 31
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10

    expression     go to state 35
    function_call  go to state 14
    value          go to state 15


State 24

    6 parameter_list: parameter_list . COMMA parameter
   40 function_call: IDENTIFIER LPAREN parameter_list . RPAREN

    RPAREN  shift, and go to state 36
    COMMA   shift, and go to state 19


State 25

   10 type: INT .

    $default  reduce using rule 10 (type)


State 26

   11 type: BOOL .

    $default  reduce using rule 11 (type)


State 27

    8 parameter: IDENTIFIER COLON type .

    $default  reduce using rule 8 (parameter)


State 28

    4 function: FN IDENTIFIER LPAREN parameter_list RPAREN ARROW . type LBRACE statement_list RBRACE

    INT   shift, and go to state 25
    BOOL  shift, and go to state 26

    type  go to state 37


State 29

    3 function: FN IDENTIFIER LPAREN parameter_list RPAREN LBRACE . statement_list RBRACE

    $default  reduce using rule 12 (statement_list)

    statement_list    go to state 38
    block_expression  go to state 39


State 30

    6 parameter_list: parameter_list COMMA parameter .

    $default  reduce using rule 6 (parameter_list)


State 31

   35 expression: IDENTIFIER .
   40 function_call: IDENTIFIER . LPAREN parameter_list RPAREN

    LPAREN  shift, and go to state 16

    $default  reduce using rule 35 (expression)


State 32

   36 expression: expression . PLUS expression
   36           | expression PLUS expression .
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression

    STAR   shift, and go to state 22
    SLASH  shift, and go to state 23

    $default  reduce using rule 36 (expression)


State 33

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   37           | expression MINUS expression .
   38           | expression . STAR expression
   39           | expression . SLASH expression

    STAR   shift, and go to state 22
    SLASH  shift, and go to state 23

    $default  reduce using rule 37 (expression)


State 34

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   38           | expression STAR expression .
   39           | expression . SLASH expression

    $default  reduce using rule 38 (expression)


State 35

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   39           | expression SLASH expression .

    $default  reduce using rule 39 (expression)


State 36

   40 function_call: IDENTIFIER LPAREN parameter_list RPAREN .

    $default  reduce using rule 40 (function_call)


State 37

    4 function: FN IDENTIFIER LPAREN parameter_list RPAREN ARROW type . LBRACE statement_list RBRACE

    LBRACE  shift, and go to state 40


State 38

    3 function: FN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list . RBRACE
   13 statement_list: statement_list . statement
   15 block_expression: statement_list . expression

    IDENTIFIER   shift, and go to state 41
    PRINTVAR     shift, and go to state 42
    PRINTSTRING  shift, and go to state 43
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    RBRACE       shift, and go to state 44
    LET          shift, and go to state 45
    IF           shift, and go to state 46

    statement              go to state 47
    declaration_statement  go to state 48
    print_statement        go to state 49
    let_statement          go to state 50
    assign_statement       go to state 51
    expression_statement   go to state 52
    expression             go to state 53
    function_call          go to state 14
    if_statement           go to state 54
    value                  go to state 15


State 39

   14 statement_list: block_expression .

    $default  reduce using rule 14 (statement_list)


State 40

    4 function: FN IDENTIFIER LPAREN parameter_list RPAREN ARROW type LBRACE . statement_list RBRACE

    $default  reduce using rule 12 (statement_list)

    statement_list    go to state 55
    block_expression  go to state 39


State 41

   27 assign_statement: IDENTIFIER . assignment_operator expression
   28                 | IDENTIFIER . assignment_operator if_statement
   35 expression: IDENTIFIER .
   40 function_call: IDENTIFIER . LPAREN parameter_list RPAREN

    LPAREN   shift, and go to state 16
    EQ       shift, and go to state 56
    PLUSEQ   shift, and go to state 57
    MINUSEQ  shift, and go to state 58

    $default  reduce using rule 35 (expression)

    assignment_operator  go to state 59


State 42

   24 print_statement: PRINTVAR .

    $default  reduce using rule 24 (print_statement)


State 43

   23 print_statement: PRINTSTRING .

    $default  reduce using rule 23 (print_statement)


State 44

    3 function: FN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .

    $default  reduce using rule 3 (function)


State 45

   22 declaration_statement: LET . mutability IDENTIFIER COLON type
   25 let_statement: LET . mutability IDENTIFIER COLON type EQ expression
   26              | LET . mutability IDENTIFIER EQ expression

    MUT  shift, and go to state 60

    $default  reduce using rule 56 (mutability)

    mutability  go to state 61


State 46

   41 if_statement: IF . conditional block_statement
   42             | IF . conditional block_statement ELSE block_statement

    IDENTIFIER   shift, and go to state 31
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 62
    FALSE        shift, and go to state 63
    NOT          shift, and go to state 64

    expression     go to state 65
    function_call  go to state 14
    conditional    go to state 66
    value          go to state 15


State 47

   13 statement_list: statement_list statement .

    $default  reduce using rule 13 (statement_list)


State 48

   21 statement: declaration_statement . SEMICOLON

    SEMICOLON  shift, and go to state 67


State 49

   20 statement: print_statement . SEMICOLON

    SEMICOLON  shift, and go to state 68


State 50

   16 statement: let_statement . SEMICOLON

    SEMICOLON  shift, and go to state 69


State 51

   17 statement: assign_statement . SEMICOLON

    SEMICOLON  shift, and go to state 70


State 52

   18 statement: expression_statement . SEMICOLON

    SEMICOLON  shift, and go to state 71


State 53

   15 block_expression: statement_list expression .
   32 expression_statement: expression .
   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression

    PLUS   shift, and go to state 20
    MINUS  shift, and go to state 21
    STAR   shift, and go to state 22
    SLASH  shift, and go to state 23

    SEMICOLON  reduce using rule 32 (expression_statement)
    $default   reduce using rule 15 (block_expression)


State 54

   19 statement: if_statement .

    $default  reduce using rule 19 (statement)


State 55

    4 function: FN IDENTIFIER LPAREN parameter_list RPAREN ARROW type LBRACE statement_list . RBRACE
   13 statement_list: statement_list . statement
   15 block_expression: statement_list . expression

    IDENTIFIER   shift, and go to state 41
    PRINTVAR     shift, and go to state 42
    PRINTSTRING  shift, and go to state 43
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    RBRACE       shift, and go to state 72
    LET          shift, and go to state 45
    IF           shift, and go to state 46

    statement              go to state 47
    declaration_statement  go to state 48
    print_statement        go to state 49
    let_statement          go to state 50
    assign_statement       go to state 51
    expression_statement   go to state 52
    expression             go to state 53
    function_call          go to state 14
    if_statement           go to state 54
    value                  go to state 15


State 56

   29 assignment_operator: EQ .

    $default  reduce using rule 29 (assignment_operator)


State 57

   30 assignment_operator: PLUSEQ .

    $default  reduce using rule 30 (assignment_operator)


State 58

   31 assignment_operator: MINUSEQ .

    $default  reduce using rule 31 (assignment_operator)


State 59

   27 assign_statement: IDENTIFIER assignment_operator . expression
   28                 | IDENTIFIER assignment_operator . if_statement

    IDENTIFIER   shift, and go to state 31
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    IF           shift, and go to state 46

    expression     go to state 73
    function_call  go to state 14
    if_statement   go to state 74
    value          go to state 15


State 60

   57 mutability: MUT .

    $default  reduce using rule 57 (mutability)


State 61

   22 declaration_statement: LET mutability . IDENTIFIER COLON type
   25 let_statement: LET mutability . IDENTIFIER COLON type EQ expression
   26              | LET mutability . IDENTIFIER EQ expression

    IDENTIFIER  shift, and go to state 75


State 62

   50 conditional: TRUE .
   54 value: TRUE .

    LBRACE    reduce using rule 50 (conditional)
    $default  reduce using rule 54 (value)


State 63

   51 conditional: FALSE .
   55 value: FALSE .

    LBRACE    reduce using rule 51 (conditional)
    $default  reduce using rule 55 (value)


State 64

   49 conditional: NOT . expression

    IDENTIFIER   shift, and go to state 31
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10

    expression     go to state 76
    function_call  go to state 14
    value          go to state 15


State 65

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   43 conditional: expression . LT expression
   44            | expression . LE expression
   45            | expression . GT expression
   46            | expression . GE expression
   47            | expression . NE expression
   48            | expression . EQEQ expression

    PLUS   shift, and go to state 20
    MINUS  shift, and go to state 21
    STAR   shift, and go to state 22
    SLASH  shift, and go to state 23
    GT     shift, and go to state 77
    GE     shift, and go to state 78
    LT     shift, and go to state 79
    LE     shift, and go to state 80
    EQEQ   shift, and go to state 81
    NE     shift, and go to state 82


State 66

   41 if_statement: IF conditional . block_statement
   42             | IF conditional . block_statement ELSE block_statement

    LBRACE  shift, and go to state 83

    block_statement  go to state 84


State 67

   21 statement: declaration_statement SEMICOLON .

    $default  reduce using rule 21 (statement)


State 68

   20 statement: print_statement SEMICOLON .

    $default  reduce using rule 20 (statement)


State 69

   16 statement: let_statement SEMICOLON .

    $default  reduce using rule 16 (statement)


State 70

   17 statement: assign_statement SEMICOLON .

    $default  reduce using rule 17 (statement)


State 71

   18 statement: expression_statement SEMICOLON .

    $default  reduce using rule 18 (statement)


State 72

    4 function: FN IDENTIFIER LPAREN parameter_list RPAREN ARROW type LBRACE statement_list RBRACE .

    $default  reduce using rule 4 (function)


State 73

   27 assign_statement: IDENTIFIER assignment_operator expression .
   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression

    PLUS   shift, and go to state 20
    MINUS  shift, and go to state 21
    STAR   shift, and go to state 22
    SLASH  shift, and go to state 23

    $default  reduce using rule 27 (assign_statement)


State 74

   28 assign_statement: IDENTIFIER assignment_operator if_statement .

    $default  reduce using rule 28 (assign_statement)


State 75

   22 declaration_statement: LET mutability IDENTIFIER . COLON type
   25 let_statement: LET mutability IDENTIFIER . COLON type EQ expression
   26              | LET mutability IDENTIFIER . EQ expression

    COLON  shift, and go to state 85
    EQ     shift, and go to state 86


State 76

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   49 conditional: NOT expression .

    PLUS   shift, and go to state 20
    MINUS  shift, and go to state 21
    STAR   shift, and go to state 22
    SLASH  shift, and go to state 23

    $default  reduce using rule 49 (conditional)


State 77

   45 conditional: expression GT . expression

    IDENTIFIER   shift, and go to state 31
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10

    expression     go to state 87
    function_call  go to state 14
    value          go to state 15


State 78

   46 conditional: expression GE . expression

    IDENTIFIER   shift, and go to state 31
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10

    expression     go to state 88
    function_call  go to state 14
    value          go to state 15


State 79

   43 conditional: expression LT . expression

    IDENTIFIER   shift, and go to state 31
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10

    expression     go to state 89
    function_call  go to state 14
    value          go to state 15


State 80

   44 conditional: expression LE . expression

    IDENTIFIER   shift, and go to state 31
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10

    expression     go to state 90
    function_call  go to state 14
    value          go to state 15


State 81

   48 conditional: expression EQEQ . expression

    IDENTIFIER   shift, and go to state 31
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10

    expression     go to state 91
    function_call  go to state 14
    value          go to state 15


State 82

   47 conditional: expression NE . expression

    IDENTIFIER   shift, and go to state 31
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10

    expression     go to state 92
    function_call  go to state 14
    value          go to state 15


State 83

   52 block_statement: LBRACE . statement_list RBRACE

    $default  reduce using rule 12 (statement_list)

    statement_list    go to state 93
    block_expression  go to state 39


State 84

   41 if_statement: IF conditional block_statement .
   42             | IF conditional block_statement . ELSE block_statement

    ELSE  shift, and go to state 94

    $default  reduce using rule 41 (if_statement)


State 85

   22 declaration_statement: LET mutability IDENTIFIER COLON . type
   25 let_statement: LET mutability IDENTIFIER COLON . type EQ expression

    INT   shift, and go to state 25
    BOOL  shift, and go to state 26

    type  go to state 95


State 86

   26 let_statement: LET mutability IDENTIFIER EQ . expression

    IDENTIFIER   shift, and go to state 31
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10

    expression     go to state 96
    function_call  go to state 14
    value          go to state 15


State 87

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   45 conditional: expression GT expression .

    PLUS   shift, and go to state 20
    MINUS  shift, and go to state 21
    STAR   shift, and go to state 22
    SLASH  shift, and go to state 23

    $default  reduce using rule 45 (conditional)


State 88

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   46 conditional: expression GE expression .

    PLUS   shift, and go to state 20
    MINUS  shift, and go to state 21
    STAR   shift, and go to state 22
    SLASH  shift, and go to state 23

    $default  reduce using rule 46 (conditional)


State 89

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   43 conditional: expression LT expression .

    PLUS   shift, and go to state 20
    MINUS  shift, and go to state 21
    STAR   shift, and go to state 22
    SLASH  shift, and go to state 23

    $default  reduce using rule 43 (conditional)


State 90

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   44 conditional: expression LE expression .

    PLUS   shift, and go to state 20
    MINUS  shift, and go to state 21
    STAR   shift, and go to state 22
    SLASH  shift, and go to state 23

    $default  reduce using rule 44 (conditional)


State 91

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   48 conditional: expression EQEQ expression .

    PLUS   shift, and go to state 20
    MINUS  shift, and go to state 21
    STAR   shift, and go to state 22
    SLASH  shift, and go to state 23

    $default  reduce using rule 48 (conditional)


State 92

   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression
   47 conditional: expression NE expression .

    PLUS   shift, and go to state 20
    MINUS  shift, and go to state 21
    STAR   shift, and go to state 22
    SLASH  shift, and go to state 23

    $default  reduce using rule 47 (conditional)


State 93

   13 statement_list: statement_list . statement
   15 block_expression: statement_list . expression
   52 block_statement: LBRACE statement_list . RBRACE

    IDENTIFIER   shift, and go to state 41
    PRINTVAR     shift, and go to state 42
    PRINTSTRING  shift, and go to state 43
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10
    RBRACE       shift, and go to state 97
    LET          shift, and go to state 45
    IF           shift, and go to state 46

    statement              go to state 47
    declaration_statement  go to state 48
    print_statement        go to state 49
    let_statement          go to state 50
    assign_statement       go to state 51
    expression_statement   go to state 52
    expression             go to state 53
    function_call          go to state 14
    if_statement           go to state 54
    value                  go to state 15


State 94

   42 if_statement: IF conditional block_statement ELSE . block_statement

    LBRACE  shift, and go to state 83

    block_statement  go to state 98


State 95

   22 declaration_statement: LET mutability IDENTIFIER COLON type .
   25 let_statement: LET mutability IDENTIFIER COLON type . EQ expression

    EQ  shift, and go to state 99

    $default  reduce using rule 22 (declaration_statement)


State 96

   26 let_statement: LET mutability IDENTIFIER EQ expression .
   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression

    PLUS   shift, and go to state 20
    MINUS  shift, and go to state 21
    STAR   shift, and go to state 22
    SLASH  shift, and go to state 23

    $default  reduce using rule 26 (let_statement)


State 97

   52 block_statement: LBRACE statement_list RBRACE .

    $default  reduce using rule 52 (block_statement)


State 98

   42 if_statement: IF conditional block_statement ELSE block_statement .

    $default  reduce using rule 42 (if_statement)


State 99

   25 let_statement: LET mutability IDENTIFIER COLON type EQ . expression

    IDENTIFIER   shift, and go to state 31
    DEC_LITERAL  shift, and go to state 8
    TRUE         shift, and go to state 9
    FALSE        shift, and go to state 10

    expression     go to state 100
    function_call  go to state 14
    value          go to state 15


State 100

   25 let_statement: LET mutability IDENTIFIER COLON type EQ expression .
   36 expression: expression . PLUS expression
   37           | expression . MINUS expression
   38           | expression . STAR expression
   39           | expression . SLASH expression

    PLUS   shift, and go to state 20
    MINUS  shift, and go to state 21
    STAR   shift, and go to state 22
    SLASH  shift, and go to state 23

    $default  reduce using rule 25 (let_statement)
